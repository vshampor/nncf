Search.setIndex({"docnames": ["_autoapi_templates/index", "_autoapi_templates/python/attribute", "_autoapi_templates/python/class", "_autoapi_templates/python/data", "_autoapi_templates/python/exception", "_autoapi_templates/python/function", "_autoapi_templates/python/method", "_autoapi_templates/python/module", "_autoapi_templates/python/package", "_autoapi_templates/python/property", "autoapi/nncf/api/compression/index", "autoapi/nncf/api/index", "autoapi/nncf/api/statistics/index", "autoapi/nncf/common/accuracy_aware_training/index", "autoapi/nncf/common/accuracy_aware_training/runner/index", "autoapi/nncf/common/accuracy_aware_training/runner_factory/index", "autoapi/nncf/common/accuracy_aware_training/statistics/index", "autoapi/nncf/common/accuracy_aware_training/training_loop/index", "autoapi/nncf/common/api_marker/index", "autoapi/nncf/common/collector/index", "autoapi/nncf/common/composite_compression/index", "autoapi/nncf/common/compression/index", "autoapi/nncf/common/deprecation/index", "autoapi/nncf/common/engine/index", "autoapi/nncf/common/exporter/index", "autoapi/nncf/common/factory/index", "autoapi/nncf/common/graph/definitions/index", "autoapi/nncf/common/graph/graph/index", "autoapi/nncf/common/graph/graph_matching/index", "autoapi/nncf/common/graph/index", "autoapi/nncf/common/graph/layer_attributes/index", "autoapi/nncf/common/graph/model_transformer/index", "autoapi/nncf/common/graph/operator_metatypes/index", "autoapi/nncf/common/graph/patterns/index", "autoapi/nncf/common/graph/patterns/manager/index", "autoapi/nncf/common/graph/patterns/patterns/index", "autoapi/nncf/common/graph/transformations/command_creation/index", "autoapi/nncf/common/graph/transformations/commands/index", "autoapi/nncf/common/graph/transformations/index", "autoapi/nncf/common/graph/transformations/layout/index", "autoapi/nncf/common/graph/utils/index", "autoapi/nncf/common/hardware/config/index", "autoapi/nncf/common/hardware/index", "autoapi/nncf/common/hardware/opset/index", "autoapi/nncf/common/index", "autoapi/nncf/common/initialization/batchnorm_adaptation/index", "autoapi/nncf/common/initialization/dataloader/index", "autoapi/nncf/common/initialization/index", "autoapi/nncf/common/insertion_point_graph/index", "autoapi/nncf/common/logging/index", "autoapi/nncf/common/logging/logger/index", "autoapi/nncf/common/logging/progress_bar/index", "autoapi/nncf/common/pruning/clusterization/index", "autoapi/nncf/common/pruning/index", "autoapi/nncf/common/pruning/mask_propagation/index", "autoapi/nncf/common/pruning/model_analysis/index", "autoapi/nncf/common/pruning/node_selector/index", "autoapi/nncf/common/pruning/operations/index", "autoapi/nncf/common/pruning/schedulers/index", "autoapi/nncf/common/pruning/shape_pruning_processor/index", "autoapi/nncf/common/pruning/statistics/index", "autoapi/nncf/common/pruning/structs/index", "autoapi/nncf/common/pruning/symbolic_mask/index", "autoapi/nncf/common/pruning/tensor_processor/index", "autoapi/nncf/common/pruning/utils/index", "autoapi/nncf/common/pruning/weights_flops_calculator/index", "autoapi/nncf/common/quantization/collectors/index", "autoapi/nncf/common/quantization/config_assignment/index", "autoapi/nncf/common/quantization/index", "autoapi/nncf/common/quantization/initialization/index", "autoapi/nncf/common/quantization/initialization/range/index", "autoapi/nncf/common/quantization/quantizer_propagation/graph/index", "autoapi/nncf/common/quantization/quantizer_propagation/grouping/index", "autoapi/nncf/common/quantization/quantizer_propagation/index", "autoapi/nncf/common/quantization/quantizer_propagation/solver/index", "autoapi/nncf/common/quantization/quantizer_propagation/structs/index", "autoapi/nncf/common/quantization/quantizer_propagation/visualizer/index", "autoapi/nncf/common/quantization/quantizer_removal/index", "autoapi/nncf/common/quantization/quantizer_setup/index", "autoapi/nncf/common/quantization/quantizers/index", "autoapi/nncf/common/quantization/statistics/index", "autoapi/nncf/common/quantization/structs/index", "autoapi/nncf/common/schedulers/index", "autoapi/nncf/common/scopes/index", "autoapi/nncf/common/sparsity/collector/index", "autoapi/nncf/common/sparsity/controller/index", "autoapi/nncf/common/sparsity/index", "autoapi/nncf/common/sparsity/schedulers/index", "autoapi/nncf/common/sparsity/statistics/index", "autoapi/nncf/common/stateful_classes_registry/index", "autoapi/nncf/common/statistics/index", "autoapi/nncf/common/tensor/index", "autoapi/nncf/common/tensor_statistics/aggregator/index", "autoapi/nncf/common/tensor_statistics/collectors/index", "autoapi/nncf/common/tensor_statistics/index", "autoapi/nncf/common/tensor_statistics/reduction/index", "autoapi/nncf/common/tensor_statistics/statistic_point/index", "autoapi/nncf/common/tensor_statistics/statistics/index", "autoapi/nncf/common/utils/backend/index", "autoapi/nncf/common/utils/debug/index", "autoapi/nncf/common/utils/decorators/index", "autoapi/nncf/common/utils/dot_file_rw/index", "autoapi/nncf/common/utils/helpers/index", "autoapi/nncf/common/utils/index", "autoapi/nncf/common/utils/logger/index", "autoapi/nncf/common/utils/os/index", "autoapi/nncf/common/utils/patcher/index", "autoapi/nncf/common/utils/registry/index", "autoapi/nncf/common/utils/tensorboard/index", "autoapi/nncf/common/utils/timer/index", "autoapi/nncf/config/config/index", "autoapi/nncf/config/definitions/index", "autoapi/nncf/config/extractors/index", "autoapi/nncf/config/index", "autoapi/nncf/config/schema/index", "autoapi/nncf/config/schemata/accuracy_aware/index", "autoapi/nncf/config/schemata/algo/binarization/index", "autoapi/nncf/config/schemata/algo/const_sparsity/index", "autoapi/nncf/config/schemata/algo/filter_pruning/index", "autoapi/nncf/config/schemata/algo/index", "autoapi/nncf/config/schemata/algo/knowledge_distillation/index", "autoapi/nncf/config/schemata/algo/magnitude_sparsity/index", "autoapi/nncf/config/schemata/algo/quantization/index", "autoapi/nncf/config/schemata/algo/rb_sparsity/index", "autoapi/nncf/config/schemata/basic/index", "autoapi/nncf/config/schemata/common/compression/index", "autoapi/nncf/config/schemata/common/index", "autoapi/nncf/config/schemata/common/initialization/index", "autoapi/nncf/config/schemata/common/sparsity/index", "autoapi/nncf/config/schemata/common/targeting/index", "autoapi/nncf/config/schemata/defaults/index", "autoapi/nncf/config/schemata/experimental_schema/index", "autoapi/nncf/config/schemata/index", "autoapi/nncf/config/structures/index", "autoapi/nncf/config/telemetry_extractors/index", "autoapi/nncf/config/utils/index", "autoapi/nncf/data/dataset/index", "autoapi/nncf/data/index", "autoapi/nncf/definitions/index", "autoapi/nncf/experimental/common/graph/index", "autoapi/nncf/experimental/common/graph/netron/index", "autoapi/nncf/experimental/common/index", "autoapi/nncf/experimental/common/pruning/index", "autoapi/nncf/experimental/common/pruning/nodes_grouping/index", "autoapi/nncf/experimental/common/pruning/operations/index", "autoapi/nncf/experimental/index", "autoapi/nncf/experimental/openvino/index", "autoapi/nncf/experimental/openvino/quantization/index", "autoapi/nncf/experimental/openvino/quantization/quantize/index", "autoapi/nncf/experimental/openvino_native/engine/index", "autoapi/nncf/experimental/openvino_native/graph/index", "autoapi/nncf/experimental/openvino_native/graph/metatypes/common/index", "autoapi/nncf/experimental/openvino_native/graph/metatypes/index", "autoapi/nncf/experimental/openvino_native/graph/metatypes/openvino_metatypes/index", "autoapi/nncf/experimental/openvino_native/graph/model_transformer/index", "autoapi/nncf/experimental/openvino_native/graph/nncf_graph_builder/index", "autoapi/nncf/experimental/openvino_native/graph/node_utils/index", "autoapi/nncf/experimental/openvino_native/graph/transformations/command_creation/index", "autoapi/nncf/experimental/openvino_native/graph/transformations/commands/index", "autoapi/nncf/experimental/openvino_native/graph/transformations/index", "autoapi/nncf/experimental/openvino_native/hardware/config/index", "autoapi/nncf/experimental/openvino_native/hardware/fused_patterns/index", "autoapi/nncf/experimental/openvino_native/hardware/index", "autoapi/nncf/experimental/openvino_native/hardware/pattern_operations/index", "autoapi/nncf/experimental/openvino_native/index", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/bias_correction/index", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/bias_correction/openvino_backend/index", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/fast_bias_correction/index", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/fast_bias_correction/openvino_backend/index", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/index", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/min_max/index", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/min_max/openvino_backend/index", "autoapi/nncf/experimental/openvino_native/quantization/default_quantization/index", "autoapi/nncf/experimental/openvino_native/quantization/index", "autoapi/nncf/experimental/openvino_native/quantization/quantize/index", "autoapi/nncf/experimental/openvino_native/statistics/aggregator/index", "autoapi/nncf/experimental/openvino_native/statistics/collectors/index", "autoapi/nncf/experimental/openvino_native/statistics/index", "autoapi/nncf/experimental/openvino_native/statistics/statistics/index", "autoapi/nncf/experimental/openvino_native/tensor/index", "autoapi/nncf/experimental/tensorflow/context/index", "autoapi/nncf/experimental/tensorflow/graph/argprovider/index", "autoapi/nncf/experimental/tensorflow/graph/converter/index", "autoapi/nncf/experimental/tensorflow/graph/index", "autoapi/nncf/experimental/tensorflow/graph/model_transformer/index", "autoapi/nncf/experimental/tensorflow/graph/node_attributes/index", "autoapi/nncf/experimental/tensorflow/graph/transformations/commands/index", "autoapi/nncf/experimental/tensorflow/graph/transformations/index", "autoapi/nncf/experimental/tensorflow/graph/transformations/layout/index", "autoapi/nncf/experimental/tensorflow/index", "autoapi/nncf/experimental/tensorflow/nncf_network/index", "autoapi/nncf/experimental/tensorflow/patch_tf/index", "autoapi/nncf/experimental/tensorflow/quantization/algorithm/index", "autoapi/nncf/experimental/tensorflow/quantization/index", "autoapi/nncf/experimental/tensorflow/quantization/init_range/index", "autoapi/nncf/experimental/tensorflow/quantization/quantizers/index", "autoapi/nncf/experimental/tensorflow/scope/index", "autoapi/nncf/experimental/torch/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/base_handler/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elastic_depth/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elastic_kernel/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elastic_width/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elasticity_builder/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elasticity_controller/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elasticity_dim/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/filter_reorder/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/multi_elasticity_handler/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/visualization/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/search/evaluator/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/search/evaluator_handler/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/search/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/search/search/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/base_training/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/lr_scheduler/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/model_creator_helpers/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/progressive_shrinking_builder/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/progressive_shrinking_controller/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/scheduler/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/stage_descriptor/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/training_algorithm/index", "autoapi/nncf/experimental/torch/nas/index", "autoapi/nncf/experimental/torch/pruning/index", "autoapi/nncf/experimental/torch/pruning/operations/index", "autoapi/nncf/experimental/torch/quantization/index", "autoapi/nncf/experimental/torch/quantization/quantize/index", "autoapi/nncf/experimental/torch/search_building_blocks/index", "autoapi/nncf/experimental/torch/search_building_blocks/search_blocks/index", "autoapi/nncf/experimental/torch/search_building_blocks/search_graph/index", "autoapi/nncf/experimental/torch/sparsity/index", "autoapi/nncf/experimental/torch/sparsity/movement/algo/index", "autoapi/nncf/experimental/torch/sparsity/movement/functions/index", "autoapi/nncf/experimental/torch/sparsity/movement/index", "autoapi/nncf/experimental/torch/sparsity/movement/layers/index", "autoapi/nncf/experimental/torch/sparsity/movement/loss/index", "autoapi/nncf/experimental/torch/sparsity/movement/scheduler/index", "autoapi/nncf/experimental/torch/sparsity/movement/structured_mask_handler/index", "autoapi/nncf/index", "autoapi/nncf/onnx/engine/index", "autoapi/nncf/onnx/graph/index", "autoapi/nncf/onnx/graph/metatypes/index", "autoapi/nncf/onnx/graph/metatypes/onnx_metatypes/index", "autoapi/nncf/onnx/graph/model_transformer/index", "autoapi/nncf/onnx/graph/nncf_graph_builder/index", "autoapi/nncf/onnx/graph/node_utils/index", "autoapi/nncf/onnx/graph/onnx_graph/index", "autoapi/nncf/onnx/graph/transformations/command_creation/index", "autoapi/nncf/onnx/graph/transformations/commands/index", "autoapi/nncf/onnx/graph/transformations/index", "autoapi/nncf/onnx/hardware/config/index", "autoapi/nncf/onnx/hardware/fused_patterns/index", "autoapi/nncf/onnx/hardware/index", "autoapi/nncf/onnx/hardware/pattern_operations/index", "autoapi/nncf/onnx/index", "autoapi/nncf/onnx/quantization/default_quantization/index", "autoapi/nncf/onnx/quantization/index", "autoapi/nncf/onnx/quantization/quantize/index", "autoapi/nncf/onnx/quantization/quantizer_parameters/index", "autoapi/nncf/onnx/statistics/aggregator/index", "autoapi/nncf/onnx/statistics/collectors/index", "autoapi/nncf/onnx/statistics/index", "autoapi/nncf/onnx/statistics/statistics/index", "autoapi/nncf/onnx/tensor/index", "autoapi/nncf/openvino/engine/index", "autoapi/nncf/openvino/index", "autoapi/nncf/openvino/quantization/accuracy_aware/index", "autoapi/nncf/openvino/quantization/index", "autoapi/nncf/openvino/quantization/quantize/index", "autoapi/nncf/parameters/index", "autoapi/nncf/quantization/algorithms/accuracy_control/algorithm/index", "autoapi/nncf/quantization/algorithms/accuracy_control/backend/index", "autoapi/nncf/quantization/algorithms/accuracy_control/index", "autoapi/nncf/quantization/algorithms/accuracy_control/openvino_backend/index", "autoapi/nncf/quantization/algorithms/accuracy_control/rank_functions/index", "autoapi/nncf/quantization/algorithms/accuracy_control/ranker/index", "autoapi/nncf/quantization/algorithms/algorithm/index", "autoapi/nncf/quantization/algorithms/bias_correction/algorithm/index", "autoapi/nncf/quantization/algorithms/bias_correction/backend/index", "autoapi/nncf/quantization/algorithms/bias_correction/index", "autoapi/nncf/quantization/algorithms/bias_correction/onnx_backend/index", "autoapi/nncf/quantization/algorithms/definitions/index", "autoapi/nncf/quantization/algorithms/fast_bias_correction/algorithm/index", "autoapi/nncf/quantization/algorithms/fast_bias_correction/backend/index", "autoapi/nncf/quantization/algorithms/fast_bias_correction/index", "autoapi/nncf/quantization/algorithms/fast_bias_correction/onnx_backend/index", "autoapi/nncf/quantization/algorithms/index", "autoapi/nncf/quantization/algorithms/min_max/algorithm/index", "autoapi/nncf/quantization/algorithms/min_max/backend/index", "autoapi/nncf/quantization/algorithms/min_max/index", "autoapi/nncf/quantization/algorithms/min_max/onnx_backend/index", "autoapi/nncf/quantization/algorithms/min_max/torch_backend/index", "autoapi/nncf/quantization/algorithms/post_training/algorithm/index", "autoapi/nncf/quantization/algorithms/post_training/index", "autoapi/nncf/quantization/fake_quantize/index", "autoapi/nncf/quantization/index", "autoapi/nncf/quantization/passes/index", "autoapi/nncf/quantization/quantize/index", "autoapi/nncf/quantization/telemetry_extractors/index", "autoapi/nncf/scopes/index", "autoapi/nncf/telemetry/decorator/index", "autoapi/nncf/telemetry/events/index", "autoapi/nncf/telemetry/extractors/index", "autoapi/nncf/telemetry/index", "autoapi/nncf/telemetry/wrapper/index", "autoapi/nncf/tensorflow/accuracy_aware_training/index", "autoapi/nncf/tensorflow/accuracy_aware_training/keras_model_utils/index", "autoapi/nncf/tensorflow/accuracy_aware_training/runner/index", "autoapi/nncf/tensorflow/algorithm_selector/index", "autoapi/nncf/tensorflow/api/composite_compression/index", "autoapi/nncf/tensorflow/api/compression/index", "autoapi/nncf/tensorflow/api/index", "autoapi/nncf/tensorflow/batchnorm_adaptation/index", "autoapi/nncf/tensorflow/callbacks/checkpoint_callback/index", "autoapi/nncf/tensorflow/callbacks/index", "autoapi/nncf/tensorflow/callbacks/statistics_callback/index", "autoapi/nncf/tensorflow/exporter/index", "autoapi/nncf/tensorflow/functions/index", "autoapi/nncf/tensorflow/graph/converter/index", "autoapi/nncf/tensorflow/graph/index", "autoapi/nncf/tensorflow/graph/metatypes/common/index", "autoapi/nncf/tensorflow/graph/metatypes/index", "autoapi/nncf/tensorflow/graph/metatypes/keras_layers/index", "autoapi/nncf/tensorflow/graph/metatypes/matcher/index", "autoapi/nncf/tensorflow/graph/metatypes/tf_ops/index", "autoapi/nncf/tensorflow/graph/model_transformer/index", "autoapi/nncf/tensorflow/graph/pattern_operations/index", "autoapi/nncf/tensorflow/graph/patterns/index", "autoapi/nncf/tensorflow/graph/transformations/commands/index", "autoapi/nncf/tensorflow/graph/transformations/index", "autoapi/nncf/tensorflow/graph/transformations/layout/index", "autoapi/nncf/tensorflow/graph/utils/index", "autoapi/nncf/tensorflow/hardware/config/index", "autoapi/nncf/tensorflow/hardware/fused_patterns/index", "autoapi/nncf/tensorflow/hardware/index", "autoapi/nncf/tensorflow/helpers/callback_creation/index", "autoapi/nncf/tensorflow/helpers/index", "autoapi/nncf/tensorflow/helpers/model_creation/index", "autoapi/nncf/tensorflow/helpers/model_manager/index", "autoapi/nncf/tensorflow/helpers/utils/index", "autoapi/nncf/tensorflow/index", "autoapi/nncf/tensorflow/initialization/index", "autoapi/nncf/tensorflow/layers/custom_objects/index", "autoapi/nncf/tensorflow/layers/data_layout/index", "autoapi/nncf/tensorflow/layers/index", "autoapi/nncf/tensorflow/layers/operation/index", "autoapi/nncf/tensorflow/layers/wrapper/index", "autoapi/nncf/tensorflow/loss/index", "autoapi/nncf/tensorflow/pruning/base_algorithm/index", "autoapi/nncf/tensorflow/pruning/callbacks/index", "autoapi/nncf/tensorflow/pruning/filter_pruning/algorithm/index", "autoapi/nncf/tensorflow/pruning/filter_pruning/functions/index", "autoapi/nncf/tensorflow/pruning/filter_pruning/index", "autoapi/nncf/tensorflow/pruning/index", "autoapi/nncf/tensorflow/pruning/operations/index", "autoapi/nncf/tensorflow/pruning/tensor_processor/index", "autoapi/nncf/tensorflow/pruning/utils/index", "autoapi/nncf/tensorflow/quantization/algorithm/index", "autoapi/nncf/tensorflow/quantization/collectors/index", "autoapi/nncf/tensorflow/quantization/default_quantization/index", "autoapi/nncf/tensorflow/quantization/functions/index", "autoapi/nncf/tensorflow/quantization/index", "autoapi/nncf/tensorflow/quantization/init_range/index", "autoapi/nncf/tensorflow/quantization/layers/index", "autoapi/nncf/tensorflow/quantization/quantize/index", "autoapi/nncf/tensorflow/quantization/quantizers/index", "autoapi/nncf/tensorflow/quantization/utils/index", "autoapi/nncf/tensorflow/sparsity/base_algorithm/index", "autoapi/nncf/tensorflow/sparsity/callbacks/index", "autoapi/nncf/tensorflow/sparsity/collector/index", "autoapi/nncf/tensorflow/sparsity/index", "autoapi/nncf/tensorflow/sparsity/magnitude/algorithm/index", "autoapi/nncf/tensorflow/sparsity/magnitude/functions/index", "autoapi/nncf/tensorflow/sparsity/magnitude/index", "autoapi/nncf/tensorflow/sparsity/magnitude/operation/index", "autoapi/nncf/tensorflow/sparsity/rb/algorithm/index", "autoapi/nncf/tensorflow/sparsity/rb/functions/index", "autoapi/nncf/tensorflow/sparsity/rb/index", "autoapi/nncf/tensorflow/sparsity/rb/loss/index", "autoapi/nncf/tensorflow/sparsity/rb/operation/index", "autoapi/nncf/tensorflow/sparsity/utils/index", "autoapi/nncf/tensorflow/tensor/index", "autoapi/nncf/tensorflow/tensor_statistics/collectors/index", "autoapi/nncf/tensorflow/tensor_statistics/index", "autoapi/nncf/tensorflow/tensor_statistics/reduction/index", "autoapi/nncf/tensorflow/tensor_statistics/statistics/index", "autoapi/nncf/tensorflow/tf_internals/index", "autoapi/nncf/tensorflow/utils/hook_handle/index", "autoapi/nncf/tensorflow/utils/index", "autoapi/nncf/tensorflow/utils/node/index", "autoapi/nncf/tensorflow/utils/scopes_handle/index", "autoapi/nncf/tensorflow/utils/state/index", "autoapi/nncf/torch/accuracy_aware_training/index", "autoapi/nncf/torch/accuracy_aware_training/runner/index", "autoapi/nncf/torch/accuracy_aware_training/utils/index", "autoapi/nncf/torch/algo_selector/index", "autoapi/nncf/torch/automl/agent/ddpg/ddpg/index", "autoapi/nncf/torch/automl/agent/ddpg/index", "autoapi/nncf/torch/automl/agent/ddpg/memory/index", "autoapi/nncf/torch/automl/agent/index", "autoapi/nncf/torch/automl/environment/index", "autoapi/nncf/torch/automl/environment/quantization_env/index", "autoapi/nncf/torch/automl/index", "autoapi/nncf/torch/batchnorm_adaptation/index", "autoapi/nncf/torch/binarization/algo/index", "autoapi/nncf/torch/binarization/binarize_functions/index", "autoapi/nncf/torch/binarization/extensions/index", "autoapi/nncf/torch/binarization/index", "autoapi/nncf/torch/binarization/layers/index", "autoapi/nncf/torch/binarization/reference/index", "autoapi/nncf/torch/checkpoint_loading/index", "autoapi/nncf/torch/composite_compression/index", "autoapi/nncf/torch/compression_method_api/index", "autoapi/nncf/torch/debug/index", "autoapi/nncf/torch/dynamic_graph/context/index", "autoapi/nncf/torch/dynamic_graph/graph/index", "autoapi/nncf/torch/dynamic_graph/graph_tracer/index", "autoapi/nncf/torch/dynamic_graph/index", "autoapi/nncf/torch/dynamic_graph/io_handling/index", "autoapi/nncf/torch/dynamic_graph/layer_attributes_handlers/index", "autoapi/nncf/torch/dynamic_graph/op_input_processing/index", "autoapi/nncf/torch/dynamic_graph/operation_address/index", "autoapi/nncf/torch/dynamic_graph/patch_pytorch/index", "autoapi/nncf/torch/dynamic_graph/scope/index", "autoapi/nncf/torch/dynamic_graph/scope_access/index", "autoapi/nncf/torch/dynamic_graph/structs/index", "autoapi/nncf/torch/dynamic_graph/trace_functions/index", "autoapi/nncf/torch/dynamic_graph/trace_tensor/index", "autoapi/nncf/torch/dynamic_graph/wrappers/index", "autoapi/nncf/torch/engine/index", "autoapi/nncf/torch/exporter/index", "autoapi/nncf/torch/extensions/index", "autoapi/nncf/torch/functions/index", "autoapi/nncf/torch/graph/graph/index", "autoapi/nncf/torch/graph/graph_builder/index", "autoapi/nncf/torch/graph/index", "autoapi/nncf/torch/graph/operator_metatypes/index", "autoapi/nncf/torch/graph/pattern_operations/index", "autoapi/nncf/torch/graph/transformations/commands/index", "autoapi/nncf/torch/graph/transformations/index", "autoapi/nncf/torch/graph/transformations/layout/index", "autoapi/nncf/torch/hardware/config/index", "autoapi/nncf/torch/hardware/fused_patterns/index", "autoapi/nncf/torch/hardware/index", "autoapi/nncf/torch/index", "autoapi/nncf/torch/initialization/index", "autoapi/nncf/torch/knowledge_distillation/algo/index", "autoapi/nncf/torch/knowledge_distillation/index", "autoapi/nncf/torch/knowledge_distillation/knowledge_distillation_handler/index", "autoapi/nncf/torch/knowledge_distillation/knowledge_distillation_loss/index", "autoapi/nncf/torch/layer_utils/index", "autoapi/nncf/torch/layers/index", "autoapi/nncf/torch/model_creation/index", "autoapi/nncf/torch/module_operations/index", "autoapi/nncf/torch/nested_objects_traversal/index", "autoapi/nncf/torch/nncf_module_replacement/index", "autoapi/nncf/torch/nncf_network/index", "autoapi/nncf/torch/pruning/base_algo/index", "autoapi/nncf/torch/pruning/export_utils/index", "autoapi/nncf/torch/pruning/filter_pruning/algo/index", "autoapi/nncf/torch/pruning/filter_pruning/functions/index", "autoapi/nncf/torch/pruning/filter_pruning/global_ranking/evolutionary_optimization/index", "autoapi/nncf/torch/pruning/filter_pruning/global_ranking/index", "autoapi/nncf/torch/pruning/filter_pruning/global_ranking/legr/index", "autoapi/nncf/torch/pruning/filter_pruning/index", "autoapi/nncf/torch/pruning/filter_pruning/layers/index", "autoapi/nncf/torch/pruning/index", "autoapi/nncf/torch/pruning/operations/index", "autoapi/nncf/torch/pruning/structs/index", "autoapi/nncf/torch/pruning/tensor_processor/index", "autoapi/nncf/torch/pruning/utils/index", "autoapi/nncf/torch/quantization/adjust_padding/index", "autoapi/nncf/torch/quantization/algo/index", "autoapi/nncf/torch/quantization/default_quantization/index", "autoapi/nncf/torch/quantization/extensions/index", "autoapi/nncf/torch/quantization/hessian_trace/index", "autoapi/nncf/torch/quantization/index", "autoapi/nncf/torch/quantization/init_precision/index", "autoapi/nncf/torch/quantization/init_range/index", "autoapi/nncf/torch/quantization/layers/index", "autoapi/nncf/torch/quantization/metrics/index", "autoapi/nncf/torch/quantization/precision_constraints/index", "autoapi/nncf/torch/quantization/precision_init/adjacent_quantizers/index", "autoapi/nncf/torch/quantization/precision_init/autoq_init/index", "autoapi/nncf/torch/quantization/precision_init/base_init/index", "autoapi/nncf/torch/quantization/precision_init/bitwidth_graph/index", "autoapi/nncf/torch/quantization/precision_init/compression_ratio/index", "autoapi/nncf/torch/quantization/precision_init/hawq_debug/index", "autoapi/nncf/torch/quantization/precision_init/hawq_init/index", "autoapi/nncf/torch/quantization/precision_init/index", "autoapi/nncf/torch/quantization/precision_init/manual_init/index", "autoapi/nncf/torch/quantization/precision_init/perturbations/index", "autoapi/nncf/torch/quantization/precision_init/traces_order/index", "autoapi/nncf/torch/quantization/prepare_for_inference/index", "autoapi/nncf/torch/quantization/quantize/index", "autoapi/nncf/torch/quantization/quantize_functions/index", "autoapi/nncf/torch/quantization/reference/index", "autoapi/nncf/torch/quantization/schedulers/index", "autoapi/nncf/torch/quantization/statistics/index", "autoapi/nncf/torch/quantization/structs/index", "autoapi/nncf/torch/quantization/translator/index", "autoapi/nncf/torch/sparsity/base_algo/index", "autoapi/nncf/torch/sparsity/collector/index", "autoapi/nncf/torch/sparsity/const/algo/index", "autoapi/nncf/torch/sparsity/const/index", "autoapi/nncf/torch/sparsity/functions/index", "autoapi/nncf/torch/sparsity/index", "autoapi/nncf/torch/sparsity/layers/index", "autoapi/nncf/torch/sparsity/magnitude/algo/index", "autoapi/nncf/torch/sparsity/magnitude/functions/index", "autoapi/nncf/torch/sparsity/magnitude/index", "autoapi/nncf/torch/sparsity/rb/algo/index", "autoapi/nncf/torch/sparsity/rb/functions/index", "autoapi/nncf/torch/sparsity/rb/index", "autoapi/nncf/torch/sparsity/rb/layers/index", "autoapi/nncf/torch/sparsity/rb/loss/index", "autoapi/nncf/torch/statistics/aggregator/index", "autoapi/nncf/torch/statistics/index", "autoapi/nncf/torch/structures/index", "autoapi/nncf/torch/tensor/index", "autoapi/nncf/torch/tensor_statistics/algo/index", "autoapi/nncf/torch/tensor_statistics/collectors/index", "autoapi/nncf/torch/tensor_statistics/index", "autoapi/nncf/torch/tensor_statistics/reduction/index", "autoapi/nncf/torch/tensor_statistics/statistics/index", "autoapi/nncf/torch/utils/index", "autoapi/nncf/version/index", "index"], "filenames": ["_autoapi_templates/index.rst", "_autoapi_templates/python/attribute.rst", "_autoapi_templates/python/class.rst", "_autoapi_templates/python/data.rst", "_autoapi_templates/python/exception.rst", "_autoapi_templates/python/function.rst", "_autoapi_templates/python/method.rst", "_autoapi_templates/python/module.rst", "_autoapi_templates/python/package.rst", "_autoapi_templates/python/property.rst", "autoapi/nncf/api/compression/index.rst", "autoapi/nncf/api/index.rst", "autoapi/nncf/api/statistics/index.rst", "autoapi/nncf/common/accuracy_aware_training/index.rst", "autoapi/nncf/common/accuracy_aware_training/runner/index.rst", "autoapi/nncf/common/accuracy_aware_training/runner_factory/index.rst", "autoapi/nncf/common/accuracy_aware_training/statistics/index.rst", "autoapi/nncf/common/accuracy_aware_training/training_loop/index.rst", "autoapi/nncf/common/api_marker/index.rst", "autoapi/nncf/common/collector/index.rst", "autoapi/nncf/common/composite_compression/index.rst", "autoapi/nncf/common/compression/index.rst", "autoapi/nncf/common/deprecation/index.rst", "autoapi/nncf/common/engine/index.rst", "autoapi/nncf/common/exporter/index.rst", "autoapi/nncf/common/factory/index.rst", "autoapi/nncf/common/graph/definitions/index.rst", "autoapi/nncf/common/graph/graph/index.rst", "autoapi/nncf/common/graph/graph_matching/index.rst", "autoapi/nncf/common/graph/index.rst", "autoapi/nncf/common/graph/layer_attributes/index.rst", "autoapi/nncf/common/graph/model_transformer/index.rst", "autoapi/nncf/common/graph/operator_metatypes/index.rst", "autoapi/nncf/common/graph/patterns/index.rst", "autoapi/nncf/common/graph/patterns/manager/index.rst", "autoapi/nncf/common/graph/patterns/patterns/index.rst", "autoapi/nncf/common/graph/transformations/command_creation/index.rst", "autoapi/nncf/common/graph/transformations/commands/index.rst", "autoapi/nncf/common/graph/transformations/index.rst", "autoapi/nncf/common/graph/transformations/layout/index.rst", "autoapi/nncf/common/graph/utils/index.rst", "autoapi/nncf/common/hardware/config/index.rst", "autoapi/nncf/common/hardware/index.rst", "autoapi/nncf/common/hardware/opset/index.rst", "autoapi/nncf/common/index.rst", "autoapi/nncf/common/initialization/batchnorm_adaptation/index.rst", "autoapi/nncf/common/initialization/dataloader/index.rst", "autoapi/nncf/common/initialization/index.rst", "autoapi/nncf/common/insertion_point_graph/index.rst", "autoapi/nncf/common/logging/index.rst", "autoapi/nncf/common/logging/logger/index.rst", "autoapi/nncf/common/logging/progress_bar/index.rst", "autoapi/nncf/common/pruning/clusterization/index.rst", "autoapi/nncf/common/pruning/index.rst", "autoapi/nncf/common/pruning/mask_propagation/index.rst", "autoapi/nncf/common/pruning/model_analysis/index.rst", "autoapi/nncf/common/pruning/node_selector/index.rst", "autoapi/nncf/common/pruning/operations/index.rst", "autoapi/nncf/common/pruning/schedulers/index.rst", "autoapi/nncf/common/pruning/shape_pruning_processor/index.rst", "autoapi/nncf/common/pruning/statistics/index.rst", "autoapi/nncf/common/pruning/structs/index.rst", "autoapi/nncf/common/pruning/symbolic_mask/index.rst", "autoapi/nncf/common/pruning/tensor_processor/index.rst", "autoapi/nncf/common/pruning/utils/index.rst", "autoapi/nncf/common/pruning/weights_flops_calculator/index.rst", "autoapi/nncf/common/quantization/collectors/index.rst", "autoapi/nncf/common/quantization/config_assignment/index.rst", "autoapi/nncf/common/quantization/index.rst", "autoapi/nncf/common/quantization/initialization/index.rst", "autoapi/nncf/common/quantization/initialization/range/index.rst", "autoapi/nncf/common/quantization/quantizer_propagation/graph/index.rst", "autoapi/nncf/common/quantization/quantizer_propagation/grouping/index.rst", "autoapi/nncf/common/quantization/quantizer_propagation/index.rst", "autoapi/nncf/common/quantization/quantizer_propagation/solver/index.rst", "autoapi/nncf/common/quantization/quantizer_propagation/structs/index.rst", "autoapi/nncf/common/quantization/quantizer_propagation/visualizer/index.rst", "autoapi/nncf/common/quantization/quantizer_removal/index.rst", "autoapi/nncf/common/quantization/quantizer_setup/index.rst", "autoapi/nncf/common/quantization/quantizers/index.rst", "autoapi/nncf/common/quantization/statistics/index.rst", "autoapi/nncf/common/quantization/structs/index.rst", "autoapi/nncf/common/schedulers/index.rst", "autoapi/nncf/common/scopes/index.rst", "autoapi/nncf/common/sparsity/collector/index.rst", "autoapi/nncf/common/sparsity/controller/index.rst", "autoapi/nncf/common/sparsity/index.rst", "autoapi/nncf/common/sparsity/schedulers/index.rst", "autoapi/nncf/common/sparsity/statistics/index.rst", "autoapi/nncf/common/stateful_classes_registry/index.rst", "autoapi/nncf/common/statistics/index.rst", "autoapi/nncf/common/tensor/index.rst", "autoapi/nncf/common/tensor_statistics/aggregator/index.rst", "autoapi/nncf/common/tensor_statistics/collectors/index.rst", "autoapi/nncf/common/tensor_statistics/index.rst", "autoapi/nncf/common/tensor_statistics/reduction/index.rst", "autoapi/nncf/common/tensor_statistics/statistic_point/index.rst", "autoapi/nncf/common/tensor_statistics/statistics/index.rst", "autoapi/nncf/common/utils/backend/index.rst", "autoapi/nncf/common/utils/debug/index.rst", "autoapi/nncf/common/utils/decorators/index.rst", "autoapi/nncf/common/utils/dot_file_rw/index.rst", "autoapi/nncf/common/utils/helpers/index.rst", "autoapi/nncf/common/utils/index.rst", "autoapi/nncf/common/utils/logger/index.rst", "autoapi/nncf/common/utils/os/index.rst", "autoapi/nncf/common/utils/patcher/index.rst", "autoapi/nncf/common/utils/registry/index.rst", "autoapi/nncf/common/utils/tensorboard/index.rst", "autoapi/nncf/common/utils/timer/index.rst", "autoapi/nncf/config/config/index.rst", "autoapi/nncf/config/definitions/index.rst", "autoapi/nncf/config/extractors/index.rst", "autoapi/nncf/config/index.rst", "autoapi/nncf/config/schema/index.rst", "autoapi/nncf/config/schemata/accuracy_aware/index.rst", "autoapi/nncf/config/schemata/algo/binarization/index.rst", "autoapi/nncf/config/schemata/algo/const_sparsity/index.rst", "autoapi/nncf/config/schemata/algo/filter_pruning/index.rst", "autoapi/nncf/config/schemata/algo/index.rst", "autoapi/nncf/config/schemata/algo/knowledge_distillation/index.rst", "autoapi/nncf/config/schemata/algo/magnitude_sparsity/index.rst", "autoapi/nncf/config/schemata/algo/quantization/index.rst", "autoapi/nncf/config/schemata/algo/rb_sparsity/index.rst", "autoapi/nncf/config/schemata/basic/index.rst", "autoapi/nncf/config/schemata/common/compression/index.rst", "autoapi/nncf/config/schemata/common/index.rst", "autoapi/nncf/config/schemata/common/initialization/index.rst", "autoapi/nncf/config/schemata/common/sparsity/index.rst", "autoapi/nncf/config/schemata/common/targeting/index.rst", "autoapi/nncf/config/schemata/defaults/index.rst", "autoapi/nncf/config/schemata/experimental_schema/index.rst", "autoapi/nncf/config/schemata/index.rst", "autoapi/nncf/config/structures/index.rst", "autoapi/nncf/config/telemetry_extractors/index.rst", "autoapi/nncf/config/utils/index.rst", "autoapi/nncf/data/dataset/index.rst", "autoapi/nncf/data/index.rst", "autoapi/nncf/definitions/index.rst", "autoapi/nncf/experimental/common/graph/index.rst", "autoapi/nncf/experimental/common/graph/netron/index.rst", "autoapi/nncf/experimental/common/index.rst", "autoapi/nncf/experimental/common/pruning/index.rst", "autoapi/nncf/experimental/common/pruning/nodes_grouping/index.rst", "autoapi/nncf/experimental/common/pruning/operations/index.rst", "autoapi/nncf/experimental/index.rst", "autoapi/nncf/experimental/openvino/index.rst", "autoapi/nncf/experimental/openvino/quantization/index.rst", "autoapi/nncf/experimental/openvino/quantization/quantize/index.rst", "autoapi/nncf/experimental/openvino_native/engine/index.rst", "autoapi/nncf/experimental/openvino_native/graph/index.rst", "autoapi/nncf/experimental/openvino_native/graph/metatypes/common/index.rst", "autoapi/nncf/experimental/openvino_native/graph/metatypes/index.rst", "autoapi/nncf/experimental/openvino_native/graph/metatypes/openvino_metatypes/index.rst", "autoapi/nncf/experimental/openvino_native/graph/model_transformer/index.rst", "autoapi/nncf/experimental/openvino_native/graph/nncf_graph_builder/index.rst", "autoapi/nncf/experimental/openvino_native/graph/node_utils/index.rst", "autoapi/nncf/experimental/openvino_native/graph/transformations/command_creation/index.rst", "autoapi/nncf/experimental/openvino_native/graph/transformations/commands/index.rst", "autoapi/nncf/experimental/openvino_native/graph/transformations/index.rst", "autoapi/nncf/experimental/openvino_native/hardware/config/index.rst", "autoapi/nncf/experimental/openvino_native/hardware/fused_patterns/index.rst", "autoapi/nncf/experimental/openvino_native/hardware/index.rst", "autoapi/nncf/experimental/openvino_native/hardware/pattern_operations/index.rst", "autoapi/nncf/experimental/openvino_native/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/bias_correction/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/bias_correction/openvino_backend/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/fast_bias_correction/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/fast_bias_correction/openvino_backend/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/min_max/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/min_max/openvino_backend/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/default_quantization/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/quantize/index.rst", "autoapi/nncf/experimental/openvino_native/statistics/aggregator/index.rst", "autoapi/nncf/experimental/openvino_native/statistics/collectors/index.rst", "autoapi/nncf/experimental/openvino_native/statistics/index.rst", "autoapi/nncf/experimental/openvino_native/statistics/statistics/index.rst", "autoapi/nncf/experimental/openvino_native/tensor/index.rst", "autoapi/nncf/experimental/tensorflow/context/index.rst", "autoapi/nncf/experimental/tensorflow/graph/argprovider/index.rst", "autoapi/nncf/experimental/tensorflow/graph/converter/index.rst", "autoapi/nncf/experimental/tensorflow/graph/index.rst", "autoapi/nncf/experimental/tensorflow/graph/model_transformer/index.rst", "autoapi/nncf/experimental/tensorflow/graph/node_attributes/index.rst", "autoapi/nncf/experimental/tensorflow/graph/transformations/commands/index.rst", "autoapi/nncf/experimental/tensorflow/graph/transformations/index.rst", "autoapi/nncf/experimental/tensorflow/graph/transformations/layout/index.rst", "autoapi/nncf/experimental/tensorflow/index.rst", "autoapi/nncf/experimental/tensorflow/nncf_network/index.rst", "autoapi/nncf/experimental/tensorflow/patch_tf/index.rst", "autoapi/nncf/experimental/tensorflow/quantization/algorithm/index.rst", "autoapi/nncf/experimental/tensorflow/quantization/index.rst", "autoapi/nncf/experimental/tensorflow/quantization/init_range/index.rst", "autoapi/nncf/experimental/tensorflow/quantization/quantizers/index.rst", "autoapi/nncf/experimental/tensorflow/scope/index.rst", "autoapi/nncf/experimental/torch/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/base_handler/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elastic_depth/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elastic_kernel/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elastic_width/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elasticity_builder/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elasticity_controller/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elasticity_dim/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/filter_reorder/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/multi_elasticity_handler/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/visualization/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/search/evaluator/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/search/evaluator_handler/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/search/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/search/search/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/base_training/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/lr_scheduler/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/model_creator_helpers/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/progressive_shrinking_builder/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/progressive_shrinking_controller/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/scheduler/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/stage_descriptor/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/training_algorithm/index.rst", "autoapi/nncf/experimental/torch/nas/index.rst", "autoapi/nncf/experimental/torch/pruning/index.rst", "autoapi/nncf/experimental/torch/pruning/operations/index.rst", "autoapi/nncf/experimental/torch/quantization/index.rst", "autoapi/nncf/experimental/torch/quantization/quantize/index.rst", "autoapi/nncf/experimental/torch/search_building_blocks/index.rst", "autoapi/nncf/experimental/torch/search_building_blocks/search_blocks/index.rst", "autoapi/nncf/experimental/torch/search_building_blocks/search_graph/index.rst", "autoapi/nncf/experimental/torch/sparsity/index.rst", "autoapi/nncf/experimental/torch/sparsity/movement/algo/index.rst", "autoapi/nncf/experimental/torch/sparsity/movement/functions/index.rst", "autoapi/nncf/experimental/torch/sparsity/movement/index.rst", "autoapi/nncf/experimental/torch/sparsity/movement/layers/index.rst", "autoapi/nncf/experimental/torch/sparsity/movement/loss/index.rst", "autoapi/nncf/experimental/torch/sparsity/movement/scheduler/index.rst", "autoapi/nncf/experimental/torch/sparsity/movement/structured_mask_handler/index.rst", "autoapi/nncf/index.rst", "autoapi/nncf/onnx/engine/index.rst", "autoapi/nncf/onnx/graph/index.rst", "autoapi/nncf/onnx/graph/metatypes/index.rst", "autoapi/nncf/onnx/graph/metatypes/onnx_metatypes/index.rst", "autoapi/nncf/onnx/graph/model_transformer/index.rst", "autoapi/nncf/onnx/graph/nncf_graph_builder/index.rst", "autoapi/nncf/onnx/graph/node_utils/index.rst", "autoapi/nncf/onnx/graph/onnx_graph/index.rst", "autoapi/nncf/onnx/graph/transformations/command_creation/index.rst", "autoapi/nncf/onnx/graph/transformations/commands/index.rst", "autoapi/nncf/onnx/graph/transformations/index.rst", "autoapi/nncf/onnx/hardware/config/index.rst", "autoapi/nncf/onnx/hardware/fused_patterns/index.rst", "autoapi/nncf/onnx/hardware/index.rst", "autoapi/nncf/onnx/hardware/pattern_operations/index.rst", "autoapi/nncf/onnx/index.rst", "autoapi/nncf/onnx/quantization/default_quantization/index.rst", "autoapi/nncf/onnx/quantization/index.rst", "autoapi/nncf/onnx/quantization/quantize/index.rst", "autoapi/nncf/onnx/quantization/quantizer_parameters/index.rst", "autoapi/nncf/onnx/statistics/aggregator/index.rst", "autoapi/nncf/onnx/statistics/collectors/index.rst", "autoapi/nncf/onnx/statistics/index.rst", "autoapi/nncf/onnx/statistics/statistics/index.rst", "autoapi/nncf/onnx/tensor/index.rst", "autoapi/nncf/openvino/engine/index.rst", "autoapi/nncf/openvino/index.rst", "autoapi/nncf/openvino/quantization/accuracy_aware/index.rst", "autoapi/nncf/openvino/quantization/index.rst", "autoapi/nncf/openvino/quantization/quantize/index.rst", "autoapi/nncf/parameters/index.rst", "autoapi/nncf/quantization/algorithms/accuracy_control/algorithm/index.rst", "autoapi/nncf/quantization/algorithms/accuracy_control/backend/index.rst", "autoapi/nncf/quantization/algorithms/accuracy_control/index.rst", "autoapi/nncf/quantization/algorithms/accuracy_control/openvino_backend/index.rst", "autoapi/nncf/quantization/algorithms/accuracy_control/rank_functions/index.rst", "autoapi/nncf/quantization/algorithms/accuracy_control/ranker/index.rst", "autoapi/nncf/quantization/algorithms/algorithm/index.rst", "autoapi/nncf/quantization/algorithms/bias_correction/algorithm/index.rst", "autoapi/nncf/quantization/algorithms/bias_correction/backend/index.rst", "autoapi/nncf/quantization/algorithms/bias_correction/index.rst", "autoapi/nncf/quantization/algorithms/bias_correction/onnx_backend/index.rst", "autoapi/nncf/quantization/algorithms/definitions/index.rst", "autoapi/nncf/quantization/algorithms/fast_bias_correction/algorithm/index.rst", "autoapi/nncf/quantization/algorithms/fast_bias_correction/backend/index.rst", "autoapi/nncf/quantization/algorithms/fast_bias_correction/index.rst", "autoapi/nncf/quantization/algorithms/fast_bias_correction/onnx_backend/index.rst", "autoapi/nncf/quantization/algorithms/index.rst", "autoapi/nncf/quantization/algorithms/min_max/algorithm/index.rst", "autoapi/nncf/quantization/algorithms/min_max/backend/index.rst", "autoapi/nncf/quantization/algorithms/min_max/index.rst", "autoapi/nncf/quantization/algorithms/min_max/onnx_backend/index.rst", "autoapi/nncf/quantization/algorithms/min_max/torch_backend/index.rst", "autoapi/nncf/quantization/algorithms/post_training/algorithm/index.rst", "autoapi/nncf/quantization/algorithms/post_training/index.rst", "autoapi/nncf/quantization/fake_quantize/index.rst", "autoapi/nncf/quantization/index.rst", "autoapi/nncf/quantization/passes/index.rst", "autoapi/nncf/quantization/quantize/index.rst", "autoapi/nncf/quantization/telemetry_extractors/index.rst", "autoapi/nncf/scopes/index.rst", "autoapi/nncf/telemetry/decorator/index.rst", "autoapi/nncf/telemetry/events/index.rst", "autoapi/nncf/telemetry/extractors/index.rst", "autoapi/nncf/telemetry/index.rst", "autoapi/nncf/telemetry/wrapper/index.rst", "autoapi/nncf/tensorflow/accuracy_aware_training/index.rst", "autoapi/nncf/tensorflow/accuracy_aware_training/keras_model_utils/index.rst", "autoapi/nncf/tensorflow/accuracy_aware_training/runner/index.rst", "autoapi/nncf/tensorflow/algorithm_selector/index.rst", "autoapi/nncf/tensorflow/api/composite_compression/index.rst", "autoapi/nncf/tensorflow/api/compression/index.rst", "autoapi/nncf/tensorflow/api/index.rst", "autoapi/nncf/tensorflow/batchnorm_adaptation/index.rst", "autoapi/nncf/tensorflow/callbacks/checkpoint_callback/index.rst", "autoapi/nncf/tensorflow/callbacks/index.rst", "autoapi/nncf/tensorflow/callbacks/statistics_callback/index.rst", "autoapi/nncf/tensorflow/exporter/index.rst", "autoapi/nncf/tensorflow/functions/index.rst", "autoapi/nncf/tensorflow/graph/converter/index.rst", "autoapi/nncf/tensorflow/graph/index.rst", "autoapi/nncf/tensorflow/graph/metatypes/common/index.rst", "autoapi/nncf/tensorflow/graph/metatypes/index.rst", "autoapi/nncf/tensorflow/graph/metatypes/keras_layers/index.rst", "autoapi/nncf/tensorflow/graph/metatypes/matcher/index.rst", "autoapi/nncf/tensorflow/graph/metatypes/tf_ops/index.rst", "autoapi/nncf/tensorflow/graph/model_transformer/index.rst", "autoapi/nncf/tensorflow/graph/pattern_operations/index.rst", "autoapi/nncf/tensorflow/graph/patterns/index.rst", "autoapi/nncf/tensorflow/graph/transformations/commands/index.rst", "autoapi/nncf/tensorflow/graph/transformations/index.rst", "autoapi/nncf/tensorflow/graph/transformations/layout/index.rst", "autoapi/nncf/tensorflow/graph/utils/index.rst", "autoapi/nncf/tensorflow/hardware/config/index.rst", "autoapi/nncf/tensorflow/hardware/fused_patterns/index.rst", "autoapi/nncf/tensorflow/hardware/index.rst", "autoapi/nncf/tensorflow/helpers/callback_creation/index.rst", "autoapi/nncf/tensorflow/helpers/index.rst", "autoapi/nncf/tensorflow/helpers/model_creation/index.rst", "autoapi/nncf/tensorflow/helpers/model_manager/index.rst", "autoapi/nncf/tensorflow/helpers/utils/index.rst", "autoapi/nncf/tensorflow/index.rst", "autoapi/nncf/tensorflow/initialization/index.rst", "autoapi/nncf/tensorflow/layers/custom_objects/index.rst", "autoapi/nncf/tensorflow/layers/data_layout/index.rst", "autoapi/nncf/tensorflow/layers/index.rst", "autoapi/nncf/tensorflow/layers/operation/index.rst", "autoapi/nncf/tensorflow/layers/wrapper/index.rst", "autoapi/nncf/tensorflow/loss/index.rst", "autoapi/nncf/tensorflow/pruning/base_algorithm/index.rst", "autoapi/nncf/tensorflow/pruning/callbacks/index.rst", "autoapi/nncf/tensorflow/pruning/filter_pruning/algorithm/index.rst", "autoapi/nncf/tensorflow/pruning/filter_pruning/functions/index.rst", "autoapi/nncf/tensorflow/pruning/filter_pruning/index.rst", "autoapi/nncf/tensorflow/pruning/index.rst", "autoapi/nncf/tensorflow/pruning/operations/index.rst", "autoapi/nncf/tensorflow/pruning/tensor_processor/index.rst", "autoapi/nncf/tensorflow/pruning/utils/index.rst", "autoapi/nncf/tensorflow/quantization/algorithm/index.rst", "autoapi/nncf/tensorflow/quantization/collectors/index.rst", "autoapi/nncf/tensorflow/quantization/default_quantization/index.rst", "autoapi/nncf/tensorflow/quantization/functions/index.rst", "autoapi/nncf/tensorflow/quantization/index.rst", "autoapi/nncf/tensorflow/quantization/init_range/index.rst", "autoapi/nncf/tensorflow/quantization/layers/index.rst", "autoapi/nncf/tensorflow/quantization/quantize/index.rst", "autoapi/nncf/tensorflow/quantization/quantizers/index.rst", "autoapi/nncf/tensorflow/quantization/utils/index.rst", "autoapi/nncf/tensorflow/sparsity/base_algorithm/index.rst", "autoapi/nncf/tensorflow/sparsity/callbacks/index.rst", "autoapi/nncf/tensorflow/sparsity/collector/index.rst", "autoapi/nncf/tensorflow/sparsity/index.rst", "autoapi/nncf/tensorflow/sparsity/magnitude/algorithm/index.rst", "autoapi/nncf/tensorflow/sparsity/magnitude/functions/index.rst", "autoapi/nncf/tensorflow/sparsity/magnitude/index.rst", "autoapi/nncf/tensorflow/sparsity/magnitude/operation/index.rst", "autoapi/nncf/tensorflow/sparsity/rb/algorithm/index.rst", "autoapi/nncf/tensorflow/sparsity/rb/functions/index.rst", "autoapi/nncf/tensorflow/sparsity/rb/index.rst", "autoapi/nncf/tensorflow/sparsity/rb/loss/index.rst", "autoapi/nncf/tensorflow/sparsity/rb/operation/index.rst", "autoapi/nncf/tensorflow/sparsity/utils/index.rst", "autoapi/nncf/tensorflow/tensor/index.rst", "autoapi/nncf/tensorflow/tensor_statistics/collectors/index.rst", "autoapi/nncf/tensorflow/tensor_statistics/index.rst", "autoapi/nncf/tensorflow/tensor_statistics/reduction/index.rst", "autoapi/nncf/tensorflow/tensor_statistics/statistics/index.rst", "autoapi/nncf/tensorflow/tf_internals/index.rst", "autoapi/nncf/tensorflow/utils/hook_handle/index.rst", "autoapi/nncf/tensorflow/utils/index.rst", "autoapi/nncf/tensorflow/utils/node/index.rst", "autoapi/nncf/tensorflow/utils/scopes_handle/index.rst", "autoapi/nncf/tensorflow/utils/state/index.rst", "autoapi/nncf/torch/accuracy_aware_training/index.rst", "autoapi/nncf/torch/accuracy_aware_training/runner/index.rst", "autoapi/nncf/torch/accuracy_aware_training/utils/index.rst", "autoapi/nncf/torch/algo_selector/index.rst", "autoapi/nncf/torch/automl/agent/ddpg/ddpg/index.rst", "autoapi/nncf/torch/automl/agent/ddpg/index.rst", "autoapi/nncf/torch/automl/agent/ddpg/memory/index.rst", "autoapi/nncf/torch/automl/agent/index.rst", "autoapi/nncf/torch/automl/environment/index.rst", "autoapi/nncf/torch/automl/environment/quantization_env/index.rst", "autoapi/nncf/torch/automl/index.rst", "autoapi/nncf/torch/batchnorm_adaptation/index.rst", "autoapi/nncf/torch/binarization/algo/index.rst", "autoapi/nncf/torch/binarization/binarize_functions/index.rst", "autoapi/nncf/torch/binarization/extensions/index.rst", "autoapi/nncf/torch/binarization/index.rst", "autoapi/nncf/torch/binarization/layers/index.rst", "autoapi/nncf/torch/binarization/reference/index.rst", "autoapi/nncf/torch/checkpoint_loading/index.rst", "autoapi/nncf/torch/composite_compression/index.rst", "autoapi/nncf/torch/compression_method_api/index.rst", "autoapi/nncf/torch/debug/index.rst", "autoapi/nncf/torch/dynamic_graph/context/index.rst", "autoapi/nncf/torch/dynamic_graph/graph/index.rst", "autoapi/nncf/torch/dynamic_graph/graph_tracer/index.rst", "autoapi/nncf/torch/dynamic_graph/index.rst", "autoapi/nncf/torch/dynamic_graph/io_handling/index.rst", "autoapi/nncf/torch/dynamic_graph/layer_attributes_handlers/index.rst", "autoapi/nncf/torch/dynamic_graph/op_input_processing/index.rst", "autoapi/nncf/torch/dynamic_graph/operation_address/index.rst", "autoapi/nncf/torch/dynamic_graph/patch_pytorch/index.rst", "autoapi/nncf/torch/dynamic_graph/scope/index.rst", "autoapi/nncf/torch/dynamic_graph/scope_access/index.rst", "autoapi/nncf/torch/dynamic_graph/structs/index.rst", "autoapi/nncf/torch/dynamic_graph/trace_functions/index.rst", "autoapi/nncf/torch/dynamic_graph/trace_tensor/index.rst", "autoapi/nncf/torch/dynamic_graph/wrappers/index.rst", "autoapi/nncf/torch/engine/index.rst", "autoapi/nncf/torch/exporter/index.rst", "autoapi/nncf/torch/extensions/index.rst", "autoapi/nncf/torch/functions/index.rst", "autoapi/nncf/torch/graph/graph/index.rst", "autoapi/nncf/torch/graph/graph_builder/index.rst", "autoapi/nncf/torch/graph/index.rst", "autoapi/nncf/torch/graph/operator_metatypes/index.rst", "autoapi/nncf/torch/graph/pattern_operations/index.rst", "autoapi/nncf/torch/graph/transformations/commands/index.rst", "autoapi/nncf/torch/graph/transformations/index.rst", "autoapi/nncf/torch/graph/transformations/layout/index.rst", "autoapi/nncf/torch/hardware/config/index.rst", "autoapi/nncf/torch/hardware/fused_patterns/index.rst", "autoapi/nncf/torch/hardware/index.rst", "autoapi/nncf/torch/index.rst", "autoapi/nncf/torch/initialization/index.rst", "autoapi/nncf/torch/knowledge_distillation/algo/index.rst", "autoapi/nncf/torch/knowledge_distillation/index.rst", "autoapi/nncf/torch/knowledge_distillation/knowledge_distillation_handler/index.rst", "autoapi/nncf/torch/knowledge_distillation/knowledge_distillation_loss/index.rst", "autoapi/nncf/torch/layer_utils/index.rst", "autoapi/nncf/torch/layers/index.rst", "autoapi/nncf/torch/model_creation/index.rst", "autoapi/nncf/torch/module_operations/index.rst", "autoapi/nncf/torch/nested_objects_traversal/index.rst", "autoapi/nncf/torch/nncf_module_replacement/index.rst", "autoapi/nncf/torch/nncf_network/index.rst", "autoapi/nncf/torch/pruning/base_algo/index.rst", "autoapi/nncf/torch/pruning/export_utils/index.rst", "autoapi/nncf/torch/pruning/filter_pruning/algo/index.rst", "autoapi/nncf/torch/pruning/filter_pruning/functions/index.rst", "autoapi/nncf/torch/pruning/filter_pruning/global_ranking/evolutionary_optimization/index.rst", "autoapi/nncf/torch/pruning/filter_pruning/global_ranking/index.rst", "autoapi/nncf/torch/pruning/filter_pruning/global_ranking/legr/index.rst", "autoapi/nncf/torch/pruning/filter_pruning/index.rst", "autoapi/nncf/torch/pruning/filter_pruning/layers/index.rst", "autoapi/nncf/torch/pruning/index.rst", "autoapi/nncf/torch/pruning/operations/index.rst", "autoapi/nncf/torch/pruning/structs/index.rst", "autoapi/nncf/torch/pruning/tensor_processor/index.rst", "autoapi/nncf/torch/pruning/utils/index.rst", "autoapi/nncf/torch/quantization/adjust_padding/index.rst", "autoapi/nncf/torch/quantization/algo/index.rst", "autoapi/nncf/torch/quantization/default_quantization/index.rst", "autoapi/nncf/torch/quantization/extensions/index.rst", "autoapi/nncf/torch/quantization/hessian_trace/index.rst", "autoapi/nncf/torch/quantization/index.rst", "autoapi/nncf/torch/quantization/init_precision/index.rst", "autoapi/nncf/torch/quantization/init_range/index.rst", "autoapi/nncf/torch/quantization/layers/index.rst", "autoapi/nncf/torch/quantization/metrics/index.rst", "autoapi/nncf/torch/quantization/precision_constraints/index.rst", "autoapi/nncf/torch/quantization/precision_init/adjacent_quantizers/index.rst", "autoapi/nncf/torch/quantization/precision_init/autoq_init/index.rst", "autoapi/nncf/torch/quantization/precision_init/base_init/index.rst", "autoapi/nncf/torch/quantization/precision_init/bitwidth_graph/index.rst", "autoapi/nncf/torch/quantization/precision_init/compression_ratio/index.rst", "autoapi/nncf/torch/quantization/precision_init/hawq_debug/index.rst", "autoapi/nncf/torch/quantization/precision_init/hawq_init/index.rst", "autoapi/nncf/torch/quantization/precision_init/index.rst", "autoapi/nncf/torch/quantization/precision_init/manual_init/index.rst", "autoapi/nncf/torch/quantization/precision_init/perturbations/index.rst", "autoapi/nncf/torch/quantization/precision_init/traces_order/index.rst", "autoapi/nncf/torch/quantization/prepare_for_inference/index.rst", "autoapi/nncf/torch/quantization/quantize/index.rst", "autoapi/nncf/torch/quantization/quantize_functions/index.rst", "autoapi/nncf/torch/quantization/reference/index.rst", "autoapi/nncf/torch/quantization/schedulers/index.rst", "autoapi/nncf/torch/quantization/statistics/index.rst", "autoapi/nncf/torch/quantization/structs/index.rst", "autoapi/nncf/torch/quantization/translator/index.rst", "autoapi/nncf/torch/sparsity/base_algo/index.rst", "autoapi/nncf/torch/sparsity/collector/index.rst", "autoapi/nncf/torch/sparsity/const/algo/index.rst", "autoapi/nncf/torch/sparsity/const/index.rst", "autoapi/nncf/torch/sparsity/functions/index.rst", "autoapi/nncf/torch/sparsity/index.rst", "autoapi/nncf/torch/sparsity/layers/index.rst", "autoapi/nncf/torch/sparsity/magnitude/algo/index.rst", "autoapi/nncf/torch/sparsity/magnitude/functions/index.rst", "autoapi/nncf/torch/sparsity/magnitude/index.rst", "autoapi/nncf/torch/sparsity/rb/algo/index.rst", "autoapi/nncf/torch/sparsity/rb/functions/index.rst", "autoapi/nncf/torch/sparsity/rb/index.rst", "autoapi/nncf/torch/sparsity/rb/layers/index.rst", "autoapi/nncf/torch/sparsity/rb/loss/index.rst", "autoapi/nncf/torch/statistics/aggregator/index.rst", "autoapi/nncf/torch/statistics/index.rst", "autoapi/nncf/torch/structures/index.rst", "autoapi/nncf/torch/tensor/index.rst", "autoapi/nncf/torch/tensor_statistics/algo/index.rst", "autoapi/nncf/torch/tensor_statistics/collectors/index.rst", "autoapi/nncf/torch/tensor_statistics/index.rst", "autoapi/nncf/torch/tensor_statistics/reduction/index.rst", "autoapi/nncf/torch/tensor_statistics/statistics/index.rst", "autoapi/nncf/torch/utils/index.rst", "autoapi/nncf/version/index.rst", "index.rst"], "titles": ["NNCF API Reference", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.api.compression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.api</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.api.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.accuracy_aware_training</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.accuracy_aware_training.runner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.accuracy_aware_training.runner_factory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.accuracy_aware_training.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.accuracy_aware_training.training_loop</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.api_marker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.collector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.composite_compression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.compression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.deprecation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.exporter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.factory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.definitions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.graph_matching</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.layer_attributes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.model_transformer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.operator_metatypes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.patterns.manager</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.patterns.patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.transformations.command_creation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.transformations.commands</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.transformations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.transformations.layout</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.hardware.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.hardware</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.hardware.opset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.initialization.batchnorm_adaptation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.initialization.dataloader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.initialization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.insertion_point_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.logging</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.logging.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.logging.progress_bar</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.clusterization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.mask_propagation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.model_analysis</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.node_selector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.schedulers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.shape_pruning_processor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.structs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.symbolic_mask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.tensor_processor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.weights_flops_calculator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.collectors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.config_assignment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.initialization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.initialization.range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.quantizer_propagation.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.quantizer_propagation.grouping</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.quantizer_propagation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.quantizer_propagation.solver</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.quantizer_propagation.structs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.quantizer_propagation.visualizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.quantizer_removal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.quantizer_setup</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.quantizers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.structs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.schedulers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.scopes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.sparsity.collector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.sparsity.controller</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.sparsity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.sparsity.schedulers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.sparsity.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.stateful_classes_registry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.tensor_statistics.aggregator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.tensor_statistics.collectors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.tensor_statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.tensor_statistics.reduction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.tensor_statistics.statistic_point</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.tensor_statistics.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.debug</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.decorators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.dot_file_rw</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.helpers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.os</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.patcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.registry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.tensorboard</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.timer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.definitions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schema</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.accuracy_aware</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.algo.binarization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.algo.const_sparsity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.algo.filter_pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.algo.knowledge_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.algo.magnitude_sparsity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.algo.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.algo.rb_sparsity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.basic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.common.compression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.common.initialization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.common.sparsity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.common.targeting</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.defaults</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.experimental_schema</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.structures</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.telemetry_extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.data.dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.definitions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.common.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.common.graph.netron</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.common.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.common.pruning.nodes_grouping</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.common.pruning.operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino.quantization.quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph.metatypes.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph.metatypes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph.metatypes.openvino_metatypes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph.model_transformer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph.nncf_graph_builder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph.node_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph.transformations.command_creation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph.transformations.commands</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph.transformations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.hardware.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.hardware.fused_patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.hardware</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.hardware.pattern_operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization.algorithms.bias_correction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization.algorithms.bias_correction.openvino_backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction.openvino_backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization.algorithms</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization.algorithms.min_max</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization.algorithms.min_max.openvino_backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization.default_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization.quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.statistics.aggregator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.statistics.collectors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.statistics.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.context</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.graph.argprovider</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.graph.converter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.graph.model_transformer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.graph.node_attributes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.graph.transformations.commands</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.graph.transformations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.graph.transformations.layout</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.nncf_network</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.patch_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.quantization.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.quantization.init_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.quantization.quantizers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.scope</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.base_handler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_depth</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_kernel</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_width</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_builder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_controller</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_dim</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.filter_reorder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.multi_elasticity_handler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.visualization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.search.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.search.evaluator_handler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.search</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.search.search</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.training.base_training</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.training</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.training.lr_scheduler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.training.model_creator_helpers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_builder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_controller</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.training.scheduler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.training.stage_descriptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.training.training_algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.pruning.operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.quantization.quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.search_building_blocks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.search_building_blocks.search_blocks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.search_building_blocks.search_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.sparsity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.sparsity.movement.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.sparsity.movement.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.sparsity.movement</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.sparsity.movement.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.sparsity.movement.loss</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.sparsity.movement.scheduler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.sparsity.movement.structured_mask_handler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph.metatypes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph.metatypes.onnx_metatypes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph.model_transformer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph.nncf_graph_builder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph.node_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph.onnx_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph.transformations.command_creation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph.transformations.commands</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph.transformations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.hardware.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.hardware.fused_patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.hardware</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.hardware.pattern_operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.quantization.default_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.quantization.quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.quantization.quantizer_parameters</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.statistics.aggregator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.statistics.collectors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.statistics.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.openvino.engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.openvino</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.openvino.quantization.accuracy_aware</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.openvino.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.openvino.quantization.quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.parameters</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.accuracy_control.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.accuracy_control.backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.accuracy_control</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.accuracy_control.openvino_backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.accuracy_control.rank_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.accuracy_control.ranker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.bias_correction.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.bias_correction.backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.bias_correction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.bias_correction.onnx_backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.definitions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.fast_bias_correction.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.fast_bias_correction.backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.fast_bias_correction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.fast_bias_correction.onnx_backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.min_max.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.min_max.backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.min_max</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.min_max.onnx_backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.min_max.torch_backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.post_training.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.post_training</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.fake_quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.passes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.telemetry_extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.scopes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.telemetry.decorator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.telemetry.events</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.telemetry.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.telemetry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.telemetry.wrapper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.accuracy_aware_training</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.accuracy_aware_training.keras_model_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.accuracy_aware_training.runner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.algorithm_selector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.api.composite_compression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.api.compression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.api</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.batchnorm_adaptation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.callbacks.checkpoint_callback</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.callbacks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.callbacks.statistics_callback</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.exporter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.converter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.metatypes.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.metatypes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.metatypes.keras_layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.metatypes.matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.metatypes.tf_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.model_transformer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.pattern_operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.transformations.commands</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.transformations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.transformations.layout</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.hardware.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.hardware.fused_patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.hardware</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.helpers.callback_creation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.helpers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.helpers.model_creation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.helpers.model_manager</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.helpers.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.initialization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.layers.custom_objects</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.layers.data_layout</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.layers.operation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.layers.wrapper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.loss</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.pruning.base_algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.pruning.callbacks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.pruning.filter_pruning.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.pruning.filter_pruning.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.pruning.filter_pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.pruning.operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.pruning.tensor_processor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.pruning.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization.collectors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization.default_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization.init_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization.quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization.quantizers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.base_algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.callbacks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.collector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.magnitude.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.magnitude.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.magnitude</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.magnitude.operation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.rb.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.rb.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.rb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.rb.loss</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.rb.operation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.tensor_statistics.collectors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.tensor_statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.tensor_statistics.reduction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.tensor_statistics.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.tf_internals</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.utils.hook_handle</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.utils.node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.utils.scopes_handle</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.utils.state</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.accuracy_aware_training</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.accuracy_aware_training.runner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.accuracy_aware_training.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.algo_selector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.automl.agent.ddpg.ddpg</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.automl.agent.ddpg</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.automl.agent.ddpg.memory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.automl.agent</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.automl.environment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.automl.environment.quantization_env</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.automl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.batchnorm_adaptation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.binarization.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.binarization.binarize_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.binarization.extensions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.binarization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.binarization.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.binarization.reference</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.checkpoint_loading</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.composite_compression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.compression_method_api</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.debug</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.context</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.graph_tracer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.io_handling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.layer_attributes_handlers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.op_input_processing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.operation_address</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.patch_pytorch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.scope</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.scope_access</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.structs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.trace_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.trace_tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.wrappers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.exporter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.extensions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.graph.graph_builder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.graph.operator_metatypes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.graph.pattern_operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.graph.transformations.commands</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.graph.transformations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.graph.transformations.layout</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.hardware.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.hardware.fused_patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.hardware</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.initialization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.knowledge_distillation.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.knowledge_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.knowledge_distillation.knowledge_distillation_handler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.knowledge_distillation.knowledge_distillation_loss</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.layer_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.model_creation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.module_operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.nested_objects_traversal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.nncf_module_replacement</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.nncf_network</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.base_algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.export_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.filter_pruning.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.filter_pruning.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.filter_pruning.global_ranking.evolutionary_optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.filter_pruning.global_ranking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.filter_pruning.global_ranking.legr</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.filter_pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.filter_pruning.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.structs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.tensor_processor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.adjust_padding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.default_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.extensions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.hessian_trace</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.init_precision</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.init_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_constraints</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.adjacent_quantizers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.autoq_init</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.base_init</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.bitwidth_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.compression_ratio</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.hawq_debug</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.hawq_init</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.manual_init</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.perturbations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.traces_order</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.prepare_for_inference</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.quantize_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.reference</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.schedulers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.structs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.translator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.base_algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.collector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.const.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.const</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.magnitude.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.magnitude.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.magnitude</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.rb.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.rb.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.rb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.rb.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.rb.loss</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.statistics.aggregator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.structures</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.tensor_statistics.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.tensor_statistics.collectors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.tensor_statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.tensor_statistics.reduction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.tensor_statistics.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.version</span></code>", "NNCF documentation"], "terms": {"extend": [1, 4, 8, 110, 413], "python": [1, 4, 8, 46], "data": [1, 7, 46, 298, 342, 453, 519], "rst": [1, 4, 7, 8], "obj": [2, 3, 5, 6, 7, 9], "displai": [2, 3, 5, 6, 7, 9], "py": [2, 3, 5, 6, 9], "type": [2, 3, 7, 9, 298, 519], "short_nam": [2, 5, 6, 7, 9], "arg": [2, 5, 6, 110, 453, 519], "endif": [2, 3, 5, 6, 7, 9], "return_annot": [2, 5, 6], "overload": [2, 5, 6], "length": [2, 7], "endfor": [2, 5, 6, 7, 9], "base": [2, 46, 110, 133, 351, 358, 372, 376, 447, 460, 473, 502, 504, 509, 512, 519], "show": [2, 3, 7], "inherit": [2, 133], "autoapi_opt": [2, 7], "link_obj": 2, "loop": 2, "last": 2, "diagram": 2, "object": [2, 110, 338, 453, 519], "autoapi": [2, 7], "full_nam": 2, "part": 2, "1": [2, 3, 7], "privat": 2, "member": 2, "docstr": [2, 3, 5, 6, 7, 9, 413], "indent": [2, 3, 5, 6, 7, 9], "3": [2, 3, 5, 6, 7, 9], "set": [2, 7, 298, 372, 376, 460, 473, 504, 509, 512], "visible_class": [2, 7], "class": [2, 4, 7, 342], "selectattr": [2, 7], "list": [2, 7, 298, 351, 358, 376, 453, 460, 502, 504, 509, 512], "els": [2, 3, 6, 7], "rejectattr": [2, 7], "klass": [2, 7], "render": [2, 7], "visible_properti": 2, "properti": [2, 5, 6, 9], "visible_attribut": [2, 7], "attribut": [2, 7], "visible_method": 2, "method": [2, 6, 298, 358, 372, 376, 413, 460, 473, 502, 504, 509, 512], "name": [3, 7, 110], "annot": [3, 9], "i": [3, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "none": [3, 5, 6, 7, 133, 298, 338, 342, 453, 460, 473, 509, 512, 519], "valu": [3, 110, 298, 460], "string": 3, "splitlin": 3, "count": 3, "multilin": 3, "width": 3, "8": 3, "blank": 3, "true": [3, 298, 372, 453, 460, 509], "r": 3, "truncat": 3, "100": 3, "function": [5, 7, 110, 358, 447, 473, 512, 519], "orphan": 7, "nest": 7, "pars": 7, "block": 7, "subpackag": [7, 528], "visible_subpackag": 7, "toctre": 7, "titlesonli": 7, "maxdepth": 7, "index": 7, "endblock": 7, "submodul": 7, "visible_submodul": 7, "content": 7, "all": [7, 110, 133, 372, 376, 504, 509, 512, 519], "visible_children": 7, "children": 7, "elif": 7, "equalto": 7, "packag": [7, 413], "import": [7, 453], "visible_funct": 7, "modul": [7, 8, 351, 372, 376, 447, 453, 460, 473, 502, 504, 509, 512, 519], "summari": 7, "scope": [7, 298], "id": [7, 460, 519], "obj_item": 7, "0": [7, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "copyright": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "c": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "2023": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 416, 417, 418, 421, 422, 423, 424, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "intel": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "corpor": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "licens": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "under": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "apach": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "version": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "2": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "you": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "mai": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "us": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "thi": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "file": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528], "except": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "complianc": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "obtain": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "copi": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "http": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "www": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "org": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "unless": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "requir": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "applic": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "law": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "agre": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "write": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "softwar": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "distribut": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "an": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "AS": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "basi": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "without": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "warranti": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "OR": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "condit": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "OF": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "ani": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "kind": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "either": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "express": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "impli": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "see": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "specif": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "languag": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "govern": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "permiss": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "limitiniti": [44, 133, 239, 338, 341, 473, 519], "dataload": [44, 47, 133, 239, 519], "nncfdataload": [46, 133], "abc": 46, "wrap": [46, 447, 453, 473, 512, 519], "custom": [46, 519], "sourc": [46, 338, 453], "abstract": 46, "__iter__": 46, "creat": [46, 519], "iter": [46, 351, 358, 372, 376, 447, 460, 473, 504, 509, 512, 519], "element": 46, "The": [46, 110, 298, 338, 351, 358, 372, 453, 460, 473, 502, 509, 512, 519], "return": [46, 110, 298, 338, 342, 351, 358, 372, 376, 447, 453, 460, 473, 502, 504, 509, 512, 519], "implement": [46, 358, 519], "protocol": 46, "nncfconfig": [110, 133, 338, 342, 351, 372, 376, 453, 460, 473, 509, 512, 519], "kwarg": [110, 453], "dict": [110, 338, 453, 460, 473], "A": [110, 298, 338, 351, 358, 372, 376, 447, 453, 460, 473, 504, 509, 512, 519], "regular": [110, 453, 519], "dictionari": 110, "some": [110, 342], "util": [110, 519], "classmethod": 110, "from_dict": 110, "nncf_dict": 110, "load": [110, 338, 453], "from": [110, 133, 338, 453, 519], "must": [110, 453], "contain": [110, 351, 358, 372, 376, 447, 453, 460, 473, 504, 509, 512], "onli": [110, 298, 358, 460, 473, 502, 519], "json": [110, 528], "support": [110, 298, 447, 473, 512], "primit": 110, "get_redefinable_global_param_value_for_algo": 110, "param_nam": 110, "str": [110, 133, 338, 342, 351, 358, 376, 447, 453, 460, 473, 519], "algo_nam": 110, "option": [110, 298, 519], "paramet": [110, 298, 338, 342, 351, 358, 372, 376, 447, 453, 460, 473, 502, 504, 509, 512, 519], "can": [110, 298, 351, 358, 372, 376, 447, 460, 473, 504, 509, 512], "specifi": [110, 298, 338, 453, 473, 519], "both": 110, "global": [110, 460, 519], "level": [110, 351, 372, 376, 447, 460, 473, 504, 509, 512], "so": [110, 413], "thei": 110, "appli": [110, 298, 338, 372, 376, 453, 460, 504, 509, 512], "algo": [110, 239, 445, 448, 465, 467, 477, 505, 507, 511, 514], "same": [110, 453, 519], "time": [110, 298, 351, 358, 372, 376, 447, 460, 473, 504, 509, 512], "overridden": 110, "algorithm": [110, 133, 239, 298, 338, 341, 342, 353, 354, 362, 371, 374, 378, 413, 447, 453, 460, 473, 502, 504, 509, 512, 519], "section": 110, "should": [110, 338, 351, 358, 372, 376, 447, 453, 460, 473, 502, 504, 509, 512, 519], "given": [110, 519], "consid": 110, "exact": [110, 338, 453], "format": [110, 358, 453, 460, 473, 502], "present": 110, "top": 110, "most": 110, "subdict": 110, "among": [110, 453], "allow": 110, "which": [110, 133, 298, 453], "resolut": 110, "redefin": 110, "occur": 110, "structur": [113, 239, 342, 445], "quantizationrangeinitarg": 133, "data_load": [133, 342, 519], "common": [133, 239, 298, 351, 358, 372, 376, 447, 460, 473, 502, 504, 509, 512, 528], "devic": [133, 298, 342, 519], "nncfextraconfigstruct": [133, 519], "store": [133, 519], "addit": [133, 298, 338, 351, 372, 376, 447, 453, 460, 473, 502, 504, 509, 512], "argument": [133, 453, 519], "quantiz": [133, 239, 341, 445, 453, 519, 528], "rang": [133, 473], "bnadaptationinitarg": 133, "batchnorm": 133, "statist": [133, 298, 351, 358, 372, 376, 447, 460, 473, 504, 509, 512], "adapt": 133, "modelevaluationarg": 133, "eval_fn": [133, 519], "callabl": [133, 453, 519], "extra": [133, 342], "defin": [133, 298, 413], "2020": [134, 453, 485, 486, 488], "config": [239, 338, 342, 351, 358, 372, 376, 453, 460, 473, 509, 512, 519, 528], "tensorflow": [239, 528], "helper": [239, 341], "model_cr": [239, 337, 341, 445], "prune": [239, 341, 445, 519], "filter_prun": [239, 341, 354, 445, 467], "sparsiti": [239, 341, 445], "magnitud": [239, 341, 371, 445, 507], "rb": [239, 341, 371, 445, 507], "torch": [239, 528], "knowledge_distil": [239, 445], "const": [239, 445, 507], "base_algo": [239, 445, 460, 504, 507, 509, 512], "model": [298, 338, 342, 351, 358, 372, 376, 447, 453, 460, 473, 502, 504, 509, 512, 519], "api": [298, 338, 351, 358, 372, 413, 447, 453, 460, 473, 502, 509, 512, 528], "compress": [298, 338, 342, 351, 358, 372, 376, 413, 447, 453, 460, 473, 502, 504, 509, 512, 519], "tmodel": 298, "calibration_dataset": 298, "dataset": [298, 342, 519], "preset": 298, "struct": [298, 460, 473], "quantizationpreset": 298, "perform": [298, 342, 519], "target_devic": 298, "targetdevic": 298, "subset_s": 298, "int": [298, 342, 460, 473, 519], "300": 298, "fast_bias_correct": 298, "bool": [298, 351, 358, 372, 376, 447, 460, 473, 502, 504, 509, 519], "model_typ": 298, "modeltyp": 298, "ignored_scop": 298, "ignoredscop": 298, "post": 298, "train": [298, 351, 358, 372, 376, 447, 453, 460, 473, 502, 504, 509, 512, 519], "provid": [298, 351, 519], "repres": 298, "calibr": 298, "process": [298, 372, 376, 447, 460, 473, 502, 504, 509, 512, 519], "control": [298, 338, 358, 453, 460, 502, 519], "mode": [298, 519], "symmetr": 298, "asymmetr": 298, "It": [298, 519], "take": [298, 351, 358, 372, 376, 447, 453, 460, 473, 504, 509, 512], "follow": 298, "weight": [298, 372, 376, 460, 504, 509, 512, 519], "activ": 298, "mix": 298, "target": [298, 351, 358, 372, 460, 473, 502, 509, 512, 519], "taken": 298, "account": 298, "while": 298, "order": [298, 372, 447, 460, 473, 502, 504, 509, 512], "best": [298, 351, 358, 372, 447, 460, 473, 502, 509, 512], "size": [298, 342], "subset": 298, "calcul": [298, 473, 519], "fals": [298, 351, 358, 372, 376, 447, 460, 473, 502, 504, 509, 512], "enabl": [298, 338, 351, 358, 372, 376, 447, 460, 473, 502, 504, 509, 512], "differ": [298, 519], "bia": 298, "correct": 298, "more": 298, "accur": 298, "gener": 298, "less": 298, "memori": 298, "need": [298, 351, 358, 372, 376, 447, 460, 473, 502, 504, 509, 512, 519], "pattern": 298, "transform": 298, "now": 298, "ignor": 298, "flow": 298, "graph": [298, 351, 453, 460], "node": 298, "dure": [298, 338, 351, 372, 376, 447, 453, 460, 473, 502, 504, 509, 512], "2021": 334, "create_compressed_model": [338, 453, 519], "kera": [338, 351, 358], "compression_st": [338, 453], "tupl": [338, 453, 460, 473, 519], "compressionalgorithmcontrol": [338, 453, 519], "main": [338, 453], "produc": [338, 453], "readi": [338, 453, 519], "fine": [338, 453], "tune": [338, 453], "origin": [338, 351, 372, 376, 447, 453, 460, 473, 502, 504, 509, 512, 519], "configur": [338, 453, 528], "have": [338, 453], "its": [338, 453], "alreadi": [338, 453], "checkpoint": [338, 351, 358, 372, 447, 453, 460, 473, 502, 509, 512], "anoth": [338, 453], "determin": [338, 453], "modif": [338, 453], "state": [338, 453, 519], "unambigu": [338, 453], "restor": [338, 453], "includ": [338, 453], "builder": [338, 453], "If": [338, 342, 460], "trainabl": 338, "skip": 338, "build": [338, 453], "compression_ctrl": 338, "compressed_model": 338, "where": [338, 453], "necessari": [338, 519], "register_default_init_arg": 342, "nncf_config": [342, 519], "batch_siz": 342, "regist": 342, "certain": 342, "instanc": [342, 351, 358, 372, 376, 447, 453, 460, 473, 504, 509, 512, 519], "batch": [342, 351, 358, 372, 376, 447, 460, 473, 504, 509, 512], "filterpruningcontrol": [351, 460], "target_model": [351, 358, 372, 376, 447, 460, 473, 502, 504, 509, 512], "nncfgraph": 351, "op_nam": [351, 358, 372, 376], "prunable_typ": [351, 460], "pruned_layer_group": 351, "cluster": [351, 460], "base_algorithm": [351, 372, 376], "prunedlayerinfo": 351, "basepruningalgocontrol": [351, 460], "serv": [351, 372, 376, 447, 460, 473, 502, 504, 509, 512], "handl": [351, 372, 376, 447, 460, 473, 502, 504, 509, 512], "hook": [351, 372, 376, 447, 460, 473, 502, 504, 509, 512], "insert": [351, 372, 376, 447, 460, 473, 502, 504, 509, 512], "uncompress": [351, 358, 372, 376, 447, 460, 473, 502, 504, 509, 512], "filter": [351, 460], "compression_stag": [351, 358, 372, 447, 460, 473, 502, 509, 512], "compressionstag": [351, 358, 372, 447, 460, 473, 502, 509, 512], "stage": [351, 358, 372, 460, 473, 502, 509, 512], "save": [351, 358, 372, 447, 460, 473, 502, 509, 512], "distinguish": [351, 358, 372, 447, 460, 473, 502, 509, 512], "between": [351, 358, 372, 447, 460, 473, 502, 509, 512], "partial": [351, 358, 372, 447, 460, 473, 502, 509, 512], "fulli": [351, 358, 372, 447, 460, 473, 502, 509, 512], "disable_schedul": [351, 372, 376, 460, 502], "disabl": [351, 372, 376, 460, 502], "current": [351, 372, 376, 460, 502], "schedul": [351, 372, 376, 447, 460, 473, 502, 504, 509, 512], "chang": [351, 372, 376, 460, 502], "dummi": [351, 372, 376, 453, 460, 502], "one": [351, 372, 376, 460, 502, 519], "doe": [351, 372, 376, 460, 502], "rate": [351, 372, 376, 460, 502], "quickly_collected_onli": [351, 358, 372, 376, 447, 460, 473, 504, 509, 512], "nncfstatist": [351, 358, 372, 376, 447, 460, 473, 504, 509, 512], "collect": [351, 358, 372, 376, 447, 460, 473, 504, 509, 512], "don": [351, 358, 372, 376, 447, 460, 473, 504, 509, 512], "t": [351, 358, 372, 376, 447, 460, 473, 504, 509, 512], "too": [351, 358, 372, 376, 447, 460, 473, 504, 509, 512], "much": [351, 358, 372, 376, 447, 460, 473, 504, 509, 512], "comput": [351, 358, 372, 376, 447, 460, 473, 504, 509, 512], "help": [351, 358, 372, 376, 447, 460, 473, 504, 509, 512], "case": [351, 358, 372, 376, 447, 453, 460, 473, 504, 509, 512, 519], "when": [351, 358, 372, 376, 447, 453, 460, 473, 504, 509, 512, 519], "keep": [351, 358, 372, 376, 447, 460, 473, 504, 509, 512], "track": [351, 358, 372, 376, 447, 460, 473, 504, 509, 512], "each": [351, 358, 372, 376, 447, 453, 460, 473, 504, 509, 512, 519], "step": [351, 358, 372, 376, 447, 460, 473, 504, 509, 512, 519], "set_pruning_level": [351, 460], "pruning_level": [351, 460], "float": [351, 447, 460, 504, 519], "run_batchnorm_adapt": [351, 372, 460, 509], "setup": [351, 519], "mask": [351, 372, 376, 460, 504, 509, 512], "accord": [351, 453], "param": [351, 453, 473, 519], "ratio": 351, "quantizationcontrol": [358, 473], "basecompressionalgorithmcontrol": 358, "basic": 358, "strip_model": [358, 460, 473, 502], "do_copi": [358, 460, 473, 502], "strip": [358, 460, 473, 502], "auxiliari": [358, 460, 473, 502], "layer": [358, 460, 473, 502, 519], "were": [358, 453, 460, 473, 502], "": [358, 372, 376, 453, 460, 473, 502, 504, 509, 512, 519], "befor": [358, 453, 460, 473, 502], "export": [358, 460, 473, 502], "modifi": [358, 460, 473, 502], "default": [358, 460, 473, 502, 519], "magnitudesparsitycontrol": [372, 509], "basesparsitycontrol": [372, 376], "host": [372, 376, 447, 460, 473, 502, 504, 509, 512], "entiti": [372, 376, 447, 460, 473, 502, 504, 509, 512], "ar": [372, 376, 447, 453, 460, 473, 502, 504, 509, 512, 519], "loss": [372, 376, 447, 460, 473, 502, 504, 509, 512, 519], "freez": [372, 376, 504, 509, 512], "after": [372, 376, 447, 473, 504, 509, 512, 519], "call": [372, 376, 447, 453, 473, 504, 509, 512, 519], "set_sparsity_level": [372, 376, 504, 509, 512], "sparsity_level": [372, 376, 504, 509, 512], "rbsparsitycontrol": [376, 512], "user": 413, "could": 413, "exist": 413, "knowledgedistillationcontrol": 447, "nncf_network": [447, 453, 460, 473, 502, 504, 509, 512], "nncfnetwork": [447, 453, 460, 473, 502, 504, 509, 512], "original_model": 447, "nn": [447, 453, 460, 519], "kd_type": 447, "scale": 447, "temperatur": 447, "compression_method_api": [447, 502], "ptcompressionalgorithmcontrol": [447, 502], "multipl": [447, 473, 512], "go": [447, 473, 512], "e": [447, 453, 473, 512, 519], "distributeddataparallel": [447, 473, 512, 519], "special": [447, 453, 473, 512], "prepar": [447, 473, 512], "properli": [447, 473, 512], "made": [447, 453, 473, 512], "insid": [447, 473, 512], "dummy_forward_fn": 453, "wrap_inputs_fn": 453, "wrap_outputs_fn": 453, "dump_graph": 453, "pytorch": [453, 519], "represent": 453, "entir": 453, "suppli": 453, "instead": 453, "forward": 453, "intern": 453, "via": 453, "trace": [453, 473, 519], "pipelin": 453, "ha": 453, "loader": 453, "output": [453, 519], "other": [453, 519], "than": 453, "input": [453, 473, 519], "tensor": [453, 460, 473, 519], "otherwis": [453, 519], "mock": 453, "shape": 453, "code": 453, "nncf_model_input": 453, "underli": 453, "exactli": 453, "below": 453, "also": [453, 519], "non": 453, "pass": [453, 519], "directli": 453, "locat": 453, "receiv": [453, 519], "two": [453, 519], "posit": 453, "keyword": 453, "g": [453, 519], "oper": 453, "mark": 453, "whether": [453, 519], "dump": 453, "dot": 453, "log": 453, "directori": 453, "compositecompressioncontrol": 453, "pruned_module_group": 460, "prunedmoduleinfo": 460, "pruned_norms_oper": 460, "nncfnode": 460, "filterpruningmask": 460, "static": 460, "get_mask": 460, "minfo": 460, "groupwis": 460, "correspod": 460, "term": 460, "percentag": 460, "flop": 460, "remov": 460, "latter": 460, "being": 460, "prune_flop": 460, "flag": 460, "kei": 460, "correspond": [460, 473], "group": [460, 519], "prepare_for_export": [460, 473], "onnx": 460, "debug_interfac": 473, "quantizationdebuginterfac": 473, "weight_quant": 473, "weightquantizerid": 473, "weightquantizerinfo": 473, "non_weight_quant": 473, "nonweightquantizerid": 473, "nonweightquantizerinfo": 473, "groups_of_adjacent_quant": 473, "precision_init": 473, "adjacent_quant": 473, "groupsofadjacentquant": 473, "quantizers_input_shap": 473, "quantizerid": 473, "build_time_metric_info": 473, "metric": 473, "quantizationsharebuildtimeinfo": 473, "build_time_range_init_param": 473, "init_rang": 473, "ptrangeinitparam": 473, "quantizationcontrollerbas": 473, "deploy": 473, "init_precis": 473, "precision_init_typ": 473, "precision_init_param": 473, "base_init": 473, "baseprecisioninitparam": 473, "precision_constraint": 473, "hardwarequantizationconstraint": 473, "quantizer_setup": 473, "singleconfigquantizersetup": 473, "precis": [473, 519], "happen": 473, "measur": [473, 519], "sensit": [473, 519], "perturb": [473, 519], "averag": [473, 519], "hessian": [473, 519], "estim": [473, 519], "hutchinson": [473, 519], "range_init_param": 473, "minimum": 473, "maximum": 473, "observ": 473, "creation": 473, "basesparsityalgocontrol": [502, 504, 509, 512], "sparsified_module_info": [502, 504, 509, 512], "sparsemoduleinfo": [502, 504, 509, 512], "sparsitycontrol": 502, "constsparsitycontrol": 504, "target_sparsified_module_info": [509, 512], "quantizationprecisioninitarg": 519, "criterion_fn": 519, "_loss": 519, "criterion": 519, "bitwidth": 519, "reflect": 519, "just": 519, "direct": 519, "For": 519, "incept": 519, "v3": 519, "combin": 519, "descend": 519, "over": 519, "ptinitializingdataload": 519, "simpl": 519, "warn": 519, "final": 519, "depend": 519, "make": 519, "sure": 519, "fail": 519, "cpu": 519, "cuda": 519, "autoqprecisioninitarg": 519, "legrinitarg": 519, "train_load": 519, "train_fn": 519, "optim": 519, "val_load": 519, "val_fn": 519, "train_optim": 519, "learn": 519, "rank": 519, "initialis": 519, "epoch": 519, "train_step": 519, "number": 519, "valid": 519, "pair": 519, "acc": 519, "distributedcallbacksarg": 519, "wrapping_callback": 519, "unwrapping_callback": 519, "callback": 519, "unwrap": 519, "exampl": 519, "dataparallel": 519, "executionparamet": 519, "cpu_onli": 519, "current_gpu": 519, "gpu": 519, "refer": 528, "schema": 528}, "objects": {"": [[239, 0, 0, "-", "nncf"]], "nncf": [[11, 0, 0, "-", "api"], [44, 0, 0, "-", "common"], [113, 0, 0, "-", "config"], [137, 0, 0, "-", "data"], [138, 0, 0, "-", "definitions"], [145, 0, 0, "-", "experimental"], [255, 0, 0, "-", "onnx"], [266, 0, 0, "-", "openvino"], [270, 0, 0, "-", "parameters"], [296, 0, 0, "-", "quantization"], [300, 0, 0, "-", "scopes"], [304, 0, 0, "-", "telemetry"], [341, 0, 0, "-", "tensorflow"], [445, 0, 0, "-", "torch"], [527, 0, 0, "-", "version"]], "nncf.api": [[10, 0, 0, "-", "compression"], [12, 0, 0, "-", "statistics"]], "nncf.common": [[13, 0, 0, "-", "accuracy_aware_training"], [18, 0, 0, "-", "api_marker"], [19, 0, 0, "-", "collector"], [20, 0, 0, "-", "composite_compression"], [21, 0, 0, "-", "compression"], [22, 0, 0, "-", "deprecation"], [23, 0, 0, "-", "engine"], [24, 0, 0, "-", "exporter"], [25, 0, 0, "-", "factory"], [29, 0, 0, "-", "graph"], [42, 0, 0, "-", "hardware"], [47, 0, 0, "-", "initialization"], [48, 0, 0, "-", "insertion_point_graph"], [49, 0, 0, "-", "logging"], [53, 0, 0, "-", "pruning"], [68, 0, 0, "-", "quantization"], [82, 0, 0, "-", "schedulers"], [83, 0, 0, "-", "scopes"], [86, 0, 0, "-", "sparsity"], [89, 0, 0, "-", "stateful_classes_registry"], [90, 0, 0, "-", "statistics"], [91, 0, 0, "-", "tensor"], [94, 0, 0, "-", "tensor_statistics"], [103, 0, 0, "-", "utils"]], "nncf.common.accuracy_aware_training": [[14, 0, 0, "-", "runner"], [15, 0, 0, "-", "runner_factory"], [16, 0, 0, "-", "statistics"], [17, 0, 0, "-", "training_loop"]], "nncf.common.graph": [[26, 0, 0, "-", "definitions"], [27, 0, 0, "-", "graph"], [28, 0, 0, "-", "graph_matching"], [30, 0, 0, "-", "layer_attributes"], [31, 0, 0, "-", "model_transformer"], [32, 0, 0, "-", "operator_metatypes"], [33, 0, 0, "-", "patterns"], [38, 0, 0, "-", "transformations"], [40, 0, 0, "-", "utils"]], "nncf.common.graph.patterns": [[34, 0, 0, "-", "manager"], [35, 0, 0, "-", "patterns"]], "nncf.common.graph.transformations": [[36, 0, 0, "-", "command_creation"], [37, 0, 0, "-", "commands"], [39, 0, 0, "-", "layout"]], "nncf.common.hardware": [[41, 0, 0, "-", "config"], [43, 0, 0, "-", "opset"]], "nncf.common.initialization": [[45, 0, 0, "-", "batchnorm_adaptation"], [46, 0, 0, "-", "dataloader"]], "nncf.common.initialization.dataloader": [[46, 1, 1, "", "NNCFDataLoader"]], "nncf.common.initialization.dataloader.NNCFDataLoader": [[46, 2, 1, "", "__iter__"]], "nncf.common.logging": [[50, 0, 0, "-", "logger"], [51, 0, 0, "-", "progress_bar"]], "nncf.common.pruning": [[52, 0, 0, "-", "clusterization"], [54, 0, 0, "-", "mask_propagation"], [55, 0, 0, "-", "model_analysis"], [56, 0, 0, "-", "node_selector"], [57, 0, 0, "-", "operations"], [58, 0, 0, "-", "schedulers"], [59, 0, 0, "-", "shape_pruning_processor"], [60, 0, 0, "-", "statistics"], [61, 0, 0, "-", "structs"], [62, 0, 0, "-", "symbolic_mask"], [63, 0, 0, "-", "tensor_processor"], [64, 0, 0, "-", "utils"], [65, 0, 0, "-", "weights_flops_calculator"]], "nncf.common.quantization": [[66, 0, 0, "-", "collectors"], [67, 0, 0, "-", "config_assignment"], [69, 0, 0, "-", "initialization"], [73, 0, 0, "-", "quantizer_propagation"], [77, 0, 0, "-", "quantizer_removal"], [78, 0, 0, "-", "quantizer_setup"], [79, 0, 0, "-", "quantizers"], [80, 0, 0, "-", "statistics"], [81, 0, 0, "-", "structs"]], "nncf.common.quantization.initialization": [[70, 0, 0, "-", "range"]], "nncf.common.quantization.quantizer_propagation": [[71, 0, 0, "-", "graph"], [72, 0, 0, "-", "grouping"], [74, 0, 0, "-", "solver"], [75, 0, 0, "-", "structs"], [76, 0, 0, "-", "visualizer"]], "nncf.common.sparsity": [[84, 0, 0, "-", "collector"], [85, 0, 0, "-", "controller"], [87, 0, 0, "-", "schedulers"], [88, 0, 0, "-", "statistics"]], "nncf.common.tensor_statistics": [[92, 0, 0, "-", "aggregator"], [93, 0, 0, "-", "collectors"], [95, 0, 0, "-", "reduction"], [96, 0, 0, "-", "statistic_point"], [97, 0, 0, "-", "statistics"]], "nncf.common.utils": [[98, 0, 0, "-", "backend"], [99, 0, 0, "-", "debug"], [100, 0, 0, "-", "decorators"], [101, 0, 0, "-", "dot_file_rw"], [102, 0, 0, "-", "helpers"], [104, 0, 0, "-", "logger"], [105, 0, 0, "-", "os"], [106, 0, 0, "-", "patcher"], [107, 0, 0, "-", "registry"], [108, 0, 0, "-", "tensorboard"], [109, 0, 0, "-", "timer"]], "nncf.config": [[110, 0, 0, "-", "config"], [111, 0, 0, "-", "definitions"], [112, 0, 0, "-", "extractors"], [114, 0, 0, "-", "schema"], [132, 0, 0, "-", "schemata"], [133, 0, 0, "-", "structures"], [134, 0, 0, "-", "telemetry_extractors"], [135, 0, 0, "-", "utils"]], "nncf.config.config": [[110, 1, 1, "", "NNCFConfig"]], "nncf.config.config.NNCFConfig": [[110, 2, 1, "", "from_dict"], [110, 2, 1, "", "get_redefinable_global_param_value_for_algo"]], "nncf.config.schemata": [[115, 0, 0, "-", "accuracy_aware"], [119, 0, 0, "-", "algo"], [124, 0, 0, "-", "basic"], [126, 0, 0, "-", "common"], [130, 0, 0, "-", "defaults"], [131, 0, 0, "-", "experimental_schema"]], "nncf.config.schemata.algo": [[116, 0, 0, "-", "binarization"], [117, 0, 0, "-", "const_sparsity"], [118, 0, 0, "-", "filter_pruning"], [120, 0, 0, "-", "knowledge_distillation"], [121, 0, 0, "-", "magnitude_sparsity"], [122, 0, 0, "-", "quantization"], [123, 0, 0, "-", "rb_sparsity"]], "nncf.config.schemata.common": [[125, 0, 0, "-", "compression"], [127, 0, 0, "-", "initialization"], [128, 0, 0, "-", "sparsity"], [129, 0, 0, "-", "targeting"]], "nncf.config.structures": [[133, 1, 1, "", "BNAdaptationInitArgs"], [133, 1, 1, "", "ModelEvaluationArgs"], [133, 1, 1, "", "QuantizationRangeInitArgs"]], "nncf.data": [[136, 0, 0, "-", "dataset"]], "nncf.experimental": [[141, 0, 0, "-", "common"], [146, 0, 0, "-", "openvino"], [164, 0, 0, "-", "openvino_native"], [189, 0, 0, "-", "tensorflow"], [197, 0, 0, "-", "torch"]], "nncf.experimental.common": [[139, 0, 0, "-", "graph"], [142, 0, 0, "-", "pruning"]], "nncf.experimental.common.graph": [[140, 0, 0, "-", "netron"]], "nncf.experimental.common.pruning": [[143, 0, 0, "-", "nodes_grouping"], [144, 0, 0, "-", "operations"]], "nncf.experimental.openvino": [[147, 0, 0, "-", "quantization"]], "nncf.experimental.openvino.quantization": [[148, 0, 0, "-", "quantize"]], "nncf.experimental.openvino_native": [[149, 0, 0, "-", "engine"], [150, 0, 0, "-", "graph"], [162, 0, 0, "-", "hardware"], [173, 0, 0, "-", "quantization"], [177, 0, 0, "-", "statistics"], [179, 0, 0, "-", "tensor"]], "nncf.experimental.openvino_native.graph": [[152, 0, 0, "-", "metatypes"], [154, 0, 0, "-", "model_transformer"], [155, 0, 0, "-", "nncf_graph_builder"], [156, 0, 0, "-", "node_utils"], [159, 0, 0, "-", "transformations"]], "nncf.experimental.openvino_native.graph.metatypes": [[151, 0, 0, "-", "common"], [153, 0, 0, "-", "openvino_metatypes"]], "nncf.experimental.openvino_native.graph.transformations": [[157, 0, 0, "-", "command_creation"], [158, 0, 0, "-", "commands"]], "nncf.experimental.openvino_native.hardware": [[160, 0, 0, "-", "config"], [161, 0, 0, "-", "fused_patterns"], [163, 0, 0, "-", "pattern_operations"]], "nncf.experimental.openvino_native.quantization": [[169, 0, 0, "-", "algorithms"], [172, 0, 0, "-", "default_quantization"], [174, 0, 0, "-", "quantize"]], "nncf.experimental.openvino_native.quantization.algorithms": [[165, 0, 0, "-", "bias_correction"], [167, 0, 0, "-", "fast_bias_correction"], [170, 0, 0, "-", "min_max"]], "nncf.experimental.openvino_native.quantization.algorithms.bias_correction": [[166, 0, 0, "-", "openvino_backend"]], "nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction": [[168, 0, 0, "-", "openvino_backend"]], "nncf.experimental.openvino_native.quantization.algorithms.min_max": [[171, 0, 0, "-", "openvino_backend"]], "nncf.experimental.openvino_native.statistics": [[175, 0, 0, "-", "aggregator"], [176, 0, 0, "-", "collectors"], [178, 0, 0, "-", "statistics"]], "nncf.experimental.tensorflow": [[180, 0, 0, "-", "context"], [183, 0, 0, "-", "graph"], [190, 0, 0, "-", "nncf_network"], [191, 0, 0, "-", "patch_tf"], [193, 0, 0, "-", "quantization"], [196, 0, 0, "-", "scope"]], "nncf.experimental.tensorflow.graph": [[181, 0, 0, "-", "argprovider"], [182, 0, 0, "-", "converter"], [184, 0, 0, "-", "model_transformer"], [185, 0, 0, "-", "node_attributes"], [187, 0, 0, "-", "transformations"]], "nncf.experimental.tensorflow.graph.transformations": [[186, 0, 0, "-", "commands"], [188, 0, 0, "-", "layout"]], "nncf.experimental.tensorflow.quantization": [[192, 0, 0, "-", "algorithm"], [194, 0, 0, "-", "init_range"], [195, 0, 0, "-", "quantizers"]], "nncf.experimental.torch": [[223, 0, 0, "-", "nas"], [224, 0, 0, "-", "pruning"], [226, 0, 0, "-", "quantization"], [228, 0, 0, "-", "search_building_blocks"], [231, 0, 0, "-", "sparsity"]], "nncf.experimental.torch.nas": [[209, 0, 0, "-", "bootstrapNAS"]], "nncf.experimental.torch.nas.bootstrapNAS": [[206, 0, 0, "-", "elasticity"], [212, 0, 0, "-", "search"], [215, 0, 0, "-", "training"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity": [[198, 0, 0, "-", "base_handler"], [199, 0, 0, "-", "elastic_depth"], [200, 0, 0, "-", "elastic_kernel"], [201, 0, 0, "-", "elastic_width"], [202, 0, 0, "-", "elasticity_builder"], [203, 0, 0, "-", "elasticity_controller"], [204, 0, 0, "-", "elasticity_dim"], [205, 0, 0, "-", "filter_reorder"], [207, 0, 0, "-", "multi_elasticity_handler"], [208, 0, 0, "-", "visualization"]], "nncf.experimental.torch.nas.bootstrapNAS.search": [[210, 0, 0, "-", "evaluator"], [211, 0, 0, "-", "evaluator_handler"], [213, 0, 0, "-", "search"]], "nncf.experimental.torch.nas.bootstrapNAS.training": [[214, 0, 0, "-", "base_training"], [216, 0, 0, "-", "lr_scheduler"], [217, 0, 0, "-", "model_creator_helpers"], [218, 0, 0, "-", "progressive_shrinking_builder"], [219, 0, 0, "-", "progressive_shrinking_controller"], [220, 0, 0, "-", "scheduler"], [221, 0, 0, "-", "stage_descriptor"], [222, 0, 0, "-", "training_algorithm"]], "nncf.experimental.torch.pruning": [[225, 0, 0, "-", "operations"]], "nncf.experimental.torch.quantization": [[227, 0, 0, "-", "quantize"]], "nncf.experimental.torch.search_building_blocks": [[229, 0, 0, "-", "search_blocks"], [230, 0, 0, "-", "search_graph"]], "nncf.experimental.torch.sparsity": [[234, 0, 0, "-", "movement"]], "nncf.experimental.torch.sparsity.movement": [[232, 0, 0, "-", "algo"], [233, 0, 0, "-", "functions"], [235, 0, 0, "-", "layers"], [236, 0, 0, "-", "loss"], [237, 0, 0, "-", "scheduler"], [238, 0, 0, "-", "structured_mask_handler"]], "nncf.onnx": [[240, 0, 0, "-", "engine"], [241, 0, 0, "-", "graph"], [253, 0, 0, "-", "hardware"], [257, 0, 0, "-", "quantization"], [262, 0, 0, "-", "statistics"], [264, 0, 0, "-", "tensor"]], "nncf.onnx.graph": [[242, 0, 0, "-", "metatypes"], [244, 0, 0, "-", "model_transformer"], [245, 0, 0, "-", "nncf_graph_builder"], [246, 0, 0, "-", "node_utils"], [247, 0, 0, "-", "onnx_graph"], [250, 0, 0, "-", "transformations"]], "nncf.onnx.graph.metatypes": [[243, 0, 0, "-", "onnx_metatypes"]], "nncf.onnx.graph.transformations": [[248, 0, 0, "-", "command_creation"], [249, 0, 0, "-", "commands"]], "nncf.onnx.hardware": [[251, 0, 0, "-", "config"], [252, 0, 0, "-", "fused_patterns"], [254, 0, 0, "-", "pattern_operations"]], "nncf.onnx.quantization": [[256, 0, 0, "-", "default_quantization"], [258, 0, 0, "-", "quantize"], [259, 0, 0, "-", "quantizer_parameters"]], "nncf.onnx.statistics": [[260, 0, 0, "-", "aggregator"], [261, 0, 0, "-", "collectors"], [263, 0, 0, "-", "statistics"]], "nncf.openvino": [[265, 0, 0, "-", "engine"], [268, 0, 0, "-", "quantization"]], "nncf.openvino.quantization": [[267, 0, 0, "-", "accuracy_aware"], [269, 0, 0, "-", "quantize"]], "nncf.quantization": [[287, 0, 0, "-", "algorithms"], [295, 0, 0, "-", "fake_quantize"], [297, 0, 0, "-", "passes"], [298, 0, 0, "-", "quantize"], [299, 0, 0, "-", "telemetry_extractors"]], "nncf.quantization.algorithms": [[273, 0, 0, "-", "accuracy_control"], [277, 0, 0, "-", "algorithm"], [280, 0, 0, "-", "bias_correction"], [282, 0, 0, "-", "definitions"], [285, 0, 0, "-", "fast_bias_correction"], [290, 0, 0, "-", "min_max"], [294, 0, 0, "-", "post_training"]], "nncf.quantization.algorithms.accuracy_control": [[271, 0, 0, "-", "algorithm"], [272, 0, 0, "-", "backend"], [274, 0, 0, "-", "openvino_backend"], [275, 0, 0, "-", "rank_functions"], [276, 0, 0, "-", "ranker"]], "nncf.quantization.algorithms.bias_correction": [[278, 0, 0, "-", "algorithm"], [279, 0, 0, "-", "backend"], [281, 0, 0, "-", "onnx_backend"]], "nncf.quantization.algorithms.fast_bias_correction": [[283, 0, 0, "-", "algorithm"], [284, 0, 0, "-", "backend"], [286, 0, 0, "-", "onnx_backend"]], "nncf.quantization.algorithms.min_max": [[288, 0, 0, "-", "algorithm"], [289, 0, 0, "-", "backend"], [291, 0, 0, "-", "onnx_backend"], [292, 0, 0, "-", "torch_backend"]], "nncf.quantization.algorithms.post_training": [[293, 0, 0, "-", "algorithm"]], "nncf.quantization.quantize": [[298, 3, 1, "", "quantize"]], "nncf.telemetry": [[301, 0, 0, "-", "decorator"], [302, 0, 0, "-", "events"], [303, 0, 0, "-", "extractors"], [305, 0, 0, "-", "wrapper"]], "nncf.tensorflow": [[306, 0, 0, "-", "accuracy_aware_training"], [309, 0, 0, "-", "algorithm_selector"], [312, 0, 0, "-", "api"], [313, 0, 0, "-", "batchnorm_adaptation"], [315, 0, 0, "-", "callbacks"], [317, 0, 0, "-", "exporter"], [318, 0, 0, "-", "functions"], [320, 0, 0, "-", "graph"], [335, 0, 0, "-", "hardware"], [337, 0, 0, "-", "helpers"], [342, 0, 0, "-", "initialization"], [345, 0, 0, "-", "layers"], [348, 0, 0, "-", "loss"], [354, 0, 0, "-", "pruning"], [362, 0, 0, "-", "quantization"], [371, 0, 0, "-", "sparsity"], [382, 0, 0, "-", "tensor"], [384, 0, 0, "-", "tensor_statistics"], [387, 0, 0, "-", "tf_internals"], [389, 0, 0, "-", "utils"]], "nncf.tensorflow.accuracy_aware_training": [[307, 0, 0, "-", "keras_model_utils"], [308, 0, 0, "-", "runner"]], "nncf.tensorflow.api": [[310, 0, 0, "-", "composite_compression"], [311, 0, 0, "-", "compression"]], "nncf.tensorflow.callbacks": [[314, 0, 0, "-", "checkpoint_callback"], [316, 0, 0, "-", "statistics_callback"]], "nncf.tensorflow.graph": [[319, 0, 0, "-", "converter"], [322, 0, 0, "-", "metatypes"], [326, 0, 0, "-", "model_transformer"], [327, 0, 0, "-", "pattern_operations"], [328, 0, 0, "-", "patterns"], [330, 0, 0, "-", "transformations"], [332, 0, 0, "-", "utils"]], "nncf.tensorflow.graph.metatypes": [[321, 0, 0, "-", "common"], [323, 0, 0, "-", "keras_layers"], [324, 0, 0, "-", "matcher"], [325, 0, 0, "-", "tf_ops"]], "nncf.tensorflow.graph.transformations": [[329, 0, 0, "-", "commands"], [331, 0, 0, "-", "layout"]], "nncf.tensorflow.hardware": [[333, 0, 0, "-", "config"], [334, 0, 0, "-", "fused_patterns"]], "nncf.tensorflow.helpers": [[336, 0, 0, "-", "callback_creation"], [338, 0, 0, "-", "model_creation"], [339, 0, 0, "-", "model_manager"], [340, 0, 0, "-", "utils"]], "nncf.tensorflow.helpers.model_creation": [[338, 3, 1, "", "create_compressed_model"]], "nncf.tensorflow.initialization": [[342, 3, 1, "", "register_default_init_args"]], "nncf.tensorflow.layers": [[343, 0, 0, "-", "custom_objects"], [344, 0, 0, "-", "data_layout"], [346, 0, 0, "-", "operation"], [347, 0, 0, "-", "wrapper"]], "nncf.tensorflow.pruning": [[349, 0, 0, "-", "base_algorithm"], [350, 0, 0, "-", "callbacks"], [353, 0, 0, "-", "filter_pruning"], [355, 0, 0, "-", "operations"], [356, 0, 0, "-", "tensor_processor"], [357, 0, 0, "-", "utils"]], "nncf.tensorflow.pruning.filter_pruning": [[351, 0, 0, "-", "algorithm"], [352, 0, 0, "-", "functions"]], "nncf.tensorflow.pruning.filter_pruning.algorithm": [[351, 1, 1, "", "FilterPruningController"]], "nncf.tensorflow.pruning.filter_pruning.algorithm.FilterPruningController": [[351, 2, 1, "", "compression_stage"], [351, 2, 1, "", "disable_scheduler"], [351, 2, 1, "", "set_pruning_level"], [351, 2, 1, "", "statistics"]], "nncf.tensorflow.quantization": [[358, 0, 0, "-", "algorithm"], [359, 0, 0, "-", "collectors"], [360, 0, 0, "-", "default_quantization"], [361, 0, 0, "-", "functions"], [363, 0, 0, "-", "init_range"], [364, 0, 0, "-", "layers"], [365, 0, 0, "-", "quantize"], [366, 0, 0, "-", "quantizers"], [367, 0, 0, "-", "utils"]], "nncf.tensorflow.quantization.algorithm": [[358, 1, 1, "", "QuantizationController"]], "nncf.tensorflow.quantization.algorithm.QuantizationController": [[358, 2, 1, "", "compression_stage"], [358, 2, 1, "", "statistics"], [358, 2, 1, "", "strip_model"]], "nncf.tensorflow.sparsity": [[368, 0, 0, "-", "base_algorithm"], [369, 0, 0, "-", "callbacks"], [370, 0, 0, "-", "collector"], [374, 0, 0, "-", "magnitude"], [378, 0, 0, "-", "rb"], [381, 0, 0, "-", "utils"]], "nncf.tensorflow.sparsity.magnitude": [[372, 0, 0, "-", "algorithm"], [373, 0, 0, "-", "functions"], [375, 0, 0, "-", "operation"]], "nncf.tensorflow.sparsity.magnitude.algorithm": [[372, 1, 1, "", "MagnitudeSparsityController"]], "nncf.tensorflow.sparsity.magnitude.algorithm.MagnitudeSparsityController": [[372, 2, 1, "", "compression_stage"], [372, 2, 1, "", "disable_scheduler"], [372, 2, 1, "", "freeze"], [372, 2, 1, "", "set_sparsity_level"], [372, 2, 1, "", "statistics"]], "nncf.tensorflow.sparsity.rb": [[376, 0, 0, "-", "algorithm"], [377, 0, 0, "-", "functions"], [379, 0, 0, "-", "loss"], [380, 0, 0, "-", "operation"]], "nncf.tensorflow.sparsity.rb.algorithm": [[376, 1, 1, "", "RBSparsityController"]], "nncf.tensorflow.sparsity.rb.algorithm.RBSparsityController": [[376, 2, 1, "", "disable_scheduler"], [376, 2, 1, "", "freeze"], [376, 2, 1, "", "set_sparsity_level"], [376, 2, 1, "", "statistics"]], "nncf.tensorflow.tensor_statistics": [[383, 0, 0, "-", "collectors"], [385, 0, 0, "-", "reduction"], [386, 0, 0, "-", "statistics"]], "nncf.tensorflow.utils": [[388, 0, 0, "-", "hook_handle"], [390, 0, 0, "-", "node"], [391, 0, 0, "-", "scopes_handle"], [392, 0, 0, "-", "state"]], "nncf.torch": [[393, 0, 0, "-", "accuracy_aware_training"], [396, 0, 0, "-", "algo_selector"], [403, 0, 0, "-", "automl"], [404, 0, 0, "-", "batchnorm_adaptation"], [408, 0, 0, "-", "binarization"], [411, 0, 0, "-", "checkpoint_loading"], [412, 0, 0, "-", "composite_compression"], [413, 0, 0, "-", "compression_method_api"], [414, 0, 0, "-", "debug"], [418, 0, 0, "-", "dynamic_graph"], [430, 0, 0, "-", "engine"], [431, 0, 0, "-", "exporter"], [432, 0, 0, "-", "extensions"], [433, 0, 0, "-", "functions"], [436, 0, 0, "-", "graph"], [444, 0, 0, "-", "hardware"], [446, 0, 0, "-", "initialization"], [448, 0, 0, "-", "knowledge_distillation"], [451, 0, 0, "-", "layer_utils"], [452, 0, 0, "-", "layers"], [453, 0, 0, "-", "model_creation"], [454, 0, 0, "-", "module_operations"], [455, 0, 0, "-", "nested_objects_traversal"], [456, 0, 0, "-", "nncf_module_replacement"], [457, 0, 0, "-", "nncf_network"], [467, 0, 0, "-", "pruning"], [477, 0, 0, "-", "quantization"], [507, 0, 0, "-", "sparsity"], [518, 0, 0, "-", "statistics"], [519, 0, 0, "-", "structures"], [520, 0, 0, "-", "tensor"], [523, 0, 0, "-", "tensor_statistics"], [526, 0, 0, "-", "utils"]], "nncf.torch.accuracy_aware_training": [[394, 0, 0, "-", "runner"], [395, 0, 0, "-", "utils"]], "nncf.torch.automl": [[400, 0, 0, "-", "agent"], [401, 0, 0, "-", "environment"]], "nncf.torch.automl.agent": [[398, 0, 0, "-", "ddpg"]], "nncf.torch.automl.agent.ddpg": [[397, 0, 0, "-", "ddpg"], [399, 0, 0, "-", "memory"]], "nncf.torch.automl.environment": [[402, 0, 0, "-", "quantization_env"]], "nncf.torch.binarization": [[405, 0, 0, "-", "algo"], [406, 0, 0, "-", "binarize_functions"], [407, 0, 0, "-", "extensions"], [409, 0, 0, "-", "layers"], [410, 0, 0, "-", "reference"]], "nncf.torch.dynamic_graph": [[415, 0, 0, "-", "context"], [416, 0, 0, "-", "graph"], [417, 0, 0, "-", "graph_tracer"], [419, 0, 0, "-", "io_handling"], [420, 0, 0, "-", "layer_attributes_handlers"], [421, 0, 0, "-", "op_input_processing"], [422, 0, 0, "-", "operation_address"], [423, 0, 0, "-", "patch_pytorch"], [424, 0, 0, "-", "scope"], [425, 0, 0, "-", "scope_access"], [426, 0, 0, "-", "structs"], [427, 0, 0, "-", "trace_functions"], [428, 0, 0, "-", "trace_tensor"], [429, 0, 0, "-", "wrappers"]], "nncf.torch.graph": [[434, 0, 0, "-", "graph"], [435, 0, 0, "-", "graph_builder"], [437, 0, 0, "-", "operator_metatypes"], [438, 0, 0, "-", "pattern_operations"], [440, 0, 0, "-", "transformations"]], "nncf.torch.graph.transformations": [[439, 0, 0, "-", "commands"], [441, 0, 0, "-", "layout"]], "nncf.torch.hardware": [[442, 0, 0, "-", "config"], [443, 0, 0, "-", "fused_patterns"]], "nncf.torch.knowledge_distillation": [[447, 0, 0, "-", "algo"], [449, 0, 0, "-", "knowledge_distillation_handler"], [450, 0, 0, "-", "knowledge_distillation_loss"]], "nncf.torch.knowledge_distillation.algo": [[447, 1, 1, "", "KnowledgeDistillationController"]], "nncf.torch.knowledge_distillation.algo.KnowledgeDistillationController": [[447, 2, 1, "", "compression_stage"], [447, 2, 1, "", "distributed"], [447, 2, 1, "", "statistics"]], "nncf.torch.model_creation": [[453, 3, 1, "", "create_compressed_model"]], "nncf.torch.pruning": [[458, 0, 0, "-", "base_algo"], [459, 0, 0, "-", "export_utils"], [465, 0, 0, "-", "filter_pruning"], [468, 0, 0, "-", "operations"], [469, 0, 0, "-", "structs"], [470, 0, 0, "-", "tensor_processor"], [471, 0, 0, "-", "utils"]], "nncf.torch.pruning.filter_pruning": [[460, 0, 0, "-", "algo"], [461, 0, 0, "-", "functions"], [463, 0, 0, "-", "global_ranking"], [466, 0, 0, "-", "layers"]], "nncf.torch.pruning.filter_pruning.algo": [[460, 1, 1, "", "FilterPruningController"]], "nncf.torch.pruning.filter_pruning.algo.FilterPruningController": [[460, 2, 1, "", "compression_stage"], [460, 2, 1, "", "disable_scheduler"], [460, 2, 1, "", "get_mask"], [460, 2, 1, "", "prepare_for_export"], [460, 2, 1, "", "set_pruning_level"], [460, 2, 1, "", "statistics"], [460, 2, 1, "", "strip_model"]], "nncf.torch.pruning.filter_pruning.global_ranking": [[462, 0, 0, "-", "evolutionary_optimization"], [464, 0, 0, "-", "legr"]], "nncf.torch.quantization": [[472, 0, 0, "-", "adjust_padding"], [473, 0, 0, "-", "algo"], [474, 0, 0, "-", "default_quantization"], [475, 0, 0, "-", "extensions"], [476, 0, 0, "-", "hessian_trace"], [478, 0, 0, "-", "init_precision"], [479, 0, 0, "-", "init_range"], [480, 0, 0, "-", "layers"], [481, 0, 0, "-", "metrics"], [482, 0, 0, "-", "precision_constraints"], [490, 0, 0, "-", "precision_init"], [494, 0, 0, "-", "prepare_for_inference"], [495, 0, 0, "-", "quantize"], [496, 0, 0, "-", "quantize_functions"], [497, 0, 0, "-", "reference"], [498, 0, 0, "-", "schedulers"], [499, 0, 0, "-", "statistics"], [500, 0, 0, "-", "structs"], [501, 0, 0, "-", "translator"]], "nncf.torch.quantization.algo": [[473, 1, 1, "", "QuantizationController"]], "nncf.torch.quantization.algo.QuantizationController": [[473, 2, 1, "", "compression_stage"], [473, 2, 1, "", "distributed"], [473, 2, 1, "", "init_precision"], [473, 2, 1, "", "init_range"], [473, 2, 1, "", "prepare_for_export"], [473, 2, 1, "", "statistics"], [473, 2, 1, "", "strip_model"]], "nncf.torch.quantization.precision_init": [[483, 0, 0, "-", "adjacent_quantizers"], [484, 0, 0, "-", "autoq_init"], [485, 0, 0, "-", "base_init"], [486, 0, 0, "-", "bitwidth_graph"], [487, 0, 0, "-", "compression_ratio"], [488, 0, 0, "-", "hawq_debug"], [489, 0, 0, "-", "hawq_init"], [491, 0, 0, "-", "manual_init"], [492, 0, 0, "-", "perturbations"], [493, 0, 0, "-", "traces_order"]], "nncf.torch.sparsity": [[502, 0, 0, "-", "base_algo"], [503, 0, 0, "-", "collector"], [505, 0, 0, "-", "const"], [506, 0, 0, "-", "functions"], [508, 0, 0, "-", "layers"], [511, 0, 0, "-", "magnitude"], [514, 0, 0, "-", "rb"]], "nncf.torch.sparsity.base_algo": [[502, 1, 1, "", "BaseSparsityAlgoController"]], "nncf.torch.sparsity.base_algo.BaseSparsityAlgoController": [[502, 2, 1, "", "compression_stage"], [502, 2, 1, "", "disable_scheduler"], [502, 2, 1, "", "strip_model"]], "nncf.torch.sparsity.const": [[504, 0, 0, "-", "algo"]], "nncf.torch.sparsity.const.algo": [[504, 1, 1, "", "ConstSparsityController"]], "nncf.torch.sparsity.const.algo.ConstSparsityController": [[504, 2, 1, "", "freeze"], [504, 2, 1, "", "set_sparsity_level"], [504, 2, 1, "", "statistics"]], "nncf.torch.sparsity.magnitude": [[509, 0, 0, "-", "algo"], [510, 0, 0, "-", "functions"]], "nncf.torch.sparsity.magnitude.algo": [[509, 1, 1, "", "MagnitudeSparsityController"]], "nncf.torch.sparsity.magnitude.algo.MagnitudeSparsityController": [[509, 2, 1, "", "compression_stage"], [509, 2, 1, "", "freeze"], [509, 2, 1, "", "set_sparsity_level"], [509, 2, 1, "", "statistics"]], "nncf.torch.sparsity.rb": [[512, 0, 0, "-", "algo"], [513, 0, 0, "-", "functions"], [515, 0, 0, "-", "layers"], [516, 0, 0, "-", "loss"]], "nncf.torch.sparsity.rb.algo": [[512, 1, 1, "", "RBSparsityController"]], "nncf.torch.sparsity.rb.algo.RBSparsityController": [[512, 2, 1, "", "compression_stage"], [512, 2, 1, "", "distributed"], [512, 2, 1, "", "freeze"], [512, 2, 1, "", "set_sparsity_level"], [512, 2, 1, "", "statistics"]], "nncf.torch.statistics": [[517, 0, 0, "-", "aggregator"]], "nncf.torch.structures": [[519, 1, 1, "", "AutoQPrecisionInitArgs"], [519, 1, 1, "", "DistributedCallbacksArgs"], [519, 1, 1, "", "ExecutionParameters"], [519, 1, 1, "", "LeGRInitArgs"], [519, 1, 1, "", "QuantizationPrecisionInitArgs"]], "nncf.torch.tensor_statistics": [[521, 0, 0, "-", "algo"], [522, 0, 0, "-", "collectors"], [524, 0, 0, "-", "reduction"], [525, 0, 0, "-", "statistics"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"nncf": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528], "api": [0, 10, 11, 12, 310, 311, 312], "refer": [0, 410, 497], "compress": [10, 21, 125, 311], "statist": [12, 16, 60, 80, 88, 90, 97, 175, 176, 177, 178, 260, 261, 262, 263, 386, 499, 517, 518, 525], "common": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 125, 126, 127, 128, 129, 139, 140, 141, 142, 143, 144, 151, 321], "accuracy_aware_train": [13, 14, 15, 16, 17, 306, 307, 308, 393, 394, 395], "runner": [14, 308, 394], "runner_factori": 15, "training_loop": 17, "api_mark": 18, "collector": [19, 66, 84, 93, 176, 261, 359, 370, 383, 503, 522], "composite_compress": [20, 310, 412], "deprec": 22, "engin": [23, 149, 240, 265, 430], "export": [24, 317, 431], "factori": 25, "graph": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 71, 139, 140, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 181, 182, 183, 184, 185, 186, 187, 188, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 416, 434, 435, 436, 437, 438, 439, 440, 441], "definit": [26, 111, 138, 282], "graph_match": 28, "layer_attribut": 30, "model_transform": [31, 154, 184, 244, 326], "operator_metatyp": [32, 437], "pattern": [33, 34, 35, 328], "manag": 34, "transform": [36, 37, 38, 39, 157, 158, 159, 186, 187, 188, 248, 249, 250, 329, 330, 331, 439, 440, 441], "command_cr": [36, 157, 248], "command": [37, 158, 186, 249, 329, 439], "layout": [39, 188, 331, 441], "util": [40, 64, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 135, 332, 340, 357, 367, 381, 388, 389, 390, 391, 392, 395, 471, 526], "hardwar": [41, 42, 43, 160, 161, 162, 163, 251, 252, 253, 254, 333, 334, 335, 442, 443, 444], "config": [41, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 160, 251, 333, 442], "opset": 43, "subpackag": [44, 239, 341, 354, 371, 445, 467, 507], "initi": [45, 46, 47, 69, 70, 127, 342, 446], "batchnorm_adapt": [45, 313, 404], "dataload": 46, "class": [46, 110, 133, 351, 358, 372, 376, 447, 460, 473, 502, 504, 509, 512, 519], "submodul": [47, 113, 296, 337, 341, 353, 362, 374, 378, 445, 448, 465, 477, 505, 507, 511, 514], "insertion_point_graph": 48, "log": [49, 50, 51], "logger": [50, 104], "progress_bar": 51, "prune": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 142, 143, 144, 224, 225, 349, 350, 351, 352, 353, 354, 355, 356, 357, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471], "cluster": 52, "mask_propag": 54, "model_analysi": 55, "node_selector": 56, "oper": [57, 144, 225, 346, 355, 375, 380, 468], "schedul": [58, 82, 87, 220, 237, 498], "shape_pruning_processor": 59, "struct": [61, 75, 81, 426, 469, 500], "symbolic_mask": 62, "tensor_processor": [63, 356, 470], "weights_flops_calcul": 65, "quantiz": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 122, 147, 148, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 192, 193, 194, 195, 226, 227, 256, 257, 258, 259, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "config_assign": 67, "rang": 70, "quantizer_propag": [71, 72, 73, 74, 75, 76], "group": 72, "solver": 74, "visual": [76, 208], "quantizer_remov": 77, "quantizer_setup": 78, "scope": [83, 196, 300, 424], "sparsiti": [84, 85, 86, 87, 88, 128, 231, 232, 233, 234, 235, 236, 237, 238, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516], "control": 85, "stateful_classes_registri": 89, "tensor": [91, 179, 264, 382, 520], "tensor_statist": [92, 93, 94, 95, 96, 97, 383, 384, 385, 386, 521, 522, 523, 524, 525], "aggreg": [92, 175, 260, 517], "reduct": [95, 385, 524], "statistic_point": 96, "backend": [98, 272, 279, 284, 289], "debug": [99, 414], "decor": [100, 301], "dot_file_rw": 101, "helper": [102, 336, 337, 338, 339, 340], "o": 105, "patcher": 106, "registri": 107, "tensorboard": 108, "timer": 109, "extractor": [112, 303], "schema": 114, "schemata": [115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "accuracy_awar": [115, 267], "algo": [116, 117, 118, 119, 120, 121, 122, 123, 232, 405, 447, 460, 473, 504, 509, 512, 521], "binar": [116, 405, 406, 407, 408, 409, 410], "const_spars": 117, "filter_prun": [118, 351, 352, 353, 460, 461, 462, 463, 464, 465, 466], "knowledge_distil": [120, 447, 448, 449, 450], "magnitude_spars": 121, "rb_sparsiti": 123, "basic": 124, "target": 129, "default": 130, "experimental_schema": 131, "structur": [133, 519], "telemetry_extractor": [134, 299], "data": [136, 137], "dataset": 136, "experiment": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "netron": 140, "nodes_group": 143, "openvino": [146, 147, 148, 265, 266, 267, 268, 269], "openvino_n": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "metatyp": [151, 152, 153, 242, 243, 321, 322, 323, 324, 325], "openvino_metatyp": 153, "nncf_graph_build": [155, 245], "node_util": [156, 246], "fused_pattern": [161, 252, 334, 443], "pattern_oper": [163, 254, 327, 438], "algorithm": [165, 166, 167, 168, 169, 170, 171, 192, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 351, 358, 372, 376], "bias_correct": [165, 166, 278, 279, 280, 281], "openvino_backend": [166, 168, 171, 274], "fast_bias_correct": [167, 168, 283, 284, 285, 286], "min_max": [170, 171, 288, 289, 290, 291, 292], "default_quant": [172, 256, 360, 474], "tensorflow": [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "context": [180, 415], "argprovid": 181, "convert": [182, 319], "node_attribut": 185, "nncf_network": [190, 457], "patch_tf": 191, "init_rang": [194, 363, 479], "torch": [197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "na": [198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "bootstrapna": [198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "elast": [198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "base_handl": 198, "elastic_depth": 199, "elastic_kernel": 200, "elastic_width": 201, "elasticity_build": 202, "elasticity_control": 203, "elasticity_dim": 204, "filter_reord": 205, "multi_elasticity_handl": 207, "search": [210, 211, 212, 213], "evalu": 210, "evaluator_handl": 211, "train": [214, 215, 216, 217, 218, 219, 220, 221, 222], "base_train": 214, "lr_schedul": 216, "model_creator_help": 217, "progressive_shrinking_build": 218, "progressive_shrinking_control": 219, "stage_descriptor": 221, "training_algorithm": 222, "search_building_block": [228, 229, 230], "search_block": 229, "search_graph": 230, "movement": [232, 233, 234, 235, 236, 237, 238], "function": [233, 298, 318, 338, 342, 352, 361, 373, 377, 433, 453, 461, 506, 510, 513], "layer": [235, 343, 344, 345, 346, 347, 364, 409, 452, 466, 480, 508, 515], "loss": [236, 348, 379, 516], "structured_mask_handl": 238, "onnx": [240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "onnx_metatyp": 243, "onnx_graph": 247, "quantizer_paramet": 259, "paramet": 270, "accuracy_control": [271, 272, 273, 274, 275, 276], "rank_funct": 275, "ranker": 276, "onnx_backend": [281, 286, 291], "torch_backend": 292, "post_train": [293, 294], "fake_quant": 295, "pass": 297, "telemetri": [301, 302, 303, 304, 305], "event": 302, "wrapper": [305, 347, 429], "keras_model_util": 307, "algorithm_selector": 309, "callback": [314, 315, 316, 350, 369], "checkpoint_callback": 314, "statistics_callback": 316, "keras_lay": 323, "matcher": 324, "tf_op": 325, "callback_cr": 336, "model_cr": [338, 453], "model_manag": 339, "custom_object": 343, "data_layout": 344, "base_algorithm": [349, 368], "magnitud": [372, 373, 374, 375, 509, 510, 511], "rb": [376, 377, 378, 379, 380, 512, 513, 514, 515, 516], "tf_intern": 387, "hook_handl": 388, "node": 390, "scopes_handl": 391, "state": 392, "algo_selector": 396, "automl": [397, 398, 399, 400, 401, 402, 403], "agent": [397, 398, 399, 400], "ddpg": [397, 398, 399], "memori": 399, "environ": [401, 402], "quantization_env": 402, "binarize_funct": 406, "extens": [407, 432, 475], "checkpoint_load": 411, "compression_method_api": 413, "dynamic_graph": [415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429], "graph_trac": 417, "io_handl": 419, "layer_attributes_handl": 420, "op_input_process": 421, "operation_address": 422, "patch_pytorch": 423, "scope_access": 425, "trace_funct": 427, "trace_tensor": 428, "graph_build": 435, "knowledge_distillation_handl": 449, "knowledge_distillation_loss": 450, "layer_util": 451, "module_oper": 454, "nested_objects_travers": 455, "nncf_module_replac": 456, "base_algo": [458, 502], "export_util": 459, "global_rank": [462, 463, 464], "evolutionary_optim": 462, "legr": 464, "adjust_pad": 472, "hessian_trac": 476, "init_precis": 478, "metric": 481, "precision_constraint": 482, "precision_init": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "adjacent_quant": 483, "autoq_init": 484, "base_init": 485, "bitwidth_graph": 486, "compression_ratio": 487, "hawq_debug": 488, "hawq_init": 489, "manual_init": 491, "perturb": 492, "traces_ord": 493, "prepare_for_infer": 494, "quantize_funct": 496, "translat": 501, "const": [504, 505], "version": 527, "document": 528, "content": 528}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"NNCF API Reference": [[0, "nncf-api-reference"]], "nncf.api.compression": [[10, "module-nncf.api.compression"]], "nncf.api": [[11, "module-nncf.api"]], "nncf.api.statistics": [[12, "module-nncf.api.statistics"]], "nncf.common.accuracy_aware_training": [[13, "module-nncf.common.accuracy_aware_training"]], "nncf.common.accuracy_aware_training.runner": [[14, "module-nncf.common.accuracy_aware_training.runner"]], "nncf.common.accuracy_aware_training.runner_factory": [[15, "module-nncf.common.accuracy_aware_training.runner_factory"]], "nncf.common.accuracy_aware_training.statistics": [[16, "module-nncf.common.accuracy_aware_training.statistics"]], "nncf.common.accuracy_aware_training.training_loop": [[17, "module-nncf.common.accuracy_aware_training.training_loop"]], "nncf.common.api_marker": [[18, "module-nncf.common.api_marker"]], "nncf.common.collector": [[19, "module-nncf.common.collector"]], "nncf.common.composite_compression": [[20, "module-nncf.common.composite_compression"]], "nncf.common.compression": [[21, "module-nncf.common.compression"]], "nncf.common.deprecation": [[22, "module-nncf.common.deprecation"]], "nncf.common.engine": [[23, "module-nncf.common.engine"]], "nncf.common.exporter": [[24, "module-nncf.common.exporter"]], "nncf.common.factory": [[25, "module-nncf.common.factory"]], "nncf.common.graph.definitions": [[26, "module-nncf.common.graph.definitions"]], "nncf.common.graph.graph": [[27, "module-nncf.common.graph.graph"]], "nncf.common.graph.graph_matching": [[28, "module-nncf.common.graph.graph_matching"]], "nncf.common.graph": [[29, "module-nncf.common.graph"]], "nncf.common.graph.layer_attributes": [[30, "module-nncf.common.graph.layer_attributes"]], "nncf.common.graph.model_transformer": [[31, "module-nncf.common.graph.model_transformer"]], "nncf.common.graph.operator_metatypes": [[32, "module-nncf.common.graph.operator_metatypes"]], "nncf.common.graph.patterns": [[33, "module-nncf.common.graph.patterns"]], "nncf.common.graph.patterns.manager": [[34, "module-nncf.common.graph.patterns.manager"]], "nncf.common.graph.patterns.patterns": [[35, "module-nncf.common.graph.patterns.patterns"]], "nncf.common.graph.transformations.command_creation": [[36, "module-nncf.common.graph.transformations.command_creation"]], "nncf.common.graph.transformations.commands": [[37, "module-nncf.common.graph.transformations.commands"]], "nncf.common.graph.transformations": [[38, "module-nncf.common.graph.transformations"]], "nncf.common.graph.transformations.layout": [[39, "module-nncf.common.graph.transformations.layout"]], "nncf.common.graph.utils": [[40, "module-nncf.common.graph.utils"]], "nncf.common.hardware.config": [[41, "module-nncf.common.hardware.config"]], "nncf.common.hardware": [[42, "module-nncf.common.hardware"]], "nncf.common.hardware.opset": [[43, "module-nncf.common.hardware.opset"]], "nncf.common": [[44, "module-nncf.common"]], "Subpackages": [[44, "subpackages"], [239, "subpackages"], [341, "subpackages"], [354, "subpackages"], [371, "subpackages"], [445, "subpackages"], [467, "subpackages"], [507, "subpackages"]], "nncf.common.initialization.batchnorm_adaptation": [[45, "module-nncf.common.initialization.batchnorm_adaptation"]], "nncf.common.initialization.dataloader": [[46, "module-nncf.common.initialization.dataloader"]], "Classes": [[46, "classes"], [110, "classes"], [133, "classes"], [351, "classes"], [358, "classes"], [372, "classes"], [376, "classes"], [447, "classes"], [460, "classes"], [473, "classes"], [502, "classes"], [504, "classes"], [509, "classes"], [512, "classes"], [519, "classes"]], "nncf.common.initialization": [[47, "module-nncf.common.initialization"]], "Submodules": [[47, "submodules"], [113, "submodules"], [296, "submodules"], [337, "submodules"], [341, "submodules"], [353, "submodules"], [362, "submodules"], [374, "submodules"], [378, "submodules"], [445, "submodules"], [448, "submodules"], [465, "submodules"], [477, "submodules"], [505, "submodules"], [507, "submodules"], [511, "submodules"], [514, "submodules"]], "nncf.common.insertion_point_graph": [[48, "module-nncf.common.insertion_point_graph"]], "nncf.common.logging": [[49, "module-nncf.common.logging"]], "nncf.common.logging.logger": [[50, "module-nncf.common.logging.logger"]], "nncf.common.logging.progress_bar": [[51, "module-nncf.common.logging.progress_bar"]], "nncf.common.pruning.clusterization": [[52, "module-nncf.common.pruning.clusterization"]], "nncf.common.pruning": [[53, "module-nncf.common.pruning"]], "nncf.common.pruning.mask_propagation": [[54, "module-nncf.common.pruning.mask_propagation"]], "nncf.common.pruning.model_analysis": [[55, "module-nncf.common.pruning.model_analysis"]], "nncf.common.pruning.node_selector": [[56, "module-nncf.common.pruning.node_selector"]], "nncf.common.pruning.operations": [[57, "module-nncf.common.pruning.operations"]], "nncf.common.pruning.schedulers": [[58, "module-nncf.common.pruning.schedulers"]], "nncf.common.pruning.shape_pruning_processor": [[59, "module-nncf.common.pruning.shape_pruning_processor"]], "nncf.common.pruning.statistics": [[60, "module-nncf.common.pruning.statistics"]], "nncf.common.pruning.structs": [[61, "module-nncf.common.pruning.structs"]], "nncf.common.pruning.symbolic_mask": [[62, "module-nncf.common.pruning.symbolic_mask"]], "nncf.common.pruning.tensor_processor": [[63, "module-nncf.common.pruning.tensor_processor"]], "nncf.common.pruning.utils": [[64, "module-nncf.common.pruning.utils"]], "nncf.common.pruning.weights_flops_calculator": [[65, "module-nncf.common.pruning.weights_flops_calculator"]], "nncf.common.quantization.collectors": [[66, "module-nncf.common.quantization.collectors"]], "nncf.common.quantization.config_assignment": [[67, "module-nncf.common.quantization.config_assignment"]], "nncf.common.quantization": [[68, "module-nncf.common.quantization"]], "nncf.common.quantization.initialization": [[69, "module-nncf.common.quantization.initialization"]], "nncf.common.quantization.initialization.range": [[70, "module-nncf.common.quantization.initialization.range"]], "nncf.common.quantization.quantizer_propagation.graph": [[71, "module-nncf.common.quantization.quantizer_propagation.graph"]], "nncf.common.quantization.quantizer_propagation.grouping": [[72, "module-nncf.common.quantization.quantizer_propagation.grouping"]], "nncf.common.quantization.quantizer_propagation": [[73, "module-nncf.common.quantization.quantizer_propagation"]], "nncf.common.quantization.quantizer_propagation.solver": [[74, "module-nncf.common.quantization.quantizer_propagation.solver"]], "nncf.common.quantization.quantizer_propagation.structs": [[75, "module-nncf.common.quantization.quantizer_propagation.structs"]], "nncf.common.quantization.quantizer_propagation.visualizer": [[76, "module-nncf.common.quantization.quantizer_propagation.visualizer"]], "nncf.common.quantization.quantizer_removal": [[77, "module-nncf.common.quantization.quantizer_removal"]], "nncf.common.quantization.quantizer_setup": [[78, "module-nncf.common.quantization.quantizer_setup"]], "nncf.common.quantization.quantizers": [[79, "module-nncf.common.quantization.quantizers"]], "nncf.common.quantization.statistics": [[80, "module-nncf.common.quantization.statistics"]], "nncf.common.quantization.structs": [[81, "module-nncf.common.quantization.structs"]], "nncf.common.schedulers": [[82, "module-nncf.common.schedulers"]], "nncf.common.scopes": [[83, "module-nncf.common.scopes"]], "nncf.common.sparsity.collector": [[84, "module-nncf.common.sparsity.collector"]], "nncf.common.sparsity.controller": [[85, "module-nncf.common.sparsity.controller"]], "nncf.common.sparsity": [[86, "module-nncf.common.sparsity"]], "nncf.common.sparsity.schedulers": [[87, "module-nncf.common.sparsity.schedulers"]], "nncf.common.sparsity.statistics": [[88, "module-nncf.common.sparsity.statistics"]], "nncf.common.stateful_classes_registry": [[89, "module-nncf.common.stateful_classes_registry"]], "nncf.common.statistics": [[90, "module-nncf.common.statistics"]], "nncf.common.tensor": [[91, "module-nncf.common.tensor"]], "nncf.common.tensor_statistics.aggregator": [[92, "module-nncf.common.tensor_statistics.aggregator"]], "nncf.common.tensor_statistics.collectors": [[93, "module-nncf.common.tensor_statistics.collectors"]], "nncf.common.tensor_statistics": [[94, "module-nncf.common.tensor_statistics"]], "nncf.common.tensor_statistics.reduction": [[95, "module-nncf.common.tensor_statistics.reduction"]], "nncf.common.tensor_statistics.statistic_point": [[96, "module-nncf.common.tensor_statistics.statistic_point"]], "nncf.common.tensor_statistics.statistics": [[97, "module-nncf.common.tensor_statistics.statistics"]], "nncf.common.utils.backend": [[98, "module-nncf.common.utils.backend"]], "nncf.common.utils.debug": [[99, "module-nncf.common.utils.debug"]], "nncf.common.utils.decorators": [[100, "module-nncf.common.utils.decorators"]], "nncf.common.utils.dot_file_rw": [[101, "module-nncf.common.utils.dot_file_rw"]], "nncf.common.utils.helpers": [[102, "module-nncf.common.utils.helpers"]], "nncf.common.utils": [[103, "module-nncf.common.utils"]], "nncf.common.utils.logger": [[104, "module-nncf.common.utils.logger"]], "nncf.common.utils.os": [[105, "module-nncf.common.utils.os"]], "nncf.common.utils.patcher": [[106, "module-nncf.common.utils.patcher"]], "nncf.common.utils.registry": [[107, "module-nncf.common.utils.registry"]], "nncf.common.utils.tensorboard": [[108, "module-nncf.common.utils.tensorboard"]], "nncf.common.utils.timer": [[109, "module-nncf.common.utils.timer"]], "nncf.config.config": [[110, "module-nncf.config.config"]], "nncf.config.definitions": [[111, "module-nncf.config.definitions"]], "nncf.config.extractors": [[112, "module-nncf.config.extractors"]], "nncf.config": [[113, "module-nncf.config"]], "nncf.config.schema": [[114, "module-nncf.config.schema"]], "nncf.config.schemata.accuracy_aware": [[115, "module-nncf.config.schemata.accuracy_aware"]], "nncf.config.schemata.algo.binarization": [[116, "module-nncf.config.schemata.algo.binarization"]], "nncf.config.schemata.algo.const_sparsity": [[117, "module-nncf.config.schemata.algo.const_sparsity"]], "nncf.config.schemata.algo.filter_pruning": [[118, "module-nncf.config.schemata.algo.filter_pruning"]], "nncf.config.schemata.algo": [[119, "module-nncf.config.schemata.algo"]], "nncf.config.schemata.algo.knowledge_distillation": [[120, "module-nncf.config.schemata.algo.knowledge_distillation"]], "nncf.config.schemata.algo.magnitude_sparsity": [[121, "module-nncf.config.schemata.algo.magnitude_sparsity"]], "nncf.config.schemata.algo.quantization": [[122, "module-nncf.config.schemata.algo.quantization"]], "nncf.config.schemata.algo.rb_sparsity": [[123, "module-nncf.config.schemata.algo.rb_sparsity"]], "nncf.config.schemata.basic": [[124, "module-nncf.config.schemata.basic"]], "nncf.config.schemata.common.compression": [[125, "module-nncf.config.schemata.common.compression"]], "nncf.config.schemata.common": [[126, "module-nncf.config.schemata.common"]], "nncf.config.schemata.common.initialization": [[127, "module-nncf.config.schemata.common.initialization"]], "nncf.config.schemata.common.sparsity": [[128, "module-nncf.config.schemata.common.sparsity"]], "nncf.config.schemata.common.targeting": [[129, "module-nncf.config.schemata.common.targeting"]], "nncf.config.schemata.defaults": [[130, "module-nncf.config.schemata.defaults"]], "nncf.config.schemata.experimental_schema": [[131, "module-nncf.config.schemata.experimental_schema"]], "nncf.config.schemata": [[132, "module-nncf.config.schemata"]], "nncf.config.structures": [[133, "module-nncf.config.structures"]], "nncf.config.telemetry_extractors": [[134, "module-nncf.config.telemetry_extractors"]], "nncf.config.utils": [[135, "module-nncf.config.utils"]], "nncf.data.dataset": [[136, "module-nncf.data.dataset"]], "nncf.data": [[137, "module-nncf.data"]], "nncf.definitions": [[138, "module-nncf.definitions"]], "nncf.experimental.common.graph": [[139, "module-nncf.experimental.common.graph"]], "nncf.experimental.common.graph.netron": [[140, "module-nncf.experimental.common.graph.netron"]], "nncf.experimental.common": [[141, "module-nncf.experimental.common"]], "nncf.experimental.common.pruning": [[142, "module-nncf.experimental.common.pruning"]], "nncf.experimental.common.pruning.nodes_grouping": [[143, "module-nncf.experimental.common.pruning.nodes_grouping"]], "nncf.experimental.common.pruning.operations": [[144, "module-nncf.experimental.common.pruning.operations"]], "nncf.experimental": [[145, "module-nncf.experimental"]], "nncf.experimental.openvino": [[146, "module-nncf.experimental.openvino"]], "nncf.experimental.openvino.quantization": [[147, "module-nncf.experimental.openvino.quantization"]], "nncf.experimental.openvino.quantization.quantize": [[148, "module-nncf.experimental.openvino.quantization.quantize"]], "nncf.experimental.openvino_native.engine": [[149, "module-nncf.experimental.openvino_native.engine"]], "nncf.experimental.openvino_native.graph": [[150, "module-nncf.experimental.openvino_native.graph"]], "nncf.experimental.openvino_native.graph.metatypes.common": [[151, "module-nncf.experimental.openvino_native.graph.metatypes.common"]], "nncf.experimental.openvino_native.graph.metatypes": [[152, "module-nncf.experimental.openvino_native.graph.metatypes"]], "nncf.experimental.openvino_native.graph.metatypes.openvino_metatypes": [[153, "module-nncf.experimental.openvino_native.graph.metatypes.openvino_metatypes"]], "nncf.experimental.openvino_native.graph.model_transformer": [[154, "module-nncf.experimental.openvino_native.graph.model_transformer"]], "nncf.experimental.openvino_native.graph.nncf_graph_builder": [[155, "module-nncf.experimental.openvino_native.graph.nncf_graph_builder"]], "nncf.experimental.openvino_native.graph.node_utils": [[156, "module-nncf.experimental.openvino_native.graph.node_utils"]], "nncf.experimental.openvino_native.graph.transformations.command_creation": [[157, "module-nncf.experimental.openvino_native.graph.transformations.command_creation"]], "nncf.experimental.openvino_native.graph.transformations.commands": [[158, "module-nncf.experimental.openvino_native.graph.transformations.commands"]], "nncf.experimental.openvino_native.graph.transformations": [[159, "module-nncf.experimental.openvino_native.graph.transformations"]], "nncf.experimental.openvino_native.hardware.config": [[160, "module-nncf.experimental.openvino_native.hardware.config"]], "nncf.experimental.openvino_native.hardware.fused_patterns": [[161, "module-nncf.experimental.openvino_native.hardware.fused_patterns"]], "nncf.experimental.openvino_native.hardware": [[162, "module-nncf.experimental.openvino_native.hardware"]], "nncf.experimental.openvino_native.hardware.pattern_operations": [[163, "module-nncf.experimental.openvino_native.hardware.pattern_operations"]], "nncf.experimental.openvino_native": [[164, "module-nncf.experimental.openvino_native"]], "nncf.experimental.openvino_native.quantization.algorithms.bias_correction": [[165, "module-nncf.experimental.openvino_native.quantization.algorithms.bias_correction"]], "nncf.experimental.openvino_native.quantization.algorithms.bias_correction.openvino_backend": [[166, "module-nncf.experimental.openvino_native.quantization.algorithms.bias_correction.openvino_backend"]], "nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction": [[167, "module-nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction"]], "nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction.openvino_backend": [[168, "module-nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction.openvino_backend"]], "nncf.experimental.openvino_native.quantization.algorithms": [[169, "module-nncf.experimental.openvino_native.quantization.algorithms"]], "nncf.experimental.openvino_native.quantization.algorithms.min_max": [[170, "module-nncf.experimental.openvino_native.quantization.algorithms.min_max"]], "nncf.experimental.openvino_native.quantization.algorithms.min_max.openvino_backend": [[171, "module-nncf.experimental.openvino_native.quantization.algorithms.min_max.openvino_backend"]], "nncf.experimental.openvino_native.quantization.default_quantization": [[172, "module-nncf.experimental.openvino_native.quantization.default_quantization"]], "nncf.experimental.openvino_native.quantization": [[173, "module-nncf.experimental.openvino_native.quantization"]], "nncf.experimental.openvino_native.quantization.quantize": [[174, "module-nncf.experimental.openvino_native.quantization.quantize"]], "nncf.experimental.openvino_native.statistics.aggregator": [[175, "module-nncf.experimental.openvino_native.statistics.aggregator"]], "nncf.experimental.openvino_native.statistics.collectors": [[176, "module-nncf.experimental.openvino_native.statistics.collectors"]], "nncf.experimental.openvino_native.statistics": [[177, "module-nncf.experimental.openvino_native.statistics"]], "nncf.experimental.openvino_native.statistics.statistics": [[178, "module-nncf.experimental.openvino_native.statistics.statistics"]], "nncf.experimental.openvino_native.tensor": [[179, "module-nncf.experimental.openvino_native.tensor"]], "nncf.experimental.tensorflow.context": [[180, "module-nncf.experimental.tensorflow.context"]], "nncf.experimental.tensorflow.graph.argprovider": [[181, "module-nncf.experimental.tensorflow.graph.argprovider"]], "nncf.experimental.tensorflow.graph.converter": [[182, "module-nncf.experimental.tensorflow.graph.converter"]], "nncf.experimental.tensorflow.graph": [[183, "module-nncf.experimental.tensorflow.graph"]], "nncf.experimental.tensorflow.graph.model_transformer": [[184, "module-nncf.experimental.tensorflow.graph.model_transformer"]], "nncf.experimental.tensorflow.graph.node_attributes": [[185, "module-nncf.experimental.tensorflow.graph.node_attributes"]], "nncf.experimental.tensorflow.graph.transformations.commands": [[186, "module-nncf.experimental.tensorflow.graph.transformations.commands"]], "nncf.experimental.tensorflow.graph.transformations": [[187, "module-nncf.experimental.tensorflow.graph.transformations"]], "nncf.experimental.tensorflow.graph.transformations.layout": [[188, "module-nncf.experimental.tensorflow.graph.transformations.layout"]], "nncf.experimental.tensorflow": [[189, "module-nncf.experimental.tensorflow"]], "nncf.experimental.tensorflow.nncf_network": [[190, "module-nncf.experimental.tensorflow.nncf_network"]], "nncf.experimental.tensorflow.patch_tf": [[191, "module-nncf.experimental.tensorflow.patch_tf"]], "nncf.experimental.tensorflow.quantization.algorithm": [[192, "module-nncf.experimental.tensorflow.quantization.algorithm"]], "nncf.experimental.tensorflow.quantization": [[193, "module-nncf.experimental.tensorflow.quantization"]], "nncf.experimental.tensorflow.quantization.init_range": [[194, "module-nncf.experimental.tensorflow.quantization.init_range"]], "nncf.experimental.tensorflow.quantization.quantizers": [[195, "module-nncf.experimental.tensorflow.quantization.quantizers"]], "nncf.experimental.tensorflow.scope": [[196, "module-nncf.experimental.tensorflow.scope"]], "nncf.experimental.torch": [[197, "module-nncf.experimental.torch"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.base_handler": [[198, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.base_handler"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_depth": [[199, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_depth"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_kernel": [[200, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_kernel"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_width": [[201, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_width"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_builder": [[202, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_builder"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_controller": [[203, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_controller"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_dim": [[204, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_dim"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.filter_reorder": [[205, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.filter_reorder"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity": [[206, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.multi_elasticity_handler": [[207, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.multi_elasticity_handler"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.visualization": [[208, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.visualization"]], "nncf.experimental.torch.nas.bootstrapNAS": [[209, "module-nncf.experimental.torch.nas.bootstrapNAS"]], "nncf.experimental.torch.nas.bootstrapNAS.search.evaluator": [[210, "module-nncf.experimental.torch.nas.bootstrapNAS.search.evaluator"]], "nncf.experimental.torch.nas.bootstrapNAS.search.evaluator_handler": [[211, "module-nncf.experimental.torch.nas.bootstrapNAS.search.evaluator_handler"]], "nncf.experimental.torch.nas.bootstrapNAS.search": [[212, "module-nncf.experimental.torch.nas.bootstrapNAS.search"]], "nncf.experimental.torch.nas.bootstrapNAS.search.search": [[213, "module-nncf.experimental.torch.nas.bootstrapNAS.search.search"]], "nncf.experimental.torch.nas.bootstrapNAS.training.base_training": [[214, "module-nncf.experimental.torch.nas.bootstrapNAS.training.base_training"]], "nncf.experimental.torch.nas.bootstrapNAS.training": [[215, "module-nncf.experimental.torch.nas.bootstrapNAS.training"]], "nncf.experimental.torch.nas.bootstrapNAS.training.lr_scheduler": [[216, "module-nncf.experimental.torch.nas.bootstrapNAS.training.lr_scheduler"]], "nncf.experimental.torch.nas.bootstrapNAS.training.model_creator_helpers": [[217, "module-nncf.experimental.torch.nas.bootstrapNAS.training.model_creator_helpers"]], "nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_builder": [[218, "module-nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_builder"]], "nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_controller": [[219, "module-nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_controller"]], "nncf.experimental.torch.nas.bootstrapNAS.training.scheduler": [[220, "module-nncf.experimental.torch.nas.bootstrapNAS.training.scheduler"]], "nncf.experimental.torch.nas.bootstrapNAS.training.stage_descriptor": [[221, "module-nncf.experimental.torch.nas.bootstrapNAS.training.stage_descriptor"]], "nncf.experimental.torch.nas.bootstrapNAS.training.training_algorithm": [[222, "module-nncf.experimental.torch.nas.bootstrapNAS.training.training_algorithm"]], "nncf.experimental.torch.nas": [[223, "module-nncf.experimental.torch.nas"]], "nncf.experimental.torch.pruning": [[224, "module-nncf.experimental.torch.pruning"]], "nncf.experimental.torch.pruning.operations": [[225, "module-nncf.experimental.torch.pruning.operations"]], "nncf.experimental.torch.quantization": [[226, "module-nncf.experimental.torch.quantization"]], "nncf.experimental.torch.quantization.quantize": [[227, "module-nncf.experimental.torch.quantization.quantize"]], "nncf.experimental.torch.search_building_blocks": [[228, "module-nncf.experimental.torch.search_building_blocks"]], "nncf.experimental.torch.search_building_blocks.search_blocks": [[229, "module-nncf.experimental.torch.search_building_blocks.search_blocks"]], "nncf.experimental.torch.search_building_blocks.search_graph": [[230, "module-nncf.experimental.torch.search_building_blocks.search_graph"]], "nncf.experimental.torch.sparsity": [[231, "module-nncf.experimental.torch.sparsity"]], "nncf.experimental.torch.sparsity.movement.algo": [[232, "module-nncf.experimental.torch.sparsity.movement.algo"]], "nncf.experimental.torch.sparsity.movement.functions": [[233, "module-nncf.experimental.torch.sparsity.movement.functions"]], "nncf.experimental.torch.sparsity.movement": [[234, "module-nncf.experimental.torch.sparsity.movement"]], "nncf.experimental.torch.sparsity.movement.layers": [[235, "module-nncf.experimental.torch.sparsity.movement.layers"]], "nncf.experimental.torch.sparsity.movement.loss": [[236, "module-nncf.experimental.torch.sparsity.movement.loss"]], "nncf.experimental.torch.sparsity.movement.scheduler": [[237, "module-nncf.experimental.torch.sparsity.movement.scheduler"]], "nncf.experimental.torch.sparsity.movement.structured_mask_handler": [[238, "module-nncf.experimental.torch.sparsity.movement.structured_mask_handler"]], "nncf": [[239, "module-nncf"]], "nncf.onnx.engine": [[240, "module-nncf.onnx.engine"]], "nncf.onnx.graph": [[241, "module-nncf.onnx.graph"]], "nncf.onnx.graph.metatypes": [[242, "module-nncf.onnx.graph.metatypes"]], "nncf.onnx.graph.metatypes.onnx_metatypes": [[243, "module-nncf.onnx.graph.metatypes.onnx_metatypes"]], "nncf.onnx.graph.model_transformer": [[244, "module-nncf.onnx.graph.model_transformer"]], "nncf.onnx.graph.nncf_graph_builder": [[245, "module-nncf.onnx.graph.nncf_graph_builder"]], "nncf.onnx.graph.node_utils": [[246, "module-nncf.onnx.graph.node_utils"]], "nncf.onnx.graph.onnx_graph": [[247, "module-nncf.onnx.graph.onnx_graph"]], "nncf.onnx.graph.transformations.command_creation": [[248, "module-nncf.onnx.graph.transformations.command_creation"]], "nncf.onnx.graph.transformations.commands": [[249, "module-nncf.onnx.graph.transformations.commands"]], "nncf.onnx.graph.transformations": [[250, "module-nncf.onnx.graph.transformations"]], "nncf.onnx.hardware.config": [[251, "module-nncf.onnx.hardware.config"]], "nncf.onnx.hardware.fused_patterns": [[252, "module-nncf.onnx.hardware.fused_patterns"]], "nncf.onnx.hardware": [[253, "module-nncf.onnx.hardware"]], "nncf.onnx.hardware.pattern_operations": [[254, "module-nncf.onnx.hardware.pattern_operations"]], "nncf.onnx": [[255, "module-nncf.onnx"]], "nncf.onnx.quantization.default_quantization": [[256, "module-nncf.onnx.quantization.default_quantization"]], "nncf.onnx.quantization": [[257, "module-nncf.onnx.quantization"]], "nncf.onnx.quantization.quantize": [[258, "module-nncf.onnx.quantization.quantize"]], "nncf.onnx.quantization.quantizer_parameters": [[259, "module-nncf.onnx.quantization.quantizer_parameters"]], "nncf.onnx.statistics.aggregator": [[260, "module-nncf.onnx.statistics.aggregator"]], "nncf.onnx.statistics.collectors": [[261, "module-nncf.onnx.statistics.collectors"]], "nncf.onnx.statistics": [[262, "module-nncf.onnx.statistics"]], "nncf.onnx.statistics.statistics": [[263, "module-nncf.onnx.statistics.statistics"]], "nncf.onnx.tensor": [[264, "module-nncf.onnx.tensor"]], "nncf.openvino.engine": [[265, "module-nncf.openvino.engine"]], "nncf.openvino": [[266, "module-nncf.openvino"]], "nncf.openvino.quantization.accuracy_aware": [[267, "module-nncf.openvino.quantization.accuracy_aware"]], "nncf.openvino.quantization": [[268, "module-nncf.openvino.quantization"]], "nncf.openvino.quantization.quantize": [[269, "module-nncf.openvino.quantization.quantize"]], "nncf.parameters": [[270, "module-nncf.parameters"]], "nncf.quantization.algorithms.accuracy_control.algorithm": [[271, "module-nncf.quantization.algorithms.accuracy_control.algorithm"]], "nncf.quantization.algorithms.accuracy_control.backend": [[272, "module-nncf.quantization.algorithms.accuracy_control.backend"]], "nncf.quantization.algorithms.accuracy_control": [[273, "module-nncf.quantization.algorithms.accuracy_control"]], "nncf.quantization.algorithms.accuracy_control.openvino_backend": [[274, "module-nncf.quantization.algorithms.accuracy_control.openvino_backend"]], "nncf.quantization.algorithms.accuracy_control.rank_functions": [[275, "module-nncf.quantization.algorithms.accuracy_control.rank_functions"]], "nncf.quantization.algorithms.accuracy_control.ranker": [[276, "module-nncf.quantization.algorithms.accuracy_control.ranker"]], "nncf.quantization.algorithms.algorithm": [[277, "module-nncf.quantization.algorithms.algorithm"]], "nncf.quantization.algorithms.bias_correction.algorithm": [[278, "module-nncf.quantization.algorithms.bias_correction.algorithm"]], "nncf.quantization.algorithms.bias_correction.backend": [[279, "module-nncf.quantization.algorithms.bias_correction.backend"]], "nncf.quantization.algorithms.bias_correction": [[280, "module-nncf.quantization.algorithms.bias_correction"]], "nncf.quantization.algorithms.bias_correction.onnx_backend": [[281, "module-nncf.quantization.algorithms.bias_correction.onnx_backend"]], "nncf.quantization.algorithms.definitions": [[282, "module-nncf.quantization.algorithms.definitions"]], "nncf.quantization.algorithms.fast_bias_correction.algorithm": [[283, "module-nncf.quantization.algorithms.fast_bias_correction.algorithm"]], "nncf.quantization.algorithms.fast_bias_correction.backend": [[284, "module-nncf.quantization.algorithms.fast_bias_correction.backend"]], "nncf.quantization.algorithms.fast_bias_correction": [[285, "module-nncf.quantization.algorithms.fast_bias_correction"]], "nncf.quantization.algorithms.fast_bias_correction.onnx_backend": [[286, "module-nncf.quantization.algorithms.fast_bias_correction.onnx_backend"]], "nncf.quantization.algorithms": [[287, "module-nncf.quantization.algorithms"]], "nncf.quantization.algorithms.min_max.algorithm": [[288, "module-nncf.quantization.algorithms.min_max.algorithm"]], "nncf.quantization.algorithms.min_max.backend": [[289, "module-nncf.quantization.algorithms.min_max.backend"]], "nncf.quantization.algorithms.min_max": [[290, "module-nncf.quantization.algorithms.min_max"]], "nncf.quantization.algorithms.min_max.onnx_backend": [[291, "module-nncf.quantization.algorithms.min_max.onnx_backend"]], "nncf.quantization.algorithms.min_max.torch_backend": [[292, "module-nncf.quantization.algorithms.min_max.torch_backend"]], "nncf.quantization.algorithms.post_training.algorithm": [[293, "module-nncf.quantization.algorithms.post_training.algorithm"]], "nncf.quantization.algorithms.post_training": [[294, "module-nncf.quantization.algorithms.post_training"]], "nncf.quantization.fake_quantize": [[295, "module-nncf.quantization.fake_quantize"]], "nncf.quantization": [[296, "module-nncf.quantization"]], "nncf.quantization.passes": [[297, "module-nncf.quantization.passes"]], "nncf.quantization.quantize": [[298, "module-nncf.quantization.quantize"]], "Functions": [[298, "functions"], [338, "functions"], [342, "functions"], [453, "functions"]], "nncf.quantization.telemetry_extractors": [[299, "module-nncf.quantization.telemetry_extractors"]], "nncf.scopes": [[300, "module-nncf.scopes"]], "nncf.telemetry.decorator": [[301, "module-nncf.telemetry.decorator"]], "nncf.telemetry.events": [[302, "module-nncf.telemetry.events"]], "nncf.telemetry.extractors": [[303, "module-nncf.telemetry.extractors"]], "nncf.telemetry": [[304, "module-nncf.telemetry"]], "nncf.telemetry.wrapper": [[305, "module-nncf.telemetry.wrapper"]], "nncf.tensorflow.accuracy_aware_training": [[306, "module-nncf.tensorflow.accuracy_aware_training"]], "nncf.tensorflow.accuracy_aware_training.keras_model_utils": [[307, "module-nncf.tensorflow.accuracy_aware_training.keras_model_utils"]], "nncf.tensorflow.accuracy_aware_training.runner": [[308, "module-nncf.tensorflow.accuracy_aware_training.runner"]], "nncf.tensorflow.algorithm_selector": [[309, "module-nncf.tensorflow.algorithm_selector"]], "nncf.tensorflow.api.composite_compression": [[310, "module-nncf.tensorflow.api.composite_compression"]], "nncf.tensorflow.api.compression": [[311, "module-nncf.tensorflow.api.compression"]], "nncf.tensorflow.api": [[312, "module-nncf.tensorflow.api"]], "nncf.tensorflow.batchnorm_adaptation": [[313, "module-nncf.tensorflow.batchnorm_adaptation"]], "nncf.tensorflow.callbacks.checkpoint_callback": [[314, "module-nncf.tensorflow.callbacks.checkpoint_callback"]], "nncf.tensorflow.callbacks": [[315, "module-nncf.tensorflow.callbacks"]], "nncf.tensorflow.callbacks.statistics_callback": [[316, "module-nncf.tensorflow.callbacks.statistics_callback"]], "nncf.tensorflow.exporter": [[317, "module-nncf.tensorflow.exporter"]], "nncf.tensorflow.functions": [[318, "module-nncf.tensorflow.functions"]], "nncf.tensorflow.graph.converter": [[319, "module-nncf.tensorflow.graph.converter"]], "nncf.tensorflow.graph": [[320, "module-nncf.tensorflow.graph"]], "nncf.tensorflow.graph.metatypes.common": [[321, "module-nncf.tensorflow.graph.metatypes.common"]], "nncf.tensorflow.graph.metatypes": [[322, "module-nncf.tensorflow.graph.metatypes"]], "nncf.tensorflow.graph.metatypes.keras_layers": [[323, "module-nncf.tensorflow.graph.metatypes.keras_layers"]], "nncf.tensorflow.graph.metatypes.matcher": [[324, "module-nncf.tensorflow.graph.metatypes.matcher"]], "nncf.tensorflow.graph.metatypes.tf_ops": [[325, "module-nncf.tensorflow.graph.metatypes.tf_ops"]], "nncf.tensorflow.graph.model_transformer": [[326, "module-nncf.tensorflow.graph.model_transformer"]], "nncf.tensorflow.graph.pattern_operations": [[327, "module-nncf.tensorflow.graph.pattern_operations"]], "nncf.tensorflow.graph.patterns": [[328, "module-nncf.tensorflow.graph.patterns"]], "nncf.tensorflow.graph.transformations.commands": [[329, "module-nncf.tensorflow.graph.transformations.commands"]], "nncf.tensorflow.graph.transformations": [[330, "module-nncf.tensorflow.graph.transformations"]], "nncf.tensorflow.graph.transformations.layout": [[331, "module-nncf.tensorflow.graph.transformations.layout"]], "nncf.tensorflow.graph.utils": [[332, "module-nncf.tensorflow.graph.utils"]], "nncf.tensorflow.hardware.config": [[333, "module-nncf.tensorflow.hardware.config"]], "nncf.tensorflow.hardware.fused_patterns": [[334, "module-nncf.tensorflow.hardware.fused_patterns"]], "nncf.tensorflow.hardware": [[335, "module-nncf.tensorflow.hardware"]], "nncf.tensorflow.helpers.callback_creation": [[336, "module-nncf.tensorflow.helpers.callback_creation"]], "nncf.tensorflow.helpers": [[337, "module-nncf.tensorflow.helpers"]], "nncf.tensorflow.helpers.model_creation": [[338, "module-nncf.tensorflow.helpers.model_creation"]], "nncf.tensorflow.helpers.model_manager": [[339, "module-nncf.tensorflow.helpers.model_manager"]], "nncf.tensorflow.helpers.utils": [[340, "module-nncf.tensorflow.helpers.utils"]], "nncf.tensorflow": [[341, "module-nncf.tensorflow"]], "nncf.tensorflow.initialization": [[342, "module-nncf.tensorflow.initialization"]], "nncf.tensorflow.layers.custom_objects": [[343, "module-nncf.tensorflow.layers.custom_objects"]], "nncf.tensorflow.layers.data_layout": [[344, "module-nncf.tensorflow.layers.data_layout"]], "nncf.tensorflow.layers": [[345, "module-nncf.tensorflow.layers"]], "nncf.tensorflow.layers.operation": [[346, "module-nncf.tensorflow.layers.operation"]], "nncf.tensorflow.layers.wrapper": [[347, "module-nncf.tensorflow.layers.wrapper"]], "nncf.tensorflow.loss": [[348, "module-nncf.tensorflow.loss"]], "nncf.tensorflow.pruning.base_algorithm": [[349, "module-nncf.tensorflow.pruning.base_algorithm"]], "nncf.tensorflow.pruning.callbacks": [[350, "module-nncf.tensorflow.pruning.callbacks"]], "nncf.tensorflow.pruning.filter_pruning.algorithm": [[351, "module-nncf.tensorflow.pruning.filter_pruning.algorithm"]], "nncf.tensorflow.pruning.filter_pruning.functions": [[352, "module-nncf.tensorflow.pruning.filter_pruning.functions"]], "nncf.tensorflow.pruning.filter_pruning": [[353, "module-nncf.tensorflow.pruning.filter_pruning"]], "nncf.tensorflow.pruning": [[354, "module-nncf.tensorflow.pruning"]], "nncf.tensorflow.pruning.operations": [[355, "module-nncf.tensorflow.pruning.operations"]], "nncf.tensorflow.pruning.tensor_processor": [[356, "module-nncf.tensorflow.pruning.tensor_processor"]], "nncf.tensorflow.pruning.utils": [[357, "module-nncf.tensorflow.pruning.utils"]], "nncf.tensorflow.quantization.algorithm": [[358, "module-nncf.tensorflow.quantization.algorithm"]], "nncf.tensorflow.quantization.collectors": [[359, "module-nncf.tensorflow.quantization.collectors"]], "nncf.tensorflow.quantization.default_quantization": [[360, "module-nncf.tensorflow.quantization.default_quantization"]], "nncf.tensorflow.quantization.functions": [[361, "module-nncf.tensorflow.quantization.functions"]], "nncf.tensorflow.quantization": [[362, "module-nncf.tensorflow.quantization"]], "nncf.tensorflow.quantization.init_range": [[363, "module-nncf.tensorflow.quantization.init_range"]], "nncf.tensorflow.quantization.layers": [[364, "module-nncf.tensorflow.quantization.layers"]], "nncf.tensorflow.quantization.quantize": [[365, "module-nncf.tensorflow.quantization.quantize"]], "nncf.tensorflow.quantization.quantizers": [[366, "module-nncf.tensorflow.quantization.quantizers"]], "nncf.tensorflow.quantization.utils": [[367, "module-nncf.tensorflow.quantization.utils"]], "nncf.tensorflow.sparsity.base_algorithm": [[368, "module-nncf.tensorflow.sparsity.base_algorithm"]], "nncf.tensorflow.sparsity.callbacks": [[369, "module-nncf.tensorflow.sparsity.callbacks"]], "nncf.tensorflow.sparsity.collector": [[370, "module-nncf.tensorflow.sparsity.collector"]], "nncf.tensorflow.sparsity": [[371, "module-nncf.tensorflow.sparsity"]], "nncf.tensorflow.sparsity.magnitude.algorithm": [[372, "module-nncf.tensorflow.sparsity.magnitude.algorithm"]], "nncf.tensorflow.sparsity.magnitude.functions": [[373, "module-nncf.tensorflow.sparsity.magnitude.functions"]], "nncf.tensorflow.sparsity.magnitude": [[374, "module-nncf.tensorflow.sparsity.magnitude"]], "nncf.tensorflow.sparsity.magnitude.operation": [[375, "module-nncf.tensorflow.sparsity.magnitude.operation"]], "nncf.tensorflow.sparsity.rb.algorithm": [[376, "module-nncf.tensorflow.sparsity.rb.algorithm"]], "nncf.tensorflow.sparsity.rb.functions": [[377, "module-nncf.tensorflow.sparsity.rb.functions"]], "nncf.tensorflow.sparsity.rb": [[378, "module-nncf.tensorflow.sparsity.rb"]], "nncf.tensorflow.sparsity.rb.loss": [[379, "module-nncf.tensorflow.sparsity.rb.loss"]], "nncf.tensorflow.sparsity.rb.operation": [[380, "module-nncf.tensorflow.sparsity.rb.operation"]], "nncf.tensorflow.sparsity.utils": [[381, "module-nncf.tensorflow.sparsity.utils"]], "nncf.tensorflow.tensor": [[382, "module-nncf.tensorflow.tensor"]], "nncf.tensorflow.tensor_statistics.collectors": [[383, "module-nncf.tensorflow.tensor_statistics.collectors"]], "nncf.tensorflow.tensor_statistics": [[384, "module-nncf.tensorflow.tensor_statistics"]], "nncf.tensorflow.tensor_statistics.reduction": [[385, "module-nncf.tensorflow.tensor_statistics.reduction"]], "nncf.tensorflow.tensor_statistics.statistics": [[386, "module-nncf.tensorflow.tensor_statistics.statistics"]], "nncf.tensorflow.tf_internals": [[387, "module-nncf.tensorflow.tf_internals"]], "nncf.tensorflow.utils.hook_handle": [[388, "module-nncf.tensorflow.utils.hook_handle"]], "nncf.tensorflow.utils": [[389, "module-nncf.tensorflow.utils"]], "nncf.tensorflow.utils.node": [[390, "module-nncf.tensorflow.utils.node"]], "nncf.tensorflow.utils.scopes_handle": [[391, "module-nncf.tensorflow.utils.scopes_handle"]], "nncf.tensorflow.utils.state": [[392, "module-nncf.tensorflow.utils.state"]], "nncf.torch.accuracy_aware_training": [[393, "module-nncf.torch.accuracy_aware_training"]], "nncf.torch.accuracy_aware_training.runner": [[394, "module-nncf.torch.accuracy_aware_training.runner"]], "nncf.torch.accuracy_aware_training.utils": [[395, "module-nncf.torch.accuracy_aware_training.utils"]], "nncf.torch.algo_selector": [[396, "module-nncf.torch.algo_selector"]], "nncf.torch.automl.agent.ddpg.ddpg": [[397, "module-nncf.torch.automl.agent.ddpg.ddpg"]], "nncf.torch.automl.agent.ddpg": [[398, "module-nncf.torch.automl.agent.ddpg"]], "nncf.torch.automl.agent.ddpg.memory": [[399, "module-nncf.torch.automl.agent.ddpg.memory"]], "nncf.torch.automl.agent": [[400, "module-nncf.torch.automl.agent"]], "nncf.torch.automl.environment": [[401, "module-nncf.torch.automl.environment"]], "nncf.torch.automl.environment.quantization_env": [[402, "module-nncf.torch.automl.environment.quantization_env"]], "nncf.torch.automl": [[403, "module-nncf.torch.automl"]], "nncf.torch.batchnorm_adaptation": [[404, "module-nncf.torch.batchnorm_adaptation"]], "nncf.torch.binarization.algo": [[405, "module-nncf.torch.binarization.algo"]], "nncf.torch.binarization.binarize_functions": [[406, "module-nncf.torch.binarization.binarize_functions"]], "nncf.torch.binarization.extensions": [[407, "module-nncf.torch.binarization.extensions"]], "nncf.torch.binarization": [[408, "module-nncf.torch.binarization"]], "nncf.torch.binarization.layers": [[409, "module-nncf.torch.binarization.layers"]], "nncf.torch.binarization.reference": [[410, "module-nncf.torch.binarization.reference"]], "nncf.torch.checkpoint_loading": [[411, "module-nncf.torch.checkpoint_loading"]], "nncf.torch.composite_compression": [[412, "module-nncf.torch.composite_compression"]], "nncf.torch.compression_method_api": [[413, "module-nncf.torch.compression_method_api"]], "nncf.torch.debug": [[414, "module-nncf.torch.debug"]], "nncf.torch.dynamic_graph.context": [[415, "module-nncf.torch.dynamic_graph.context"]], "nncf.torch.dynamic_graph.graph": [[416, "module-nncf.torch.dynamic_graph.graph"]], "nncf.torch.dynamic_graph.graph_tracer": [[417, "module-nncf.torch.dynamic_graph.graph_tracer"]], "nncf.torch.dynamic_graph": [[418, "module-nncf.torch.dynamic_graph"]], "nncf.torch.dynamic_graph.io_handling": [[419, "module-nncf.torch.dynamic_graph.io_handling"]], "nncf.torch.dynamic_graph.layer_attributes_handlers": [[420, "module-nncf.torch.dynamic_graph.layer_attributes_handlers"]], "nncf.torch.dynamic_graph.op_input_processing": [[421, "module-nncf.torch.dynamic_graph.op_input_processing"]], "nncf.torch.dynamic_graph.operation_address": [[422, "module-nncf.torch.dynamic_graph.operation_address"]], "nncf.torch.dynamic_graph.patch_pytorch": [[423, "module-nncf.torch.dynamic_graph.patch_pytorch"]], "nncf.torch.dynamic_graph.scope": [[424, "module-nncf.torch.dynamic_graph.scope"]], "nncf.torch.dynamic_graph.scope_access": [[425, "module-nncf.torch.dynamic_graph.scope_access"]], "nncf.torch.dynamic_graph.structs": [[426, "module-nncf.torch.dynamic_graph.structs"]], "nncf.torch.dynamic_graph.trace_functions": [[427, "module-nncf.torch.dynamic_graph.trace_functions"]], "nncf.torch.dynamic_graph.trace_tensor": [[428, "module-nncf.torch.dynamic_graph.trace_tensor"]], "nncf.torch.dynamic_graph.wrappers": [[429, "module-nncf.torch.dynamic_graph.wrappers"]], "nncf.torch.engine": [[430, "module-nncf.torch.engine"]], "nncf.torch.exporter": [[431, "module-nncf.torch.exporter"]], "nncf.torch.extensions": [[432, "module-nncf.torch.extensions"]], "nncf.torch.functions": [[433, "module-nncf.torch.functions"]], "nncf.torch.graph.graph": [[434, "module-nncf.torch.graph.graph"]], "nncf.torch.graph.graph_builder": [[435, "module-nncf.torch.graph.graph_builder"]], "nncf.torch.graph": [[436, "module-nncf.torch.graph"]], "nncf.torch.graph.operator_metatypes": [[437, "module-nncf.torch.graph.operator_metatypes"]], "nncf.torch.graph.pattern_operations": [[438, "module-nncf.torch.graph.pattern_operations"]], "nncf.torch.graph.transformations.commands": [[439, "module-nncf.torch.graph.transformations.commands"]], "nncf.torch.graph.transformations": [[440, "module-nncf.torch.graph.transformations"]], "nncf.torch.graph.transformations.layout": [[441, "module-nncf.torch.graph.transformations.layout"]], "nncf.torch.hardware.config": [[442, "module-nncf.torch.hardware.config"]], "nncf.torch.hardware.fused_patterns": [[443, "module-nncf.torch.hardware.fused_patterns"]], "nncf.torch.hardware": [[444, "module-nncf.torch.hardware"]], "nncf.torch": [[445, "module-nncf.torch"]], "nncf.torch.initialization": [[446, "module-nncf.torch.initialization"]], "nncf.torch.knowledge_distillation.algo": [[447, "module-nncf.torch.knowledge_distillation.algo"]], "nncf.torch.knowledge_distillation": [[448, "module-nncf.torch.knowledge_distillation"]], "nncf.torch.knowledge_distillation.knowledge_distillation_handler": [[449, "module-nncf.torch.knowledge_distillation.knowledge_distillation_handler"]], "nncf.torch.knowledge_distillation.knowledge_distillation_loss": [[450, "module-nncf.torch.knowledge_distillation.knowledge_distillation_loss"]], "nncf.torch.layer_utils": [[451, "module-nncf.torch.layer_utils"]], "nncf.torch.layers": [[452, "module-nncf.torch.layers"]], "nncf.torch.model_creation": [[453, "module-nncf.torch.model_creation"]], "nncf.torch.module_operations": [[454, "module-nncf.torch.module_operations"]], "nncf.torch.nested_objects_traversal": [[455, "module-nncf.torch.nested_objects_traversal"]], "nncf.torch.nncf_module_replacement": [[456, "module-nncf.torch.nncf_module_replacement"]], "nncf.torch.nncf_network": [[457, "module-nncf.torch.nncf_network"]], "nncf.torch.pruning.base_algo": [[458, "module-nncf.torch.pruning.base_algo"]], "nncf.torch.pruning.export_utils": [[459, "module-nncf.torch.pruning.export_utils"]], "nncf.torch.pruning.filter_pruning.algo": [[460, "module-nncf.torch.pruning.filter_pruning.algo"]], "nncf.torch.pruning.filter_pruning.functions": [[461, "module-nncf.torch.pruning.filter_pruning.functions"]], "nncf.torch.pruning.filter_pruning.global_ranking.evolutionary_optimization": [[462, "module-nncf.torch.pruning.filter_pruning.global_ranking.evolutionary_optimization"]], "nncf.torch.pruning.filter_pruning.global_ranking": [[463, "module-nncf.torch.pruning.filter_pruning.global_ranking"]], "nncf.torch.pruning.filter_pruning.global_ranking.legr": [[464, "module-nncf.torch.pruning.filter_pruning.global_ranking.legr"]], "nncf.torch.pruning.filter_pruning": [[465, "module-nncf.torch.pruning.filter_pruning"]], "nncf.torch.pruning.filter_pruning.layers": [[466, "module-nncf.torch.pruning.filter_pruning.layers"]], "nncf.torch.pruning": [[467, "module-nncf.torch.pruning"]], "nncf.torch.pruning.operations": [[468, "module-nncf.torch.pruning.operations"]], "nncf.torch.pruning.structs": [[469, "module-nncf.torch.pruning.structs"]], "nncf.torch.pruning.tensor_processor": [[470, "module-nncf.torch.pruning.tensor_processor"]], "nncf.torch.pruning.utils": [[471, "module-nncf.torch.pruning.utils"]], "nncf.torch.quantization.adjust_padding": [[472, "module-nncf.torch.quantization.adjust_padding"]], "nncf.torch.quantization.algo": [[473, "module-nncf.torch.quantization.algo"]], "nncf.torch.quantization.default_quantization": [[474, "module-nncf.torch.quantization.default_quantization"]], "nncf.torch.quantization.extensions": [[475, "module-nncf.torch.quantization.extensions"]], "nncf.torch.quantization.hessian_trace": [[476, "module-nncf.torch.quantization.hessian_trace"]], "nncf.torch.quantization": [[477, "module-nncf.torch.quantization"]], "nncf.torch.quantization.init_precision": [[478, "module-nncf.torch.quantization.init_precision"]], "nncf.torch.quantization.init_range": [[479, "module-nncf.torch.quantization.init_range"]], "nncf.torch.quantization.layers": [[480, "module-nncf.torch.quantization.layers"]], "nncf.torch.quantization.metrics": [[481, "module-nncf.torch.quantization.metrics"]], "nncf.torch.quantization.precision_constraints": [[482, "module-nncf.torch.quantization.precision_constraints"]], "nncf.torch.quantization.precision_init.adjacent_quantizers": [[483, "module-nncf.torch.quantization.precision_init.adjacent_quantizers"]], "nncf.torch.quantization.precision_init.autoq_init": [[484, "module-nncf.torch.quantization.precision_init.autoq_init"]], "nncf.torch.quantization.precision_init.base_init": [[485, "module-nncf.torch.quantization.precision_init.base_init"]], "nncf.torch.quantization.precision_init.bitwidth_graph": [[486, "module-nncf.torch.quantization.precision_init.bitwidth_graph"]], "nncf.torch.quantization.precision_init.compression_ratio": [[487, "module-nncf.torch.quantization.precision_init.compression_ratio"]], "nncf.torch.quantization.precision_init.hawq_debug": [[488, "module-nncf.torch.quantization.precision_init.hawq_debug"]], "nncf.torch.quantization.precision_init.hawq_init": [[489, "module-nncf.torch.quantization.precision_init.hawq_init"]], "nncf.torch.quantization.precision_init": [[490, "module-nncf.torch.quantization.precision_init"]], "nncf.torch.quantization.precision_init.manual_init": [[491, "module-nncf.torch.quantization.precision_init.manual_init"]], "nncf.torch.quantization.precision_init.perturbations": [[492, "module-nncf.torch.quantization.precision_init.perturbations"]], "nncf.torch.quantization.precision_init.traces_order": [[493, "module-nncf.torch.quantization.precision_init.traces_order"]], "nncf.torch.quantization.prepare_for_inference": [[494, "module-nncf.torch.quantization.prepare_for_inference"]], "nncf.torch.quantization.quantize": [[495, "module-nncf.torch.quantization.quantize"]], "nncf.torch.quantization.quantize_functions": [[496, "module-nncf.torch.quantization.quantize_functions"]], "nncf.torch.quantization.reference": [[497, "module-nncf.torch.quantization.reference"]], "nncf.torch.quantization.schedulers": [[498, "module-nncf.torch.quantization.schedulers"]], "nncf.torch.quantization.statistics": [[499, "module-nncf.torch.quantization.statistics"]], "nncf.torch.quantization.structs": [[500, "module-nncf.torch.quantization.structs"]], "nncf.torch.quantization.translator": [[501, "module-nncf.torch.quantization.translator"]], "nncf.torch.sparsity.base_algo": [[502, "module-nncf.torch.sparsity.base_algo"]], "nncf.torch.sparsity.collector": [[503, "module-nncf.torch.sparsity.collector"]], "nncf.torch.sparsity.const.algo": [[504, "module-nncf.torch.sparsity.const.algo"]], "nncf.torch.sparsity.const": [[505, "module-nncf.torch.sparsity.const"]], "nncf.torch.sparsity.functions": [[506, "module-nncf.torch.sparsity.functions"]], "nncf.torch.sparsity": [[507, "module-nncf.torch.sparsity"]], "nncf.torch.sparsity.layers": [[508, "module-nncf.torch.sparsity.layers"]], "nncf.torch.sparsity.magnitude.algo": [[509, "module-nncf.torch.sparsity.magnitude.algo"]], "nncf.torch.sparsity.magnitude.functions": [[510, "module-nncf.torch.sparsity.magnitude.functions"]], "nncf.torch.sparsity.magnitude": [[511, "module-nncf.torch.sparsity.magnitude"]], "nncf.torch.sparsity.rb.algo": [[512, "module-nncf.torch.sparsity.rb.algo"]], "nncf.torch.sparsity.rb.functions": [[513, "module-nncf.torch.sparsity.rb.functions"]], "nncf.torch.sparsity.rb": [[514, "module-nncf.torch.sparsity.rb"]], "nncf.torch.sparsity.rb.layers": [[515, "module-nncf.torch.sparsity.rb.layers"]], "nncf.torch.sparsity.rb.loss": [[516, "module-nncf.torch.sparsity.rb.loss"]], "nncf.torch.statistics.aggregator": [[517, "module-nncf.torch.statistics.aggregator"]], "nncf.torch.statistics": [[518, "module-nncf.torch.statistics"]], "nncf.torch.structures": [[519, "module-nncf.torch.structures"]], "nncf.torch.tensor": [[520, "module-nncf.torch.tensor"]], "nncf.torch.tensor_statistics.algo": [[521, "module-nncf.torch.tensor_statistics.algo"]], "nncf.torch.tensor_statistics.collectors": [[522, "module-nncf.torch.tensor_statistics.collectors"]], "nncf.torch.tensor_statistics": [[523, "module-nncf.torch.tensor_statistics"]], "nncf.torch.tensor_statistics.reduction": [[524, "module-nncf.torch.tensor_statistics.reduction"]], "nncf.torch.tensor_statistics.statistics": [[525, "module-nncf.torch.tensor_statistics.statistics"]], "nncf.torch.utils": [[526, "module-nncf.torch.utils"]], "nncf.version": [[527, "module-nncf.version"]], "NNCF documentation": [[528, "nncf-documentation"]], "Contents:": [[528, null]]}, "indexentries": {"module": [[10, "module-nncf.api.compression"], [11, "module-nncf.api"], [12, "module-nncf.api.statistics"], [13, "module-nncf.common.accuracy_aware_training"], [14, "module-nncf.common.accuracy_aware_training.runner"], [15, "module-nncf.common.accuracy_aware_training.runner_factory"], [16, "module-nncf.common.accuracy_aware_training.statistics"], [17, "module-nncf.common.accuracy_aware_training.training_loop"], [18, "module-nncf.common.api_marker"], [19, "module-nncf.common.collector"], [20, "module-nncf.common.composite_compression"], [21, "module-nncf.common.compression"], [22, "module-nncf.common.deprecation"], [23, "module-nncf.common.engine"], [24, "module-nncf.common.exporter"], [25, "module-nncf.common.factory"], [26, "module-nncf.common.graph.definitions"], [27, "module-nncf.common.graph.graph"], [28, "module-nncf.common.graph.graph_matching"], [29, "module-nncf.common.graph"], [30, "module-nncf.common.graph.layer_attributes"], [31, "module-nncf.common.graph.model_transformer"], [32, "module-nncf.common.graph.operator_metatypes"], [33, "module-nncf.common.graph.patterns"], [34, "module-nncf.common.graph.patterns.manager"], [35, "module-nncf.common.graph.patterns.patterns"], [36, "module-nncf.common.graph.transformations.command_creation"], [37, "module-nncf.common.graph.transformations.commands"], [38, "module-nncf.common.graph.transformations"], [39, "module-nncf.common.graph.transformations.layout"], [40, "module-nncf.common.graph.utils"], [41, "module-nncf.common.hardware.config"], [42, "module-nncf.common.hardware"], [43, "module-nncf.common.hardware.opset"], [44, "module-nncf.common"], [45, "module-nncf.common.initialization.batchnorm_adaptation"], [46, "module-nncf.common.initialization.dataloader"], [47, "module-nncf.common.initialization"], [48, "module-nncf.common.insertion_point_graph"], [49, "module-nncf.common.logging"], [50, "module-nncf.common.logging.logger"], [51, "module-nncf.common.logging.progress_bar"], [52, "module-nncf.common.pruning.clusterization"], [53, "module-nncf.common.pruning"], [54, "module-nncf.common.pruning.mask_propagation"], [55, "module-nncf.common.pruning.model_analysis"], [56, "module-nncf.common.pruning.node_selector"], [57, "module-nncf.common.pruning.operations"], [58, "module-nncf.common.pruning.schedulers"], [59, "module-nncf.common.pruning.shape_pruning_processor"], [60, "module-nncf.common.pruning.statistics"], [61, "module-nncf.common.pruning.structs"], [62, "module-nncf.common.pruning.symbolic_mask"], [63, "module-nncf.common.pruning.tensor_processor"], [64, "module-nncf.common.pruning.utils"], [65, "module-nncf.common.pruning.weights_flops_calculator"], [66, "module-nncf.common.quantization.collectors"], [67, "module-nncf.common.quantization.config_assignment"], [68, "module-nncf.common.quantization"], [69, "module-nncf.common.quantization.initialization"], [70, "module-nncf.common.quantization.initialization.range"], [71, "module-nncf.common.quantization.quantizer_propagation.graph"], [72, "module-nncf.common.quantization.quantizer_propagation.grouping"], [73, "module-nncf.common.quantization.quantizer_propagation"], [74, "module-nncf.common.quantization.quantizer_propagation.solver"], [75, "module-nncf.common.quantization.quantizer_propagation.structs"], [76, "module-nncf.common.quantization.quantizer_propagation.visualizer"], [77, "module-nncf.common.quantization.quantizer_removal"], [78, "module-nncf.common.quantization.quantizer_setup"], [79, "module-nncf.common.quantization.quantizers"], [80, "module-nncf.common.quantization.statistics"], [81, "module-nncf.common.quantization.structs"], [82, "module-nncf.common.schedulers"], [83, "module-nncf.common.scopes"], [84, "module-nncf.common.sparsity.collector"], [85, "module-nncf.common.sparsity.controller"], [86, "module-nncf.common.sparsity"], [87, "module-nncf.common.sparsity.schedulers"], [88, "module-nncf.common.sparsity.statistics"], [89, "module-nncf.common.stateful_classes_registry"], [90, "module-nncf.common.statistics"], [91, "module-nncf.common.tensor"], [92, "module-nncf.common.tensor_statistics.aggregator"], [93, "module-nncf.common.tensor_statistics.collectors"], [94, "module-nncf.common.tensor_statistics"], [95, "module-nncf.common.tensor_statistics.reduction"], [96, "module-nncf.common.tensor_statistics.statistic_point"], [97, "module-nncf.common.tensor_statistics.statistics"], [98, "module-nncf.common.utils.backend"], [99, "module-nncf.common.utils.debug"], [100, "module-nncf.common.utils.decorators"], [101, "module-nncf.common.utils.dot_file_rw"], [102, "module-nncf.common.utils.helpers"], [103, "module-nncf.common.utils"], [104, "module-nncf.common.utils.logger"], [105, "module-nncf.common.utils.os"], [106, "module-nncf.common.utils.patcher"], [107, "module-nncf.common.utils.registry"], [108, "module-nncf.common.utils.tensorboard"], [109, "module-nncf.common.utils.timer"], [110, "module-nncf.config.config"], [111, "module-nncf.config.definitions"], [112, "module-nncf.config.extractors"], [113, "module-nncf.config"], [114, "module-nncf.config.schema"], [115, "module-nncf.config.schemata.accuracy_aware"], [116, "module-nncf.config.schemata.algo.binarization"], [117, "module-nncf.config.schemata.algo.const_sparsity"], [118, "module-nncf.config.schemata.algo.filter_pruning"], [119, "module-nncf.config.schemata.algo"], [120, "module-nncf.config.schemata.algo.knowledge_distillation"], [121, "module-nncf.config.schemata.algo.magnitude_sparsity"], [122, "module-nncf.config.schemata.algo.quantization"], [123, "module-nncf.config.schemata.algo.rb_sparsity"], [124, "module-nncf.config.schemata.basic"], [125, "module-nncf.config.schemata.common.compression"], [126, "module-nncf.config.schemata.common"], [127, "module-nncf.config.schemata.common.initialization"], [128, "module-nncf.config.schemata.common.sparsity"], [129, "module-nncf.config.schemata.common.targeting"], [130, "module-nncf.config.schemata.defaults"], [131, "module-nncf.config.schemata.experimental_schema"], [132, "module-nncf.config.schemata"], [133, "module-nncf.config.structures"], [134, "module-nncf.config.telemetry_extractors"], [135, "module-nncf.config.utils"], [136, "module-nncf.data.dataset"], [137, "module-nncf.data"], [138, "module-nncf.definitions"], [139, "module-nncf.experimental.common.graph"], [140, "module-nncf.experimental.common.graph.netron"], [141, "module-nncf.experimental.common"], [142, "module-nncf.experimental.common.pruning"], [143, "module-nncf.experimental.common.pruning.nodes_grouping"], [144, "module-nncf.experimental.common.pruning.operations"], [145, "module-nncf.experimental"], [146, "module-nncf.experimental.openvino"], [147, "module-nncf.experimental.openvino.quantization"], [148, "module-nncf.experimental.openvino.quantization.quantize"], [149, "module-nncf.experimental.openvino_native.engine"], [150, "module-nncf.experimental.openvino_native.graph"], [151, "module-nncf.experimental.openvino_native.graph.metatypes.common"], [152, "module-nncf.experimental.openvino_native.graph.metatypes"], [153, "module-nncf.experimental.openvino_native.graph.metatypes.openvino_metatypes"], [154, "module-nncf.experimental.openvino_native.graph.model_transformer"], [155, "module-nncf.experimental.openvino_native.graph.nncf_graph_builder"], [156, "module-nncf.experimental.openvino_native.graph.node_utils"], [157, "module-nncf.experimental.openvino_native.graph.transformations.command_creation"], [158, "module-nncf.experimental.openvino_native.graph.transformations.commands"], [159, "module-nncf.experimental.openvino_native.graph.transformations"], [160, "module-nncf.experimental.openvino_native.hardware.config"], [161, "module-nncf.experimental.openvino_native.hardware.fused_patterns"], [162, "module-nncf.experimental.openvino_native.hardware"], [163, "module-nncf.experimental.openvino_native.hardware.pattern_operations"], [164, "module-nncf.experimental.openvino_native"], [165, "module-nncf.experimental.openvino_native.quantization.algorithms.bias_correction"], [166, "module-nncf.experimental.openvino_native.quantization.algorithms.bias_correction.openvino_backend"], [167, "module-nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction"], [168, "module-nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction.openvino_backend"], [169, "module-nncf.experimental.openvino_native.quantization.algorithms"], [170, "module-nncf.experimental.openvino_native.quantization.algorithms.min_max"], [171, "module-nncf.experimental.openvino_native.quantization.algorithms.min_max.openvino_backend"], [172, "module-nncf.experimental.openvino_native.quantization.default_quantization"], [173, "module-nncf.experimental.openvino_native.quantization"], [174, "module-nncf.experimental.openvino_native.quantization.quantize"], [175, "module-nncf.experimental.openvino_native.statistics.aggregator"], [176, "module-nncf.experimental.openvino_native.statistics.collectors"], [177, "module-nncf.experimental.openvino_native.statistics"], [178, "module-nncf.experimental.openvino_native.statistics.statistics"], [179, "module-nncf.experimental.openvino_native.tensor"], [180, "module-nncf.experimental.tensorflow.context"], [181, "module-nncf.experimental.tensorflow.graph.argprovider"], [182, "module-nncf.experimental.tensorflow.graph.converter"], [183, "module-nncf.experimental.tensorflow.graph"], [184, "module-nncf.experimental.tensorflow.graph.model_transformer"], [185, "module-nncf.experimental.tensorflow.graph.node_attributes"], [186, "module-nncf.experimental.tensorflow.graph.transformations.commands"], [187, "module-nncf.experimental.tensorflow.graph.transformations"], [188, "module-nncf.experimental.tensorflow.graph.transformations.layout"], [189, "module-nncf.experimental.tensorflow"], [190, "module-nncf.experimental.tensorflow.nncf_network"], [191, "module-nncf.experimental.tensorflow.patch_tf"], [192, "module-nncf.experimental.tensorflow.quantization.algorithm"], [193, "module-nncf.experimental.tensorflow.quantization"], [194, "module-nncf.experimental.tensorflow.quantization.init_range"], [195, "module-nncf.experimental.tensorflow.quantization.quantizers"], [196, "module-nncf.experimental.tensorflow.scope"], [197, "module-nncf.experimental.torch"], [198, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.base_handler"], [199, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_depth"], [200, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_kernel"], [201, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_width"], [202, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_builder"], [203, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_controller"], [204, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_dim"], [205, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.filter_reorder"], [206, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity"], [207, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.multi_elasticity_handler"], [208, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.visualization"], [209, "module-nncf.experimental.torch.nas.bootstrapNAS"], [210, "module-nncf.experimental.torch.nas.bootstrapNAS.search.evaluator"], [211, "module-nncf.experimental.torch.nas.bootstrapNAS.search.evaluator_handler"], [212, "module-nncf.experimental.torch.nas.bootstrapNAS.search"], [213, "module-nncf.experimental.torch.nas.bootstrapNAS.search.search"], [214, "module-nncf.experimental.torch.nas.bootstrapNAS.training.base_training"], [215, "module-nncf.experimental.torch.nas.bootstrapNAS.training"], [216, "module-nncf.experimental.torch.nas.bootstrapNAS.training.lr_scheduler"], [217, "module-nncf.experimental.torch.nas.bootstrapNAS.training.model_creator_helpers"], [218, "module-nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_builder"], [219, "module-nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_controller"], [220, "module-nncf.experimental.torch.nas.bootstrapNAS.training.scheduler"], [221, "module-nncf.experimental.torch.nas.bootstrapNAS.training.stage_descriptor"], [222, "module-nncf.experimental.torch.nas.bootstrapNAS.training.training_algorithm"], [223, "module-nncf.experimental.torch.nas"], [224, "module-nncf.experimental.torch.pruning"], [225, "module-nncf.experimental.torch.pruning.operations"], [226, "module-nncf.experimental.torch.quantization"], [227, "module-nncf.experimental.torch.quantization.quantize"], [228, "module-nncf.experimental.torch.search_building_blocks"], [229, "module-nncf.experimental.torch.search_building_blocks.search_blocks"], [230, "module-nncf.experimental.torch.search_building_blocks.search_graph"], [231, "module-nncf.experimental.torch.sparsity"], [232, "module-nncf.experimental.torch.sparsity.movement.algo"], [233, "module-nncf.experimental.torch.sparsity.movement.functions"], [234, "module-nncf.experimental.torch.sparsity.movement"], [235, "module-nncf.experimental.torch.sparsity.movement.layers"], [236, "module-nncf.experimental.torch.sparsity.movement.loss"], [237, "module-nncf.experimental.torch.sparsity.movement.scheduler"], [238, "module-nncf.experimental.torch.sparsity.movement.structured_mask_handler"], [239, "module-nncf"], [240, "module-nncf.onnx.engine"], [241, "module-nncf.onnx.graph"], [242, "module-nncf.onnx.graph.metatypes"], [243, "module-nncf.onnx.graph.metatypes.onnx_metatypes"], [244, "module-nncf.onnx.graph.model_transformer"], [245, "module-nncf.onnx.graph.nncf_graph_builder"], [246, "module-nncf.onnx.graph.node_utils"], [247, "module-nncf.onnx.graph.onnx_graph"], [248, "module-nncf.onnx.graph.transformations.command_creation"], [249, "module-nncf.onnx.graph.transformations.commands"], [250, "module-nncf.onnx.graph.transformations"], [251, "module-nncf.onnx.hardware.config"], [252, "module-nncf.onnx.hardware.fused_patterns"], [253, "module-nncf.onnx.hardware"], [254, "module-nncf.onnx.hardware.pattern_operations"], [255, "module-nncf.onnx"], [256, "module-nncf.onnx.quantization.default_quantization"], [257, "module-nncf.onnx.quantization"], [258, "module-nncf.onnx.quantization.quantize"], [259, "module-nncf.onnx.quantization.quantizer_parameters"], [260, "module-nncf.onnx.statistics.aggregator"], [261, "module-nncf.onnx.statistics.collectors"], [262, "module-nncf.onnx.statistics"], [263, "module-nncf.onnx.statistics.statistics"], [264, "module-nncf.onnx.tensor"], [265, "module-nncf.openvino.engine"], [266, "module-nncf.openvino"], [267, "module-nncf.openvino.quantization.accuracy_aware"], [268, "module-nncf.openvino.quantization"], [269, "module-nncf.openvino.quantization.quantize"], [270, "module-nncf.parameters"], [271, "module-nncf.quantization.algorithms.accuracy_control.algorithm"], [272, "module-nncf.quantization.algorithms.accuracy_control.backend"], [273, "module-nncf.quantization.algorithms.accuracy_control"], [274, "module-nncf.quantization.algorithms.accuracy_control.openvino_backend"], [275, "module-nncf.quantization.algorithms.accuracy_control.rank_functions"], [276, "module-nncf.quantization.algorithms.accuracy_control.ranker"], [277, "module-nncf.quantization.algorithms.algorithm"], [278, "module-nncf.quantization.algorithms.bias_correction.algorithm"], [279, "module-nncf.quantization.algorithms.bias_correction.backend"], [280, "module-nncf.quantization.algorithms.bias_correction"], [281, "module-nncf.quantization.algorithms.bias_correction.onnx_backend"], [282, "module-nncf.quantization.algorithms.definitions"], [283, "module-nncf.quantization.algorithms.fast_bias_correction.algorithm"], [284, "module-nncf.quantization.algorithms.fast_bias_correction.backend"], [285, "module-nncf.quantization.algorithms.fast_bias_correction"], [286, "module-nncf.quantization.algorithms.fast_bias_correction.onnx_backend"], [287, "module-nncf.quantization.algorithms"], [288, "module-nncf.quantization.algorithms.min_max.algorithm"], [289, "module-nncf.quantization.algorithms.min_max.backend"], [290, "module-nncf.quantization.algorithms.min_max"], [291, "module-nncf.quantization.algorithms.min_max.onnx_backend"], [292, "module-nncf.quantization.algorithms.min_max.torch_backend"], [293, "module-nncf.quantization.algorithms.post_training.algorithm"], [294, "module-nncf.quantization.algorithms.post_training"], [295, "module-nncf.quantization.fake_quantize"], [296, "module-nncf.quantization"], [297, "module-nncf.quantization.passes"], [298, "module-nncf.quantization.quantize"], [299, "module-nncf.quantization.telemetry_extractors"], [300, "module-nncf.scopes"], [301, "module-nncf.telemetry.decorator"], [302, "module-nncf.telemetry.events"], [303, "module-nncf.telemetry.extractors"], [304, "module-nncf.telemetry"], [305, "module-nncf.telemetry.wrapper"], [306, "module-nncf.tensorflow.accuracy_aware_training"], [307, "module-nncf.tensorflow.accuracy_aware_training.keras_model_utils"], [308, "module-nncf.tensorflow.accuracy_aware_training.runner"], [309, "module-nncf.tensorflow.algorithm_selector"], [310, "module-nncf.tensorflow.api.composite_compression"], [311, "module-nncf.tensorflow.api.compression"], [312, "module-nncf.tensorflow.api"], [313, "module-nncf.tensorflow.batchnorm_adaptation"], [314, "module-nncf.tensorflow.callbacks.checkpoint_callback"], [315, "module-nncf.tensorflow.callbacks"], [316, "module-nncf.tensorflow.callbacks.statistics_callback"], [317, "module-nncf.tensorflow.exporter"], [318, "module-nncf.tensorflow.functions"], [319, "module-nncf.tensorflow.graph.converter"], [320, "module-nncf.tensorflow.graph"], [321, "module-nncf.tensorflow.graph.metatypes.common"], [322, "module-nncf.tensorflow.graph.metatypes"], [323, "module-nncf.tensorflow.graph.metatypes.keras_layers"], [324, "module-nncf.tensorflow.graph.metatypes.matcher"], [325, "module-nncf.tensorflow.graph.metatypes.tf_ops"], [326, "module-nncf.tensorflow.graph.model_transformer"], [327, "module-nncf.tensorflow.graph.pattern_operations"], [328, "module-nncf.tensorflow.graph.patterns"], [329, "module-nncf.tensorflow.graph.transformations.commands"], [330, "module-nncf.tensorflow.graph.transformations"], [331, "module-nncf.tensorflow.graph.transformations.layout"], [332, "module-nncf.tensorflow.graph.utils"], [333, "module-nncf.tensorflow.hardware.config"], [334, "module-nncf.tensorflow.hardware.fused_patterns"], [335, "module-nncf.tensorflow.hardware"], [336, "module-nncf.tensorflow.helpers.callback_creation"], [337, "module-nncf.tensorflow.helpers"], [338, "module-nncf.tensorflow.helpers.model_creation"], [339, "module-nncf.tensorflow.helpers.model_manager"], [340, "module-nncf.tensorflow.helpers.utils"], [341, "module-nncf.tensorflow"], [342, "module-nncf.tensorflow.initialization"], [343, "module-nncf.tensorflow.layers.custom_objects"], [344, "module-nncf.tensorflow.layers.data_layout"], [345, "module-nncf.tensorflow.layers"], [346, "module-nncf.tensorflow.layers.operation"], [347, "module-nncf.tensorflow.layers.wrapper"], [348, "module-nncf.tensorflow.loss"], [349, "module-nncf.tensorflow.pruning.base_algorithm"], [350, "module-nncf.tensorflow.pruning.callbacks"], [351, "module-nncf.tensorflow.pruning.filter_pruning.algorithm"], [352, "module-nncf.tensorflow.pruning.filter_pruning.functions"], [353, "module-nncf.tensorflow.pruning.filter_pruning"], [354, "module-nncf.tensorflow.pruning"], [355, "module-nncf.tensorflow.pruning.operations"], [356, "module-nncf.tensorflow.pruning.tensor_processor"], [357, "module-nncf.tensorflow.pruning.utils"], [358, "module-nncf.tensorflow.quantization.algorithm"], [359, "module-nncf.tensorflow.quantization.collectors"], [360, "module-nncf.tensorflow.quantization.default_quantization"], [361, "module-nncf.tensorflow.quantization.functions"], [362, "module-nncf.tensorflow.quantization"], [363, "module-nncf.tensorflow.quantization.init_range"], [364, "module-nncf.tensorflow.quantization.layers"], [365, "module-nncf.tensorflow.quantization.quantize"], [366, "module-nncf.tensorflow.quantization.quantizers"], [367, "module-nncf.tensorflow.quantization.utils"], [368, "module-nncf.tensorflow.sparsity.base_algorithm"], [369, "module-nncf.tensorflow.sparsity.callbacks"], [370, "module-nncf.tensorflow.sparsity.collector"], [371, "module-nncf.tensorflow.sparsity"], [372, "module-nncf.tensorflow.sparsity.magnitude.algorithm"], [373, "module-nncf.tensorflow.sparsity.magnitude.functions"], [374, "module-nncf.tensorflow.sparsity.magnitude"], [375, "module-nncf.tensorflow.sparsity.magnitude.operation"], [376, "module-nncf.tensorflow.sparsity.rb.algorithm"], [377, "module-nncf.tensorflow.sparsity.rb.functions"], [378, "module-nncf.tensorflow.sparsity.rb"], [379, "module-nncf.tensorflow.sparsity.rb.loss"], [380, "module-nncf.tensorflow.sparsity.rb.operation"], [381, "module-nncf.tensorflow.sparsity.utils"], [382, "module-nncf.tensorflow.tensor"], [383, "module-nncf.tensorflow.tensor_statistics.collectors"], [384, "module-nncf.tensorflow.tensor_statistics"], [385, "module-nncf.tensorflow.tensor_statistics.reduction"], [386, "module-nncf.tensorflow.tensor_statistics.statistics"], [387, "module-nncf.tensorflow.tf_internals"], [388, "module-nncf.tensorflow.utils.hook_handle"], [389, "module-nncf.tensorflow.utils"], [390, "module-nncf.tensorflow.utils.node"], [391, "module-nncf.tensorflow.utils.scopes_handle"], [392, "module-nncf.tensorflow.utils.state"], [393, "module-nncf.torch.accuracy_aware_training"], [394, "module-nncf.torch.accuracy_aware_training.runner"], [395, "module-nncf.torch.accuracy_aware_training.utils"], [396, "module-nncf.torch.algo_selector"], [397, "module-nncf.torch.automl.agent.ddpg.ddpg"], [398, "module-nncf.torch.automl.agent.ddpg"], [399, "module-nncf.torch.automl.agent.ddpg.memory"], [400, "module-nncf.torch.automl.agent"], [401, "module-nncf.torch.automl.environment"], [402, "module-nncf.torch.automl.environment.quantization_env"], [403, "module-nncf.torch.automl"], [404, "module-nncf.torch.batchnorm_adaptation"], [405, "module-nncf.torch.binarization.algo"], [406, "module-nncf.torch.binarization.binarize_functions"], [407, "module-nncf.torch.binarization.extensions"], [408, "module-nncf.torch.binarization"], [409, "module-nncf.torch.binarization.layers"], [410, "module-nncf.torch.binarization.reference"], [411, "module-nncf.torch.checkpoint_loading"], [412, "module-nncf.torch.composite_compression"], [413, "module-nncf.torch.compression_method_api"], [414, "module-nncf.torch.debug"], [415, "module-nncf.torch.dynamic_graph.context"], [416, "module-nncf.torch.dynamic_graph.graph"], [417, "module-nncf.torch.dynamic_graph.graph_tracer"], [418, "module-nncf.torch.dynamic_graph"], [419, "module-nncf.torch.dynamic_graph.io_handling"], [420, "module-nncf.torch.dynamic_graph.layer_attributes_handlers"], [421, "module-nncf.torch.dynamic_graph.op_input_processing"], [422, "module-nncf.torch.dynamic_graph.operation_address"], [423, "module-nncf.torch.dynamic_graph.patch_pytorch"], [424, "module-nncf.torch.dynamic_graph.scope"], [425, "module-nncf.torch.dynamic_graph.scope_access"], [426, "module-nncf.torch.dynamic_graph.structs"], [427, "module-nncf.torch.dynamic_graph.trace_functions"], [428, "module-nncf.torch.dynamic_graph.trace_tensor"], [429, "module-nncf.torch.dynamic_graph.wrappers"], [430, "module-nncf.torch.engine"], [431, "module-nncf.torch.exporter"], [432, "module-nncf.torch.extensions"], [433, "module-nncf.torch.functions"], [434, "module-nncf.torch.graph.graph"], [435, "module-nncf.torch.graph.graph_builder"], [436, "module-nncf.torch.graph"], [437, "module-nncf.torch.graph.operator_metatypes"], [438, "module-nncf.torch.graph.pattern_operations"], [439, "module-nncf.torch.graph.transformations.commands"], [440, "module-nncf.torch.graph.transformations"], [441, "module-nncf.torch.graph.transformations.layout"], [442, "module-nncf.torch.hardware.config"], [443, "module-nncf.torch.hardware.fused_patterns"], [444, "module-nncf.torch.hardware"], [445, "module-nncf.torch"], [446, "module-nncf.torch.initialization"], [447, "module-nncf.torch.knowledge_distillation.algo"], [448, "module-nncf.torch.knowledge_distillation"], [449, "module-nncf.torch.knowledge_distillation.knowledge_distillation_handler"], [450, "module-nncf.torch.knowledge_distillation.knowledge_distillation_loss"], [451, "module-nncf.torch.layer_utils"], [452, "module-nncf.torch.layers"], [453, "module-nncf.torch.model_creation"], [454, "module-nncf.torch.module_operations"], [455, "module-nncf.torch.nested_objects_traversal"], [456, "module-nncf.torch.nncf_module_replacement"], [457, "module-nncf.torch.nncf_network"], [458, "module-nncf.torch.pruning.base_algo"], [459, "module-nncf.torch.pruning.export_utils"], [460, "module-nncf.torch.pruning.filter_pruning.algo"], [461, "module-nncf.torch.pruning.filter_pruning.functions"], [462, "module-nncf.torch.pruning.filter_pruning.global_ranking.evolutionary_optimization"], [463, "module-nncf.torch.pruning.filter_pruning.global_ranking"], [464, "module-nncf.torch.pruning.filter_pruning.global_ranking.legr"], [465, "module-nncf.torch.pruning.filter_pruning"], [466, "module-nncf.torch.pruning.filter_pruning.layers"], [467, "module-nncf.torch.pruning"], [468, "module-nncf.torch.pruning.operations"], [469, "module-nncf.torch.pruning.structs"], [470, "module-nncf.torch.pruning.tensor_processor"], [471, "module-nncf.torch.pruning.utils"], [472, "module-nncf.torch.quantization.adjust_padding"], [473, "module-nncf.torch.quantization.algo"], [474, "module-nncf.torch.quantization.default_quantization"], [475, "module-nncf.torch.quantization.extensions"], [476, "module-nncf.torch.quantization.hessian_trace"], [477, "module-nncf.torch.quantization"], [478, "module-nncf.torch.quantization.init_precision"], [479, "module-nncf.torch.quantization.init_range"], [480, "module-nncf.torch.quantization.layers"], [481, "module-nncf.torch.quantization.metrics"], [482, "module-nncf.torch.quantization.precision_constraints"], [483, "module-nncf.torch.quantization.precision_init.adjacent_quantizers"], [484, "module-nncf.torch.quantization.precision_init.autoq_init"], [485, "module-nncf.torch.quantization.precision_init.base_init"], [486, "module-nncf.torch.quantization.precision_init.bitwidth_graph"], [487, "module-nncf.torch.quantization.precision_init.compression_ratio"], [488, "module-nncf.torch.quantization.precision_init.hawq_debug"], [489, "module-nncf.torch.quantization.precision_init.hawq_init"], [490, "module-nncf.torch.quantization.precision_init"], [491, "module-nncf.torch.quantization.precision_init.manual_init"], [492, "module-nncf.torch.quantization.precision_init.perturbations"], [493, "module-nncf.torch.quantization.precision_init.traces_order"], [494, "module-nncf.torch.quantization.prepare_for_inference"], [495, "module-nncf.torch.quantization.quantize"], [496, "module-nncf.torch.quantization.quantize_functions"], [497, "module-nncf.torch.quantization.reference"], [498, "module-nncf.torch.quantization.schedulers"], [499, "module-nncf.torch.quantization.statistics"], [500, "module-nncf.torch.quantization.structs"], [501, "module-nncf.torch.quantization.translator"], [502, "module-nncf.torch.sparsity.base_algo"], [503, "module-nncf.torch.sparsity.collector"], [504, "module-nncf.torch.sparsity.const.algo"], [505, "module-nncf.torch.sparsity.const"], [506, "module-nncf.torch.sparsity.functions"], [507, "module-nncf.torch.sparsity"], [508, "module-nncf.torch.sparsity.layers"], [509, "module-nncf.torch.sparsity.magnitude.algo"], [510, "module-nncf.torch.sparsity.magnitude.functions"], [511, "module-nncf.torch.sparsity.magnitude"], [512, "module-nncf.torch.sparsity.rb.algo"], [513, "module-nncf.torch.sparsity.rb.functions"], [514, "module-nncf.torch.sparsity.rb"], [515, "module-nncf.torch.sparsity.rb.layers"], [516, "module-nncf.torch.sparsity.rb.loss"], [517, "module-nncf.torch.statistics.aggregator"], [518, "module-nncf.torch.statistics"], [519, "module-nncf.torch.structures"], [520, "module-nncf.torch.tensor"], [521, "module-nncf.torch.tensor_statistics.algo"], [522, "module-nncf.torch.tensor_statistics.collectors"], [523, "module-nncf.torch.tensor_statistics"], [524, "module-nncf.torch.tensor_statistics.reduction"], [525, "module-nncf.torch.tensor_statistics.statistics"], [526, "module-nncf.torch.utils"], [527, "module-nncf.version"]], "nncf.api.compression": [[10, "module-nncf.api.compression"]], "nncf.api": [[11, "module-nncf.api"]], "nncf.api.statistics": [[12, "module-nncf.api.statistics"]], "nncf.common.accuracy_aware_training": [[13, "module-nncf.common.accuracy_aware_training"]], "nncf.common.accuracy_aware_training.runner": [[14, "module-nncf.common.accuracy_aware_training.runner"]], "nncf.common.accuracy_aware_training.runner_factory": [[15, "module-nncf.common.accuracy_aware_training.runner_factory"]], "nncf.common.accuracy_aware_training.statistics": [[16, "module-nncf.common.accuracy_aware_training.statistics"]], "nncf.common.accuracy_aware_training.training_loop": [[17, "module-nncf.common.accuracy_aware_training.training_loop"]], "nncf.common.api_marker": [[18, "module-nncf.common.api_marker"]], "nncf.common.collector": [[19, "module-nncf.common.collector"]], "nncf.common.composite_compression": [[20, "module-nncf.common.composite_compression"]], "nncf.common.compression": [[21, "module-nncf.common.compression"]], "nncf.common.deprecation": [[22, "module-nncf.common.deprecation"]], "nncf.common.engine": [[23, "module-nncf.common.engine"]], "nncf.common.exporter": [[24, "module-nncf.common.exporter"]], "nncf.common.factory": [[25, "module-nncf.common.factory"]], "nncf.common.graph.definitions": [[26, "module-nncf.common.graph.definitions"]], "nncf.common.graph.graph": [[27, "module-nncf.common.graph.graph"]], "nncf.common.graph.graph_matching": [[28, "module-nncf.common.graph.graph_matching"]], "nncf.common.graph": [[29, "module-nncf.common.graph"]], "nncf.common.graph.layer_attributes": [[30, "module-nncf.common.graph.layer_attributes"]], "nncf.common.graph.model_transformer": [[31, "module-nncf.common.graph.model_transformer"]], "nncf.common.graph.operator_metatypes": [[32, "module-nncf.common.graph.operator_metatypes"]], "nncf.common.graph.patterns": [[33, "module-nncf.common.graph.patterns"]], "nncf.common.graph.patterns.manager": [[34, "module-nncf.common.graph.patterns.manager"]], "nncf.common.graph.patterns.patterns": [[35, "module-nncf.common.graph.patterns.patterns"]], "nncf.common.graph.transformations.command_creation": [[36, "module-nncf.common.graph.transformations.command_creation"]], "nncf.common.graph.transformations.commands": [[37, "module-nncf.common.graph.transformations.commands"]], "nncf.common.graph.transformations": [[38, "module-nncf.common.graph.transformations"]], "nncf.common.graph.transformations.layout": [[39, "module-nncf.common.graph.transformations.layout"]], "nncf.common.graph.utils": [[40, "module-nncf.common.graph.utils"]], "nncf.common.hardware.config": [[41, "module-nncf.common.hardware.config"]], "nncf.common.hardware": [[42, "module-nncf.common.hardware"]], "nncf.common.hardware.opset": [[43, "module-nncf.common.hardware.opset"]], "nncf.common": [[44, "module-nncf.common"]], "nncf.common.initialization.batchnorm_adaptation": [[45, "module-nncf.common.initialization.batchnorm_adaptation"]], "nncfdataloader (class in nncf.common.initialization.dataloader)": [[46, "nncf.common.initialization.dataloader.NNCFDataLoader"]], "__iter__() (nncf.common.initialization.dataloader.nncfdataloader method)": [[46, "nncf.common.initialization.dataloader.NNCFDataLoader.__iter__"]], "nncf.common.initialization.dataloader": [[46, "module-nncf.common.initialization.dataloader"]], "nncf.common.initialization": [[47, "module-nncf.common.initialization"]], "nncf.common.insertion_point_graph": [[48, "module-nncf.common.insertion_point_graph"]], "nncf.common.logging": [[49, "module-nncf.common.logging"]], "nncf.common.logging.logger": [[50, "module-nncf.common.logging.logger"]], "nncf.common.logging.progress_bar": [[51, "module-nncf.common.logging.progress_bar"]], "nncf.common.pruning.clusterization": [[52, "module-nncf.common.pruning.clusterization"]], "nncf.common.pruning": [[53, "module-nncf.common.pruning"]], "nncf.common.pruning.mask_propagation": [[54, "module-nncf.common.pruning.mask_propagation"]], "nncf.common.pruning.model_analysis": [[55, "module-nncf.common.pruning.model_analysis"]], "nncf.common.pruning.node_selector": [[56, "module-nncf.common.pruning.node_selector"]], "nncf.common.pruning.operations": [[57, "module-nncf.common.pruning.operations"]], "nncf.common.pruning.schedulers": [[58, "module-nncf.common.pruning.schedulers"]], "nncf.common.pruning.shape_pruning_processor": [[59, "module-nncf.common.pruning.shape_pruning_processor"]], "nncf.common.pruning.statistics": [[60, "module-nncf.common.pruning.statistics"]], "nncf.common.pruning.structs": [[61, "module-nncf.common.pruning.structs"]], "nncf.common.pruning.symbolic_mask": [[62, "module-nncf.common.pruning.symbolic_mask"]], "nncf.common.pruning.tensor_processor": [[63, "module-nncf.common.pruning.tensor_processor"]], "nncf.common.pruning.utils": [[64, "module-nncf.common.pruning.utils"]], "nncf.common.pruning.weights_flops_calculator": [[65, "module-nncf.common.pruning.weights_flops_calculator"]], "nncf.common.quantization.collectors": [[66, "module-nncf.common.quantization.collectors"]], "nncf.common.quantization.config_assignment": [[67, "module-nncf.common.quantization.config_assignment"]], "nncf.common.quantization": [[68, "module-nncf.common.quantization"]], "nncf.common.quantization.initialization": [[69, "module-nncf.common.quantization.initialization"]], "nncf.common.quantization.initialization.range": [[70, "module-nncf.common.quantization.initialization.range"]], "nncf.common.quantization.quantizer_propagation.graph": [[71, "module-nncf.common.quantization.quantizer_propagation.graph"]], "nncf.common.quantization.quantizer_propagation.grouping": [[72, "module-nncf.common.quantization.quantizer_propagation.grouping"]], "nncf.common.quantization.quantizer_propagation": [[73, "module-nncf.common.quantization.quantizer_propagation"]], "nncf.common.quantization.quantizer_propagation.solver": [[74, "module-nncf.common.quantization.quantizer_propagation.solver"]], "nncf.common.quantization.quantizer_propagation.structs": [[75, "module-nncf.common.quantization.quantizer_propagation.structs"]], "nncf.common.quantization.quantizer_propagation.visualizer": [[76, "module-nncf.common.quantization.quantizer_propagation.visualizer"]], "nncf.common.quantization.quantizer_removal": [[77, "module-nncf.common.quantization.quantizer_removal"]], "nncf.common.quantization.quantizer_setup": [[78, "module-nncf.common.quantization.quantizer_setup"]], "nncf.common.quantization.quantizers": [[79, "module-nncf.common.quantization.quantizers"]], "nncf.common.quantization.statistics": [[80, "module-nncf.common.quantization.statistics"]], "nncf.common.quantization.structs": [[81, "module-nncf.common.quantization.structs"]], "nncf.common.schedulers": [[82, "module-nncf.common.schedulers"]], "nncf.common.scopes": [[83, "module-nncf.common.scopes"]], "nncf.common.sparsity.collector": [[84, "module-nncf.common.sparsity.collector"]], "nncf.common.sparsity.controller": [[85, "module-nncf.common.sparsity.controller"]], "nncf.common.sparsity": [[86, "module-nncf.common.sparsity"]], "nncf.common.sparsity.schedulers": [[87, "module-nncf.common.sparsity.schedulers"]], "nncf.common.sparsity.statistics": [[88, "module-nncf.common.sparsity.statistics"]], "nncf.common.stateful_classes_registry": [[89, "module-nncf.common.stateful_classes_registry"]], "nncf.common.statistics": [[90, "module-nncf.common.statistics"]], "nncf.common.tensor": [[91, "module-nncf.common.tensor"]], "nncf.common.tensor_statistics.aggregator": [[92, "module-nncf.common.tensor_statistics.aggregator"]], "nncf.common.tensor_statistics.collectors": [[93, "module-nncf.common.tensor_statistics.collectors"]], "nncf.common.tensor_statistics": [[94, "module-nncf.common.tensor_statistics"]], "nncf.common.tensor_statistics.reduction": [[95, "module-nncf.common.tensor_statistics.reduction"]], "nncf.common.tensor_statistics.statistic_point": [[96, "module-nncf.common.tensor_statistics.statistic_point"]], "nncf.common.tensor_statistics.statistics": [[97, "module-nncf.common.tensor_statistics.statistics"]], "nncf.common.utils.backend": [[98, "module-nncf.common.utils.backend"]], "nncf.common.utils.debug": [[99, "module-nncf.common.utils.debug"]], "nncf.common.utils.decorators": [[100, "module-nncf.common.utils.decorators"]], "nncf.common.utils.dot_file_rw": [[101, "module-nncf.common.utils.dot_file_rw"]], "nncf.common.utils.helpers": [[102, "module-nncf.common.utils.helpers"]], "nncf.common.utils": [[103, "module-nncf.common.utils"]], "nncf.common.utils.logger": [[104, "module-nncf.common.utils.logger"]], "nncf.common.utils.os": [[105, "module-nncf.common.utils.os"]], "nncf.common.utils.patcher": [[106, "module-nncf.common.utils.patcher"]], "nncf.common.utils.registry": [[107, "module-nncf.common.utils.registry"]], "nncf.common.utils.tensorboard": [[108, "module-nncf.common.utils.tensorboard"]], "nncf.common.utils.timer": [[109, "module-nncf.common.utils.timer"]], "nncfconfig (class in nncf.config.config)": [[110, "nncf.config.config.NNCFConfig"]], "from_dict() (nncf.config.config.nncfconfig class method)": [[110, "nncf.config.config.NNCFConfig.from_dict"]], "get_redefinable_global_param_value_for_algo() (nncf.config.config.nncfconfig method)": [[110, "nncf.config.config.NNCFConfig.get_redefinable_global_param_value_for_algo"]], "nncf.config.config": [[110, "module-nncf.config.config"]], "nncf.config.definitions": [[111, "module-nncf.config.definitions"]], "nncf.config.extractors": [[112, "module-nncf.config.extractors"]], "nncf.config": [[113, "module-nncf.config"]], "nncf.config.schema": [[114, "module-nncf.config.schema"]], "nncf.config.schemata.accuracy_aware": [[115, "module-nncf.config.schemata.accuracy_aware"]], "nncf.config.schemata.algo.binarization": [[116, "module-nncf.config.schemata.algo.binarization"]], "nncf.config.schemata.algo.const_sparsity": [[117, "module-nncf.config.schemata.algo.const_sparsity"]], "nncf.config.schemata.algo.filter_pruning": [[118, "module-nncf.config.schemata.algo.filter_pruning"]], "nncf.config.schemata.algo": [[119, "module-nncf.config.schemata.algo"]], "nncf.config.schemata.algo.knowledge_distillation": [[120, "module-nncf.config.schemata.algo.knowledge_distillation"]], "nncf.config.schemata.algo.magnitude_sparsity": [[121, "module-nncf.config.schemata.algo.magnitude_sparsity"]], "nncf.config.schemata.algo.quantization": [[122, "module-nncf.config.schemata.algo.quantization"]], "nncf.config.schemata.algo.rb_sparsity": [[123, "module-nncf.config.schemata.algo.rb_sparsity"]], "nncf.config.schemata.basic": [[124, "module-nncf.config.schemata.basic"]], "nncf.config.schemata.common.compression": [[125, "module-nncf.config.schemata.common.compression"]], "nncf.config.schemata.common": [[126, "module-nncf.config.schemata.common"]], "nncf.config.schemata.common.initialization": [[127, "module-nncf.config.schemata.common.initialization"]], "nncf.config.schemata.common.sparsity": [[128, "module-nncf.config.schemata.common.sparsity"]], "nncf.config.schemata.common.targeting": [[129, "module-nncf.config.schemata.common.targeting"]], "nncf.config.schemata.defaults": [[130, "module-nncf.config.schemata.defaults"]], "nncf.config.schemata.experimental_schema": [[131, "module-nncf.config.schemata.experimental_schema"]], "nncf.config.schemata": [[132, "module-nncf.config.schemata"]], "bnadaptationinitargs (class in nncf.config.structures)": [[133, "nncf.config.structures.BNAdaptationInitArgs"]], "modelevaluationargs (class in nncf.config.structures)": [[133, "nncf.config.structures.ModelEvaluationArgs"]], "quantizationrangeinitargs (class in nncf.config.structures)": [[133, "nncf.config.structures.QuantizationRangeInitArgs"]], "nncf.config.structures": [[133, "module-nncf.config.structures"]], "nncf.config.telemetry_extractors": [[134, "module-nncf.config.telemetry_extractors"]], "nncf.config.utils": [[135, "module-nncf.config.utils"]], "nncf.data.dataset": [[136, "module-nncf.data.dataset"]], "nncf.data": [[137, "module-nncf.data"]], "nncf.definitions": [[138, "module-nncf.definitions"]], "nncf.experimental.common.graph": [[139, "module-nncf.experimental.common.graph"]], "nncf.experimental.common.graph.netron": [[140, "module-nncf.experimental.common.graph.netron"]], "nncf.experimental.common": [[141, "module-nncf.experimental.common"]], "nncf.experimental.common.pruning": [[142, "module-nncf.experimental.common.pruning"]], "nncf.experimental.common.pruning.nodes_grouping": [[143, "module-nncf.experimental.common.pruning.nodes_grouping"]], "nncf.experimental.common.pruning.operations": [[144, "module-nncf.experimental.common.pruning.operations"]], "nncf.experimental": [[145, "module-nncf.experimental"]], "nncf.experimental.openvino": [[146, "module-nncf.experimental.openvino"]], "nncf.experimental.openvino.quantization": [[147, "module-nncf.experimental.openvino.quantization"]], "nncf.experimental.openvino.quantization.quantize": [[148, "module-nncf.experimental.openvino.quantization.quantize"]], "nncf.experimental.openvino_native.engine": [[149, "module-nncf.experimental.openvino_native.engine"]], "nncf.experimental.openvino_native.graph": [[150, "module-nncf.experimental.openvino_native.graph"]], "nncf.experimental.openvino_native.graph.metatypes.common": [[151, "module-nncf.experimental.openvino_native.graph.metatypes.common"]], "nncf.experimental.openvino_native.graph.metatypes": [[152, "module-nncf.experimental.openvino_native.graph.metatypes"]], "nncf.experimental.openvino_native.graph.metatypes.openvino_metatypes": [[153, "module-nncf.experimental.openvino_native.graph.metatypes.openvino_metatypes"]], "nncf.experimental.openvino_native.graph.model_transformer": [[154, "module-nncf.experimental.openvino_native.graph.model_transformer"]], "nncf.experimental.openvino_native.graph.nncf_graph_builder": [[155, "module-nncf.experimental.openvino_native.graph.nncf_graph_builder"]], "nncf.experimental.openvino_native.graph.node_utils": [[156, "module-nncf.experimental.openvino_native.graph.node_utils"]], "nncf.experimental.openvino_native.graph.transformations.command_creation": [[157, "module-nncf.experimental.openvino_native.graph.transformations.command_creation"]], "nncf.experimental.openvino_native.graph.transformations.commands": [[158, "module-nncf.experimental.openvino_native.graph.transformations.commands"]], "nncf.experimental.openvino_native.graph.transformations": [[159, "module-nncf.experimental.openvino_native.graph.transformations"]], "nncf.experimental.openvino_native.hardware.config": [[160, "module-nncf.experimental.openvino_native.hardware.config"]], "nncf.experimental.openvino_native.hardware.fused_patterns": [[161, "module-nncf.experimental.openvino_native.hardware.fused_patterns"]], "nncf.experimental.openvino_native.hardware": [[162, "module-nncf.experimental.openvino_native.hardware"]], "nncf.experimental.openvino_native.hardware.pattern_operations": [[163, "module-nncf.experimental.openvino_native.hardware.pattern_operations"]], "nncf.experimental.openvino_native": [[164, "module-nncf.experimental.openvino_native"]], "nncf.experimental.openvino_native.quantization.algorithms.bias_correction": [[165, "module-nncf.experimental.openvino_native.quantization.algorithms.bias_correction"]], "nncf.experimental.openvino_native.quantization.algorithms.bias_correction.openvino_backend": [[166, "module-nncf.experimental.openvino_native.quantization.algorithms.bias_correction.openvino_backend"]], "nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction": [[167, "module-nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction"]], "nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction.openvino_backend": [[168, "module-nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction.openvino_backend"]], "nncf.experimental.openvino_native.quantization.algorithms": [[169, "module-nncf.experimental.openvino_native.quantization.algorithms"]], "nncf.experimental.openvino_native.quantization.algorithms.min_max": [[170, "module-nncf.experimental.openvino_native.quantization.algorithms.min_max"]], "nncf.experimental.openvino_native.quantization.algorithms.min_max.openvino_backend": [[171, "module-nncf.experimental.openvino_native.quantization.algorithms.min_max.openvino_backend"]], "nncf.experimental.openvino_native.quantization.default_quantization": [[172, "module-nncf.experimental.openvino_native.quantization.default_quantization"]], "nncf.experimental.openvino_native.quantization": [[173, "module-nncf.experimental.openvino_native.quantization"]], "nncf.experimental.openvino_native.quantization.quantize": [[174, "module-nncf.experimental.openvino_native.quantization.quantize"]], "nncf.experimental.openvino_native.statistics.aggregator": [[175, "module-nncf.experimental.openvino_native.statistics.aggregator"]], "nncf.experimental.openvino_native.statistics.collectors": [[176, "module-nncf.experimental.openvino_native.statistics.collectors"]], "nncf.experimental.openvino_native.statistics": [[177, "module-nncf.experimental.openvino_native.statistics"]], "nncf.experimental.openvino_native.statistics.statistics": [[178, "module-nncf.experimental.openvino_native.statistics.statistics"]], "nncf.experimental.openvino_native.tensor": [[179, "module-nncf.experimental.openvino_native.tensor"]], "nncf.experimental.tensorflow.context": [[180, "module-nncf.experimental.tensorflow.context"]], "nncf.experimental.tensorflow.graph.argprovider": [[181, "module-nncf.experimental.tensorflow.graph.argprovider"]], "nncf.experimental.tensorflow.graph.converter": [[182, "module-nncf.experimental.tensorflow.graph.converter"]], "nncf.experimental.tensorflow.graph": [[183, "module-nncf.experimental.tensorflow.graph"]], "nncf.experimental.tensorflow.graph.model_transformer": [[184, "module-nncf.experimental.tensorflow.graph.model_transformer"]], "nncf.experimental.tensorflow.graph.node_attributes": [[185, "module-nncf.experimental.tensorflow.graph.node_attributes"]], "nncf.experimental.tensorflow.graph.transformations.commands": [[186, "module-nncf.experimental.tensorflow.graph.transformations.commands"]], "nncf.experimental.tensorflow.graph.transformations": [[187, "module-nncf.experimental.tensorflow.graph.transformations"]], "nncf.experimental.tensorflow.graph.transformations.layout": [[188, "module-nncf.experimental.tensorflow.graph.transformations.layout"]], "nncf.experimental.tensorflow": [[189, "module-nncf.experimental.tensorflow"]], "nncf.experimental.tensorflow.nncf_network": [[190, "module-nncf.experimental.tensorflow.nncf_network"]], "nncf.experimental.tensorflow.patch_tf": [[191, "module-nncf.experimental.tensorflow.patch_tf"]], "nncf.experimental.tensorflow.quantization.algorithm": [[192, "module-nncf.experimental.tensorflow.quantization.algorithm"]], "nncf.experimental.tensorflow.quantization": [[193, "module-nncf.experimental.tensorflow.quantization"]], "nncf.experimental.tensorflow.quantization.init_range": [[194, "module-nncf.experimental.tensorflow.quantization.init_range"]], "nncf.experimental.tensorflow.quantization.quantizers": [[195, "module-nncf.experimental.tensorflow.quantization.quantizers"]], "nncf.experimental.tensorflow.scope": [[196, "module-nncf.experimental.tensorflow.scope"]], "nncf.experimental.torch": [[197, "module-nncf.experimental.torch"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.base_handler": [[198, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.base_handler"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.elastic_depth": [[199, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_depth"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.elastic_kernel": [[200, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_kernel"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.elastic_width": [[201, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_width"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.elasticity_builder": [[202, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_builder"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.elasticity_controller": [[203, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_controller"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.elasticity_dim": [[204, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_dim"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.filter_reorder": [[205, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.filter_reorder"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity": [[206, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.multi_elasticity_handler": [[207, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.multi_elasticity_handler"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.visualization": [[208, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.visualization"]], "nncf.experimental.torch.nas.bootstrapnas": [[209, "module-nncf.experimental.torch.nas.bootstrapNAS"]], "nncf.experimental.torch.nas.bootstrapnas.search.evaluator": [[210, "module-nncf.experimental.torch.nas.bootstrapNAS.search.evaluator"]], "nncf.experimental.torch.nas.bootstrapnas.search.evaluator_handler": [[211, "module-nncf.experimental.torch.nas.bootstrapNAS.search.evaluator_handler"]], "nncf.experimental.torch.nas.bootstrapnas.search": [[212, "module-nncf.experimental.torch.nas.bootstrapNAS.search"]], "nncf.experimental.torch.nas.bootstrapnas.search.search": [[213, "module-nncf.experimental.torch.nas.bootstrapNAS.search.search"]], "nncf.experimental.torch.nas.bootstrapnas.training.base_training": [[214, "module-nncf.experimental.torch.nas.bootstrapNAS.training.base_training"]], "nncf.experimental.torch.nas.bootstrapnas.training": [[215, "module-nncf.experimental.torch.nas.bootstrapNAS.training"]], "nncf.experimental.torch.nas.bootstrapnas.training.lr_scheduler": [[216, "module-nncf.experimental.torch.nas.bootstrapNAS.training.lr_scheduler"]], "nncf.experimental.torch.nas.bootstrapnas.training.model_creator_helpers": [[217, "module-nncf.experimental.torch.nas.bootstrapNAS.training.model_creator_helpers"]], "nncf.experimental.torch.nas.bootstrapnas.training.progressive_shrinking_builder": [[218, "module-nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_builder"]], "nncf.experimental.torch.nas.bootstrapnas.training.progressive_shrinking_controller": [[219, "module-nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_controller"]], "nncf.experimental.torch.nas.bootstrapnas.training.scheduler": [[220, "module-nncf.experimental.torch.nas.bootstrapNAS.training.scheduler"]], "nncf.experimental.torch.nas.bootstrapnas.training.stage_descriptor": [[221, "module-nncf.experimental.torch.nas.bootstrapNAS.training.stage_descriptor"]], "nncf.experimental.torch.nas.bootstrapnas.training.training_algorithm": [[222, "module-nncf.experimental.torch.nas.bootstrapNAS.training.training_algorithm"]], "nncf.experimental.torch.nas": [[223, "module-nncf.experimental.torch.nas"]], "nncf.experimental.torch.pruning": [[224, "module-nncf.experimental.torch.pruning"]], "nncf.experimental.torch.pruning.operations": [[225, "module-nncf.experimental.torch.pruning.operations"]], "nncf.experimental.torch.quantization": [[226, "module-nncf.experimental.torch.quantization"]], "nncf.experimental.torch.quantization.quantize": [[227, "module-nncf.experimental.torch.quantization.quantize"]], "nncf.experimental.torch.search_building_blocks": [[228, "module-nncf.experimental.torch.search_building_blocks"]], "nncf.experimental.torch.search_building_blocks.search_blocks": [[229, "module-nncf.experimental.torch.search_building_blocks.search_blocks"]], "nncf.experimental.torch.search_building_blocks.search_graph": [[230, "module-nncf.experimental.torch.search_building_blocks.search_graph"]], "nncf.experimental.torch.sparsity": [[231, "module-nncf.experimental.torch.sparsity"]], "nncf.experimental.torch.sparsity.movement.algo": [[232, "module-nncf.experimental.torch.sparsity.movement.algo"]], "nncf.experimental.torch.sparsity.movement.functions": [[233, "module-nncf.experimental.torch.sparsity.movement.functions"]], "nncf.experimental.torch.sparsity.movement": [[234, "module-nncf.experimental.torch.sparsity.movement"]], "nncf.experimental.torch.sparsity.movement.layers": [[235, "module-nncf.experimental.torch.sparsity.movement.layers"]], "nncf.experimental.torch.sparsity.movement.loss": [[236, "module-nncf.experimental.torch.sparsity.movement.loss"]], "nncf.experimental.torch.sparsity.movement.scheduler": [[237, "module-nncf.experimental.torch.sparsity.movement.scheduler"]], "nncf.experimental.torch.sparsity.movement.structured_mask_handler": [[238, "module-nncf.experimental.torch.sparsity.movement.structured_mask_handler"]], "nncf": [[239, "module-nncf"]], "nncf.onnx.engine": [[240, "module-nncf.onnx.engine"]], "nncf.onnx.graph": [[241, "module-nncf.onnx.graph"]], "nncf.onnx.graph.metatypes": [[242, "module-nncf.onnx.graph.metatypes"]], "nncf.onnx.graph.metatypes.onnx_metatypes": [[243, "module-nncf.onnx.graph.metatypes.onnx_metatypes"]], "nncf.onnx.graph.model_transformer": [[244, "module-nncf.onnx.graph.model_transformer"]], "nncf.onnx.graph.nncf_graph_builder": [[245, "module-nncf.onnx.graph.nncf_graph_builder"]], "nncf.onnx.graph.node_utils": [[246, "module-nncf.onnx.graph.node_utils"]], "nncf.onnx.graph.onnx_graph": [[247, "module-nncf.onnx.graph.onnx_graph"]], "nncf.onnx.graph.transformations.command_creation": [[248, "module-nncf.onnx.graph.transformations.command_creation"]], "nncf.onnx.graph.transformations.commands": [[249, "module-nncf.onnx.graph.transformations.commands"]], "nncf.onnx.graph.transformations": [[250, "module-nncf.onnx.graph.transformations"]], "nncf.onnx.hardware.config": [[251, "module-nncf.onnx.hardware.config"]], "nncf.onnx.hardware.fused_patterns": [[252, "module-nncf.onnx.hardware.fused_patterns"]], "nncf.onnx.hardware": [[253, "module-nncf.onnx.hardware"]], "nncf.onnx.hardware.pattern_operations": [[254, "module-nncf.onnx.hardware.pattern_operations"]], "nncf.onnx": [[255, "module-nncf.onnx"]], "nncf.onnx.quantization.default_quantization": [[256, "module-nncf.onnx.quantization.default_quantization"]], "nncf.onnx.quantization": [[257, "module-nncf.onnx.quantization"]], "nncf.onnx.quantization.quantize": [[258, "module-nncf.onnx.quantization.quantize"]], "nncf.onnx.quantization.quantizer_parameters": [[259, "module-nncf.onnx.quantization.quantizer_parameters"]], "nncf.onnx.statistics.aggregator": [[260, "module-nncf.onnx.statistics.aggregator"]], "nncf.onnx.statistics.collectors": [[261, "module-nncf.onnx.statistics.collectors"]], "nncf.onnx.statistics": [[262, "module-nncf.onnx.statistics"]], "nncf.onnx.statistics.statistics": [[263, "module-nncf.onnx.statistics.statistics"]], "nncf.onnx.tensor": [[264, "module-nncf.onnx.tensor"]], "nncf.openvino.engine": [[265, "module-nncf.openvino.engine"]], "nncf.openvino": [[266, "module-nncf.openvino"]], "nncf.openvino.quantization.accuracy_aware": [[267, "module-nncf.openvino.quantization.accuracy_aware"]], "nncf.openvino.quantization": [[268, "module-nncf.openvino.quantization"]], "nncf.openvino.quantization.quantize": [[269, "module-nncf.openvino.quantization.quantize"]], "nncf.parameters": [[270, "module-nncf.parameters"]], "nncf.quantization.algorithms.accuracy_control.algorithm": [[271, "module-nncf.quantization.algorithms.accuracy_control.algorithm"]], "nncf.quantization.algorithms.accuracy_control.backend": [[272, "module-nncf.quantization.algorithms.accuracy_control.backend"]], "nncf.quantization.algorithms.accuracy_control": [[273, "module-nncf.quantization.algorithms.accuracy_control"]], "nncf.quantization.algorithms.accuracy_control.openvino_backend": [[274, "module-nncf.quantization.algorithms.accuracy_control.openvino_backend"]], "nncf.quantization.algorithms.accuracy_control.rank_functions": [[275, "module-nncf.quantization.algorithms.accuracy_control.rank_functions"]], "nncf.quantization.algorithms.accuracy_control.ranker": [[276, "module-nncf.quantization.algorithms.accuracy_control.ranker"]], "nncf.quantization.algorithms.algorithm": [[277, "module-nncf.quantization.algorithms.algorithm"]], "nncf.quantization.algorithms.bias_correction.algorithm": [[278, "module-nncf.quantization.algorithms.bias_correction.algorithm"]], "nncf.quantization.algorithms.bias_correction.backend": [[279, "module-nncf.quantization.algorithms.bias_correction.backend"]], "nncf.quantization.algorithms.bias_correction": [[280, "module-nncf.quantization.algorithms.bias_correction"]], "nncf.quantization.algorithms.bias_correction.onnx_backend": [[281, "module-nncf.quantization.algorithms.bias_correction.onnx_backend"]], "nncf.quantization.algorithms.definitions": [[282, "module-nncf.quantization.algorithms.definitions"]], "nncf.quantization.algorithms.fast_bias_correction.algorithm": [[283, "module-nncf.quantization.algorithms.fast_bias_correction.algorithm"]], "nncf.quantization.algorithms.fast_bias_correction.backend": [[284, "module-nncf.quantization.algorithms.fast_bias_correction.backend"]], "nncf.quantization.algorithms.fast_bias_correction": [[285, "module-nncf.quantization.algorithms.fast_bias_correction"]], "nncf.quantization.algorithms.fast_bias_correction.onnx_backend": [[286, "module-nncf.quantization.algorithms.fast_bias_correction.onnx_backend"]], "nncf.quantization.algorithms": [[287, "module-nncf.quantization.algorithms"]], "nncf.quantization.algorithms.min_max.algorithm": [[288, "module-nncf.quantization.algorithms.min_max.algorithm"]], "nncf.quantization.algorithms.min_max.backend": [[289, "module-nncf.quantization.algorithms.min_max.backend"]], "nncf.quantization.algorithms.min_max": [[290, "module-nncf.quantization.algorithms.min_max"]], "nncf.quantization.algorithms.min_max.onnx_backend": [[291, "module-nncf.quantization.algorithms.min_max.onnx_backend"]], "nncf.quantization.algorithms.min_max.torch_backend": [[292, "module-nncf.quantization.algorithms.min_max.torch_backend"]], "nncf.quantization.algorithms.post_training.algorithm": [[293, "module-nncf.quantization.algorithms.post_training.algorithm"]], "nncf.quantization.algorithms.post_training": [[294, "module-nncf.quantization.algorithms.post_training"]], "nncf.quantization.fake_quantize": [[295, "module-nncf.quantization.fake_quantize"]], "nncf.quantization": [[296, "module-nncf.quantization"]], "nncf.quantization.passes": [[297, "module-nncf.quantization.passes"]], "nncf.quantization.quantize": [[298, "module-nncf.quantization.quantize"]], "quantize() (in module nncf.quantization.quantize)": [[298, "nncf.quantization.quantize.quantize"]], "nncf.quantization.telemetry_extractors": [[299, "module-nncf.quantization.telemetry_extractors"]], "nncf.scopes": [[300, "module-nncf.scopes"]], "nncf.telemetry.decorator": [[301, "module-nncf.telemetry.decorator"]], "nncf.telemetry.events": [[302, "module-nncf.telemetry.events"]], "nncf.telemetry.extractors": [[303, "module-nncf.telemetry.extractors"]], "nncf.telemetry": [[304, "module-nncf.telemetry"]], "nncf.telemetry.wrapper": [[305, "module-nncf.telemetry.wrapper"]], "nncf.tensorflow.accuracy_aware_training": [[306, "module-nncf.tensorflow.accuracy_aware_training"]], "nncf.tensorflow.accuracy_aware_training.keras_model_utils": [[307, "module-nncf.tensorflow.accuracy_aware_training.keras_model_utils"]], "nncf.tensorflow.accuracy_aware_training.runner": [[308, "module-nncf.tensorflow.accuracy_aware_training.runner"]], "nncf.tensorflow.algorithm_selector": [[309, "module-nncf.tensorflow.algorithm_selector"]], "nncf.tensorflow.api.composite_compression": [[310, "module-nncf.tensorflow.api.composite_compression"]], "nncf.tensorflow.api.compression": [[311, "module-nncf.tensorflow.api.compression"]], "nncf.tensorflow.api": [[312, "module-nncf.tensorflow.api"]], "nncf.tensorflow.batchnorm_adaptation": [[313, "module-nncf.tensorflow.batchnorm_adaptation"]], "nncf.tensorflow.callbacks.checkpoint_callback": [[314, "module-nncf.tensorflow.callbacks.checkpoint_callback"]], "nncf.tensorflow.callbacks": [[315, "module-nncf.tensorflow.callbacks"]], "nncf.tensorflow.callbacks.statistics_callback": [[316, "module-nncf.tensorflow.callbacks.statistics_callback"]], "nncf.tensorflow.exporter": [[317, "module-nncf.tensorflow.exporter"]], "nncf.tensorflow.functions": [[318, "module-nncf.tensorflow.functions"]], "nncf.tensorflow.graph.converter": [[319, "module-nncf.tensorflow.graph.converter"]], "nncf.tensorflow.graph": [[320, "module-nncf.tensorflow.graph"]], "nncf.tensorflow.graph.metatypes.common": [[321, "module-nncf.tensorflow.graph.metatypes.common"]], "nncf.tensorflow.graph.metatypes": [[322, "module-nncf.tensorflow.graph.metatypes"]], "nncf.tensorflow.graph.metatypes.keras_layers": [[323, "module-nncf.tensorflow.graph.metatypes.keras_layers"]], "nncf.tensorflow.graph.metatypes.matcher": [[324, "module-nncf.tensorflow.graph.metatypes.matcher"]], "nncf.tensorflow.graph.metatypes.tf_ops": [[325, "module-nncf.tensorflow.graph.metatypes.tf_ops"]], "nncf.tensorflow.graph.model_transformer": [[326, "module-nncf.tensorflow.graph.model_transformer"]], "nncf.tensorflow.graph.pattern_operations": [[327, "module-nncf.tensorflow.graph.pattern_operations"]], "nncf.tensorflow.graph.patterns": [[328, "module-nncf.tensorflow.graph.patterns"]], "nncf.tensorflow.graph.transformations.commands": [[329, "module-nncf.tensorflow.graph.transformations.commands"]], "nncf.tensorflow.graph.transformations": [[330, "module-nncf.tensorflow.graph.transformations"]], "nncf.tensorflow.graph.transformations.layout": [[331, "module-nncf.tensorflow.graph.transformations.layout"]], "nncf.tensorflow.graph.utils": [[332, "module-nncf.tensorflow.graph.utils"]], "nncf.tensorflow.hardware.config": [[333, "module-nncf.tensorflow.hardware.config"]], "nncf.tensorflow.hardware.fused_patterns": [[334, "module-nncf.tensorflow.hardware.fused_patterns"]], "nncf.tensorflow.hardware": [[335, "module-nncf.tensorflow.hardware"]], "nncf.tensorflow.helpers.callback_creation": [[336, "module-nncf.tensorflow.helpers.callback_creation"]], "nncf.tensorflow.helpers": [[337, "module-nncf.tensorflow.helpers"]], "create_compressed_model() (in module nncf.tensorflow.helpers.model_creation)": [[338, "nncf.tensorflow.helpers.model_creation.create_compressed_model"]], "nncf.tensorflow.helpers.model_creation": [[338, "module-nncf.tensorflow.helpers.model_creation"]], "nncf.tensorflow.helpers.model_manager": [[339, "module-nncf.tensorflow.helpers.model_manager"]], "nncf.tensorflow.helpers.utils": [[340, "module-nncf.tensorflow.helpers.utils"]], "nncf.tensorflow": [[341, "module-nncf.tensorflow"]], "nncf.tensorflow.initialization": [[342, "module-nncf.tensorflow.initialization"]], "register_default_init_args() (in module nncf.tensorflow.initialization)": [[342, "nncf.tensorflow.initialization.register_default_init_args"]], "nncf.tensorflow.layers.custom_objects": [[343, "module-nncf.tensorflow.layers.custom_objects"]], "nncf.tensorflow.layers.data_layout": [[344, "module-nncf.tensorflow.layers.data_layout"]], "nncf.tensorflow.layers": [[345, "module-nncf.tensorflow.layers"]], "nncf.tensorflow.layers.operation": [[346, "module-nncf.tensorflow.layers.operation"]], "nncf.tensorflow.layers.wrapper": [[347, "module-nncf.tensorflow.layers.wrapper"]], "nncf.tensorflow.loss": [[348, "module-nncf.tensorflow.loss"]], "nncf.tensorflow.pruning.base_algorithm": [[349, "module-nncf.tensorflow.pruning.base_algorithm"]], "nncf.tensorflow.pruning.callbacks": [[350, "module-nncf.tensorflow.pruning.callbacks"]], "filterpruningcontroller (class in nncf.tensorflow.pruning.filter_pruning.algorithm)": [[351, "nncf.tensorflow.pruning.filter_pruning.algorithm.FilterPruningController"]], "compression_stage() (nncf.tensorflow.pruning.filter_pruning.algorithm.filterpruningcontroller method)": [[351, "nncf.tensorflow.pruning.filter_pruning.algorithm.FilterPruningController.compression_stage"]], "disable_scheduler() (nncf.tensorflow.pruning.filter_pruning.algorithm.filterpruningcontroller method)": [[351, "nncf.tensorflow.pruning.filter_pruning.algorithm.FilterPruningController.disable_scheduler"]], "nncf.tensorflow.pruning.filter_pruning.algorithm": [[351, "module-nncf.tensorflow.pruning.filter_pruning.algorithm"]], "set_pruning_level() (nncf.tensorflow.pruning.filter_pruning.algorithm.filterpruningcontroller method)": [[351, "nncf.tensorflow.pruning.filter_pruning.algorithm.FilterPruningController.set_pruning_level"]], "statistics() (nncf.tensorflow.pruning.filter_pruning.algorithm.filterpruningcontroller method)": [[351, "nncf.tensorflow.pruning.filter_pruning.algorithm.FilterPruningController.statistics"]], "nncf.tensorflow.pruning.filter_pruning.functions": [[352, "module-nncf.tensorflow.pruning.filter_pruning.functions"]], "nncf.tensorflow.pruning.filter_pruning": [[353, "module-nncf.tensorflow.pruning.filter_pruning"]], "nncf.tensorflow.pruning": [[354, "module-nncf.tensorflow.pruning"]], "nncf.tensorflow.pruning.operations": [[355, "module-nncf.tensorflow.pruning.operations"]], "nncf.tensorflow.pruning.tensor_processor": [[356, "module-nncf.tensorflow.pruning.tensor_processor"]], "nncf.tensorflow.pruning.utils": [[357, "module-nncf.tensorflow.pruning.utils"]], "quantizationcontroller (class in nncf.tensorflow.quantization.algorithm)": [[358, "nncf.tensorflow.quantization.algorithm.QuantizationController"]], "compression_stage() (nncf.tensorflow.quantization.algorithm.quantizationcontroller method)": [[358, "nncf.tensorflow.quantization.algorithm.QuantizationController.compression_stage"]], "nncf.tensorflow.quantization.algorithm": [[358, "module-nncf.tensorflow.quantization.algorithm"]], "statistics() (nncf.tensorflow.quantization.algorithm.quantizationcontroller method)": [[358, "nncf.tensorflow.quantization.algorithm.QuantizationController.statistics"]], "strip_model() (nncf.tensorflow.quantization.algorithm.quantizationcontroller method)": [[358, "nncf.tensorflow.quantization.algorithm.QuantizationController.strip_model"]], "nncf.tensorflow.quantization.collectors": [[359, "module-nncf.tensorflow.quantization.collectors"]], "nncf.tensorflow.quantization.default_quantization": [[360, "module-nncf.tensorflow.quantization.default_quantization"]], "nncf.tensorflow.quantization.functions": [[361, "module-nncf.tensorflow.quantization.functions"]], "nncf.tensorflow.quantization": [[362, "module-nncf.tensorflow.quantization"]], "nncf.tensorflow.quantization.init_range": [[363, "module-nncf.tensorflow.quantization.init_range"]], "nncf.tensorflow.quantization.layers": [[364, "module-nncf.tensorflow.quantization.layers"]], "nncf.tensorflow.quantization.quantize": [[365, "module-nncf.tensorflow.quantization.quantize"]], "nncf.tensorflow.quantization.quantizers": [[366, "module-nncf.tensorflow.quantization.quantizers"]], "nncf.tensorflow.quantization.utils": [[367, "module-nncf.tensorflow.quantization.utils"]], "nncf.tensorflow.sparsity.base_algorithm": [[368, "module-nncf.tensorflow.sparsity.base_algorithm"]], "nncf.tensorflow.sparsity.callbacks": [[369, "module-nncf.tensorflow.sparsity.callbacks"]], "nncf.tensorflow.sparsity.collector": [[370, "module-nncf.tensorflow.sparsity.collector"]], "nncf.tensorflow.sparsity": [[371, "module-nncf.tensorflow.sparsity"]], "magnitudesparsitycontroller (class in nncf.tensorflow.sparsity.magnitude.algorithm)": [[372, "nncf.tensorflow.sparsity.magnitude.algorithm.MagnitudeSparsityController"]], "compression_stage() (nncf.tensorflow.sparsity.magnitude.algorithm.magnitudesparsitycontroller method)": [[372, "nncf.tensorflow.sparsity.magnitude.algorithm.MagnitudeSparsityController.compression_stage"]], "disable_scheduler() (nncf.tensorflow.sparsity.magnitude.algorithm.magnitudesparsitycontroller method)": [[372, "nncf.tensorflow.sparsity.magnitude.algorithm.MagnitudeSparsityController.disable_scheduler"]], "freeze() (nncf.tensorflow.sparsity.magnitude.algorithm.magnitudesparsitycontroller method)": [[372, "nncf.tensorflow.sparsity.magnitude.algorithm.MagnitudeSparsityController.freeze"]], "nncf.tensorflow.sparsity.magnitude.algorithm": [[372, "module-nncf.tensorflow.sparsity.magnitude.algorithm"]], "set_sparsity_level() (nncf.tensorflow.sparsity.magnitude.algorithm.magnitudesparsitycontroller method)": [[372, "nncf.tensorflow.sparsity.magnitude.algorithm.MagnitudeSparsityController.set_sparsity_level"]], "statistics() (nncf.tensorflow.sparsity.magnitude.algorithm.magnitudesparsitycontroller method)": [[372, "nncf.tensorflow.sparsity.magnitude.algorithm.MagnitudeSparsityController.statistics"]], "nncf.tensorflow.sparsity.magnitude.functions": [[373, "module-nncf.tensorflow.sparsity.magnitude.functions"]], "nncf.tensorflow.sparsity.magnitude": [[374, "module-nncf.tensorflow.sparsity.magnitude"]], "nncf.tensorflow.sparsity.magnitude.operation": [[375, "module-nncf.tensorflow.sparsity.magnitude.operation"]], "rbsparsitycontroller (class in nncf.tensorflow.sparsity.rb.algorithm)": [[376, "nncf.tensorflow.sparsity.rb.algorithm.RBSparsityController"]], "disable_scheduler() (nncf.tensorflow.sparsity.rb.algorithm.rbsparsitycontroller method)": [[376, "nncf.tensorflow.sparsity.rb.algorithm.RBSparsityController.disable_scheduler"]], "freeze() (nncf.tensorflow.sparsity.rb.algorithm.rbsparsitycontroller method)": [[376, "nncf.tensorflow.sparsity.rb.algorithm.RBSparsityController.freeze"]], "nncf.tensorflow.sparsity.rb.algorithm": [[376, "module-nncf.tensorflow.sparsity.rb.algorithm"]], "set_sparsity_level() (nncf.tensorflow.sparsity.rb.algorithm.rbsparsitycontroller method)": [[376, "nncf.tensorflow.sparsity.rb.algorithm.RBSparsityController.set_sparsity_level"]], "statistics() (nncf.tensorflow.sparsity.rb.algorithm.rbsparsitycontroller method)": [[376, "nncf.tensorflow.sparsity.rb.algorithm.RBSparsityController.statistics"]], "nncf.tensorflow.sparsity.rb.functions": [[377, "module-nncf.tensorflow.sparsity.rb.functions"]], "nncf.tensorflow.sparsity.rb": [[378, "module-nncf.tensorflow.sparsity.rb"]], "nncf.tensorflow.sparsity.rb.loss": [[379, "module-nncf.tensorflow.sparsity.rb.loss"]], "nncf.tensorflow.sparsity.rb.operation": [[380, "module-nncf.tensorflow.sparsity.rb.operation"]], "nncf.tensorflow.sparsity.utils": [[381, "module-nncf.tensorflow.sparsity.utils"]], "nncf.tensorflow.tensor": [[382, "module-nncf.tensorflow.tensor"]], "nncf.tensorflow.tensor_statistics.collectors": [[383, "module-nncf.tensorflow.tensor_statistics.collectors"]], "nncf.tensorflow.tensor_statistics": [[384, "module-nncf.tensorflow.tensor_statistics"]], "nncf.tensorflow.tensor_statistics.reduction": [[385, "module-nncf.tensorflow.tensor_statistics.reduction"]], "nncf.tensorflow.tensor_statistics.statistics": [[386, "module-nncf.tensorflow.tensor_statistics.statistics"]], "nncf.tensorflow.tf_internals": [[387, "module-nncf.tensorflow.tf_internals"]], "nncf.tensorflow.utils.hook_handle": [[388, "module-nncf.tensorflow.utils.hook_handle"]], "nncf.tensorflow.utils": [[389, "module-nncf.tensorflow.utils"]], "nncf.tensorflow.utils.node": [[390, "module-nncf.tensorflow.utils.node"]], "nncf.tensorflow.utils.scopes_handle": [[391, "module-nncf.tensorflow.utils.scopes_handle"]], "nncf.tensorflow.utils.state": [[392, "module-nncf.tensorflow.utils.state"]], "nncf.torch.accuracy_aware_training": [[393, "module-nncf.torch.accuracy_aware_training"]], "nncf.torch.accuracy_aware_training.runner": [[394, "module-nncf.torch.accuracy_aware_training.runner"]], "nncf.torch.accuracy_aware_training.utils": [[395, "module-nncf.torch.accuracy_aware_training.utils"]], "nncf.torch.algo_selector": [[396, "module-nncf.torch.algo_selector"]], "nncf.torch.automl.agent.ddpg.ddpg": [[397, "module-nncf.torch.automl.agent.ddpg.ddpg"]], "nncf.torch.automl.agent.ddpg": [[398, "module-nncf.torch.automl.agent.ddpg"]], "nncf.torch.automl.agent.ddpg.memory": [[399, "module-nncf.torch.automl.agent.ddpg.memory"]], "nncf.torch.automl.agent": [[400, "module-nncf.torch.automl.agent"]], "nncf.torch.automl.environment": [[401, "module-nncf.torch.automl.environment"]], "nncf.torch.automl.environment.quantization_env": [[402, "module-nncf.torch.automl.environment.quantization_env"]], "nncf.torch.automl": [[403, "module-nncf.torch.automl"]], "nncf.torch.batchnorm_adaptation": [[404, "module-nncf.torch.batchnorm_adaptation"]], "nncf.torch.binarization.algo": [[405, "module-nncf.torch.binarization.algo"]], "nncf.torch.binarization.binarize_functions": [[406, "module-nncf.torch.binarization.binarize_functions"]], "nncf.torch.binarization.extensions": [[407, "module-nncf.torch.binarization.extensions"]], "nncf.torch.binarization": [[408, "module-nncf.torch.binarization"]], "nncf.torch.binarization.layers": [[409, "module-nncf.torch.binarization.layers"]], "nncf.torch.binarization.reference": [[410, "module-nncf.torch.binarization.reference"]], "nncf.torch.checkpoint_loading": [[411, "module-nncf.torch.checkpoint_loading"]], "nncf.torch.composite_compression": [[412, "module-nncf.torch.composite_compression"]], "nncf.torch.compression_method_api": [[413, "module-nncf.torch.compression_method_api"]], "nncf.torch.debug": [[414, "module-nncf.torch.debug"]], "nncf.torch.dynamic_graph.context": [[415, "module-nncf.torch.dynamic_graph.context"]], "nncf.torch.dynamic_graph.graph": [[416, "module-nncf.torch.dynamic_graph.graph"]], "nncf.torch.dynamic_graph.graph_tracer": [[417, "module-nncf.torch.dynamic_graph.graph_tracer"]], "nncf.torch.dynamic_graph": [[418, "module-nncf.torch.dynamic_graph"]], "nncf.torch.dynamic_graph.io_handling": [[419, "module-nncf.torch.dynamic_graph.io_handling"]], "nncf.torch.dynamic_graph.layer_attributes_handlers": [[420, "module-nncf.torch.dynamic_graph.layer_attributes_handlers"]], "nncf.torch.dynamic_graph.op_input_processing": [[421, "module-nncf.torch.dynamic_graph.op_input_processing"]], "nncf.torch.dynamic_graph.operation_address": [[422, "module-nncf.torch.dynamic_graph.operation_address"]], "nncf.torch.dynamic_graph.patch_pytorch": [[423, "module-nncf.torch.dynamic_graph.patch_pytorch"]], "nncf.torch.dynamic_graph.scope": [[424, "module-nncf.torch.dynamic_graph.scope"]], "nncf.torch.dynamic_graph.scope_access": [[425, "module-nncf.torch.dynamic_graph.scope_access"]], "nncf.torch.dynamic_graph.structs": [[426, "module-nncf.torch.dynamic_graph.structs"]], "nncf.torch.dynamic_graph.trace_functions": [[427, "module-nncf.torch.dynamic_graph.trace_functions"]], "nncf.torch.dynamic_graph.trace_tensor": [[428, "module-nncf.torch.dynamic_graph.trace_tensor"]], "nncf.torch.dynamic_graph.wrappers": [[429, "module-nncf.torch.dynamic_graph.wrappers"]], "nncf.torch.engine": [[430, "module-nncf.torch.engine"]], "nncf.torch.exporter": [[431, "module-nncf.torch.exporter"]], "nncf.torch.extensions": [[432, "module-nncf.torch.extensions"]], "nncf.torch.functions": [[433, "module-nncf.torch.functions"]], "nncf.torch.graph.graph": [[434, "module-nncf.torch.graph.graph"]], "nncf.torch.graph.graph_builder": [[435, "module-nncf.torch.graph.graph_builder"]], "nncf.torch.graph": [[436, "module-nncf.torch.graph"]], "nncf.torch.graph.operator_metatypes": [[437, "module-nncf.torch.graph.operator_metatypes"]], "nncf.torch.graph.pattern_operations": [[438, "module-nncf.torch.graph.pattern_operations"]], "nncf.torch.graph.transformations.commands": [[439, "module-nncf.torch.graph.transformations.commands"]], "nncf.torch.graph.transformations": [[440, "module-nncf.torch.graph.transformations"]], "nncf.torch.graph.transformations.layout": [[441, "module-nncf.torch.graph.transformations.layout"]], "nncf.torch.hardware.config": [[442, "module-nncf.torch.hardware.config"]], "nncf.torch.hardware.fused_patterns": [[443, "module-nncf.torch.hardware.fused_patterns"]], "nncf.torch.hardware": [[444, "module-nncf.torch.hardware"]], "nncf.torch": [[445, "module-nncf.torch"]], "nncf.torch.initialization": [[446, "module-nncf.torch.initialization"]], "knowledgedistillationcontroller (class in nncf.torch.knowledge_distillation.algo)": [[447, "nncf.torch.knowledge_distillation.algo.KnowledgeDistillationController"]], "compression_stage() (nncf.torch.knowledge_distillation.algo.knowledgedistillationcontroller method)": [[447, "nncf.torch.knowledge_distillation.algo.KnowledgeDistillationController.compression_stage"]], "distributed() (nncf.torch.knowledge_distillation.algo.knowledgedistillationcontroller method)": [[447, "nncf.torch.knowledge_distillation.algo.KnowledgeDistillationController.distributed"]], "nncf.torch.knowledge_distillation.algo": [[447, "module-nncf.torch.knowledge_distillation.algo"]], "statistics() (nncf.torch.knowledge_distillation.algo.knowledgedistillationcontroller method)": [[447, "nncf.torch.knowledge_distillation.algo.KnowledgeDistillationController.statistics"]], "nncf.torch.knowledge_distillation": [[448, "module-nncf.torch.knowledge_distillation"]], "nncf.torch.knowledge_distillation.knowledge_distillation_handler": [[449, "module-nncf.torch.knowledge_distillation.knowledge_distillation_handler"]], "nncf.torch.knowledge_distillation.knowledge_distillation_loss": [[450, "module-nncf.torch.knowledge_distillation.knowledge_distillation_loss"]], "nncf.torch.layer_utils": [[451, "module-nncf.torch.layer_utils"]], "nncf.torch.layers": [[452, "module-nncf.torch.layers"]], "create_compressed_model() (in module nncf.torch.model_creation)": [[453, "nncf.torch.model_creation.create_compressed_model"]], "nncf.torch.model_creation": [[453, "module-nncf.torch.model_creation"]], "nncf.torch.module_operations": [[454, "module-nncf.torch.module_operations"]], "nncf.torch.nested_objects_traversal": [[455, "module-nncf.torch.nested_objects_traversal"]], "nncf.torch.nncf_module_replacement": [[456, "module-nncf.torch.nncf_module_replacement"]], "nncf.torch.nncf_network": [[457, "module-nncf.torch.nncf_network"]], "nncf.torch.pruning.base_algo": [[458, "module-nncf.torch.pruning.base_algo"]], "nncf.torch.pruning.export_utils": [[459, "module-nncf.torch.pruning.export_utils"]], "filterpruningcontroller (class in nncf.torch.pruning.filter_pruning.algo)": [[460, "nncf.torch.pruning.filter_pruning.algo.FilterPruningController"]], "compression_stage() (nncf.torch.pruning.filter_pruning.algo.filterpruningcontroller method)": [[460, "nncf.torch.pruning.filter_pruning.algo.FilterPruningController.compression_stage"]], "disable_scheduler() (nncf.torch.pruning.filter_pruning.algo.filterpruningcontroller method)": [[460, "nncf.torch.pruning.filter_pruning.algo.FilterPruningController.disable_scheduler"]], "get_mask() (nncf.torch.pruning.filter_pruning.algo.filterpruningcontroller static method)": [[460, "nncf.torch.pruning.filter_pruning.algo.FilterPruningController.get_mask"]], "nncf.torch.pruning.filter_pruning.algo": [[460, "module-nncf.torch.pruning.filter_pruning.algo"]], "prepare_for_export() (nncf.torch.pruning.filter_pruning.algo.filterpruningcontroller method)": [[460, "nncf.torch.pruning.filter_pruning.algo.FilterPruningController.prepare_for_export"]], "set_pruning_level() (nncf.torch.pruning.filter_pruning.algo.filterpruningcontroller method)": [[460, "nncf.torch.pruning.filter_pruning.algo.FilterPruningController.set_pruning_level"]], "statistics() (nncf.torch.pruning.filter_pruning.algo.filterpruningcontroller method)": [[460, "nncf.torch.pruning.filter_pruning.algo.FilterPruningController.statistics"]], "strip_model() (nncf.torch.pruning.filter_pruning.algo.filterpruningcontroller method)": [[460, "nncf.torch.pruning.filter_pruning.algo.FilterPruningController.strip_model"]], "nncf.torch.pruning.filter_pruning.functions": [[461, "module-nncf.torch.pruning.filter_pruning.functions"]], "nncf.torch.pruning.filter_pruning.global_ranking.evolutionary_optimization": [[462, "module-nncf.torch.pruning.filter_pruning.global_ranking.evolutionary_optimization"]], "nncf.torch.pruning.filter_pruning.global_ranking": [[463, "module-nncf.torch.pruning.filter_pruning.global_ranking"]], "nncf.torch.pruning.filter_pruning.global_ranking.legr": [[464, "module-nncf.torch.pruning.filter_pruning.global_ranking.legr"]], "nncf.torch.pruning.filter_pruning": [[465, "module-nncf.torch.pruning.filter_pruning"]], "nncf.torch.pruning.filter_pruning.layers": [[466, "module-nncf.torch.pruning.filter_pruning.layers"]], "nncf.torch.pruning": [[467, "module-nncf.torch.pruning"]], "nncf.torch.pruning.operations": [[468, "module-nncf.torch.pruning.operations"]], "nncf.torch.pruning.structs": [[469, "module-nncf.torch.pruning.structs"]], "nncf.torch.pruning.tensor_processor": [[470, "module-nncf.torch.pruning.tensor_processor"]], "nncf.torch.pruning.utils": [[471, "module-nncf.torch.pruning.utils"]], "nncf.torch.quantization.adjust_padding": [[472, "module-nncf.torch.quantization.adjust_padding"]], "quantizationcontroller (class in nncf.torch.quantization.algo)": [[473, "nncf.torch.quantization.algo.QuantizationController"]], "compression_stage() (nncf.torch.quantization.algo.quantizationcontroller method)": [[473, "nncf.torch.quantization.algo.QuantizationController.compression_stage"]], "distributed() (nncf.torch.quantization.algo.quantizationcontroller method)": [[473, "nncf.torch.quantization.algo.QuantizationController.distributed"]], "init_precision() (nncf.torch.quantization.algo.quantizationcontroller method)": [[473, "nncf.torch.quantization.algo.QuantizationController.init_precision"]], "init_range() (nncf.torch.quantization.algo.quantizationcontroller method)": [[473, "nncf.torch.quantization.algo.QuantizationController.init_range"]], "nncf.torch.quantization.algo": [[473, "module-nncf.torch.quantization.algo"]], "prepare_for_export() (nncf.torch.quantization.algo.quantizationcontroller method)": [[473, "nncf.torch.quantization.algo.QuantizationController.prepare_for_export"]], "statistics() (nncf.torch.quantization.algo.quantizationcontroller method)": [[473, "nncf.torch.quantization.algo.QuantizationController.statistics"]], "strip_model() (nncf.torch.quantization.algo.quantizationcontroller method)": [[473, "nncf.torch.quantization.algo.QuantizationController.strip_model"]], "nncf.torch.quantization.default_quantization": [[474, "module-nncf.torch.quantization.default_quantization"]], "nncf.torch.quantization.extensions": [[475, "module-nncf.torch.quantization.extensions"]], "nncf.torch.quantization.hessian_trace": [[476, "module-nncf.torch.quantization.hessian_trace"]], "nncf.torch.quantization": [[477, "module-nncf.torch.quantization"]], "nncf.torch.quantization.init_precision": [[478, "module-nncf.torch.quantization.init_precision"]], "nncf.torch.quantization.init_range": [[479, "module-nncf.torch.quantization.init_range"]], "nncf.torch.quantization.layers": [[480, "module-nncf.torch.quantization.layers"]], "nncf.torch.quantization.metrics": [[481, "module-nncf.torch.quantization.metrics"]], "nncf.torch.quantization.precision_constraints": [[482, "module-nncf.torch.quantization.precision_constraints"]], "nncf.torch.quantization.precision_init.adjacent_quantizers": [[483, "module-nncf.torch.quantization.precision_init.adjacent_quantizers"]], "nncf.torch.quantization.precision_init.autoq_init": [[484, "module-nncf.torch.quantization.precision_init.autoq_init"]], "nncf.torch.quantization.precision_init.base_init": [[485, "module-nncf.torch.quantization.precision_init.base_init"]], "nncf.torch.quantization.precision_init.bitwidth_graph": [[486, "module-nncf.torch.quantization.precision_init.bitwidth_graph"]], "nncf.torch.quantization.precision_init.compression_ratio": [[487, "module-nncf.torch.quantization.precision_init.compression_ratio"]], "nncf.torch.quantization.precision_init.hawq_debug": [[488, "module-nncf.torch.quantization.precision_init.hawq_debug"]], "nncf.torch.quantization.precision_init.hawq_init": [[489, "module-nncf.torch.quantization.precision_init.hawq_init"]], "nncf.torch.quantization.precision_init": [[490, "module-nncf.torch.quantization.precision_init"]], "nncf.torch.quantization.precision_init.manual_init": [[491, "module-nncf.torch.quantization.precision_init.manual_init"]], "nncf.torch.quantization.precision_init.perturbations": [[492, "module-nncf.torch.quantization.precision_init.perturbations"]], "nncf.torch.quantization.precision_init.traces_order": [[493, "module-nncf.torch.quantization.precision_init.traces_order"]], "nncf.torch.quantization.prepare_for_inference": [[494, "module-nncf.torch.quantization.prepare_for_inference"]], "nncf.torch.quantization.quantize": [[495, "module-nncf.torch.quantization.quantize"]], "nncf.torch.quantization.quantize_functions": [[496, "module-nncf.torch.quantization.quantize_functions"]], "nncf.torch.quantization.reference": [[497, "module-nncf.torch.quantization.reference"]], "nncf.torch.quantization.schedulers": [[498, "module-nncf.torch.quantization.schedulers"]], "nncf.torch.quantization.statistics": [[499, "module-nncf.torch.quantization.statistics"]], "nncf.torch.quantization.structs": [[500, "module-nncf.torch.quantization.structs"]], "nncf.torch.quantization.translator": [[501, "module-nncf.torch.quantization.translator"]], "basesparsityalgocontroller (class in nncf.torch.sparsity.base_algo)": [[502, "nncf.torch.sparsity.base_algo.BaseSparsityAlgoController"]], "compression_stage() (nncf.torch.sparsity.base_algo.basesparsityalgocontroller method)": [[502, "nncf.torch.sparsity.base_algo.BaseSparsityAlgoController.compression_stage"]], "disable_scheduler() (nncf.torch.sparsity.base_algo.basesparsityalgocontroller method)": [[502, "nncf.torch.sparsity.base_algo.BaseSparsityAlgoController.disable_scheduler"]], "nncf.torch.sparsity.base_algo": [[502, "module-nncf.torch.sparsity.base_algo"]], "strip_model() (nncf.torch.sparsity.base_algo.basesparsityalgocontroller method)": [[502, "nncf.torch.sparsity.base_algo.BaseSparsityAlgoController.strip_model"]], "nncf.torch.sparsity.collector": [[503, "module-nncf.torch.sparsity.collector"]], "constsparsitycontroller (class in nncf.torch.sparsity.const.algo)": [[504, "nncf.torch.sparsity.const.algo.ConstSparsityController"]], "freeze() (nncf.torch.sparsity.const.algo.constsparsitycontroller method)": [[504, "nncf.torch.sparsity.const.algo.ConstSparsityController.freeze"]], "nncf.torch.sparsity.const.algo": [[504, "module-nncf.torch.sparsity.const.algo"]], "set_sparsity_level() (nncf.torch.sparsity.const.algo.constsparsitycontroller method)": [[504, "nncf.torch.sparsity.const.algo.ConstSparsityController.set_sparsity_level"]], "statistics() (nncf.torch.sparsity.const.algo.constsparsitycontroller method)": [[504, "nncf.torch.sparsity.const.algo.ConstSparsityController.statistics"]], "nncf.torch.sparsity.const": [[505, "module-nncf.torch.sparsity.const"]], "nncf.torch.sparsity.functions": [[506, "module-nncf.torch.sparsity.functions"]], "nncf.torch.sparsity": [[507, "module-nncf.torch.sparsity"]], "nncf.torch.sparsity.layers": [[508, "module-nncf.torch.sparsity.layers"]], "magnitudesparsitycontroller (class in nncf.torch.sparsity.magnitude.algo)": [[509, "nncf.torch.sparsity.magnitude.algo.MagnitudeSparsityController"]], "compression_stage() (nncf.torch.sparsity.magnitude.algo.magnitudesparsitycontroller method)": [[509, "nncf.torch.sparsity.magnitude.algo.MagnitudeSparsityController.compression_stage"]], "freeze() (nncf.torch.sparsity.magnitude.algo.magnitudesparsitycontroller method)": [[509, "nncf.torch.sparsity.magnitude.algo.MagnitudeSparsityController.freeze"]], "nncf.torch.sparsity.magnitude.algo": [[509, "module-nncf.torch.sparsity.magnitude.algo"]], "set_sparsity_level() (nncf.torch.sparsity.magnitude.algo.magnitudesparsitycontroller method)": [[509, "nncf.torch.sparsity.magnitude.algo.MagnitudeSparsityController.set_sparsity_level"]], "statistics() (nncf.torch.sparsity.magnitude.algo.magnitudesparsitycontroller method)": [[509, "nncf.torch.sparsity.magnitude.algo.MagnitudeSparsityController.statistics"]], "nncf.torch.sparsity.magnitude.functions": [[510, "module-nncf.torch.sparsity.magnitude.functions"]], "nncf.torch.sparsity.magnitude": [[511, "module-nncf.torch.sparsity.magnitude"]], "rbsparsitycontroller (class in nncf.torch.sparsity.rb.algo)": [[512, "nncf.torch.sparsity.rb.algo.RBSparsityController"]], "compression_stage() (nncf.torch.sparsity.rb.algo.rbsparsitycontroller method)": [[512, "nncf.torch.sparsity.rb.algo.RBSparsityController.compression_stage"]], "distributed() (nncf.torch.sparsity.rb.algo.rbsparsitycontroller method)": [[512, "nncf.torch.sparsity.rb.algo.RBSparsityController.distributed"]], "freeze() (nncf.torch.sparsity.rb.algo.rbsparsitycontroller method)": [[512, "nncf.torch.sparsity.rb.algo.RBSparsityController.freeze"]], "nncf.torch.sparsity.rb.algo": [[512, "module-nncf.torch.sparsity.rb.algo"]], "set_sparsity_level() (nncf.torch.sparsity.rb.algo.rbsparsitycontroller method)": [[512, "nncf.torch.sparsity.rb.algo.RBSparsityController.set_sparsity_level"]], "statistics() (nncf.torch.sparsity.rb.algo.rbsparsitycontroller method)": [[512, "nncf.torch.sparsity.rb.algo.RBSparsityController.statistics"]], "nncf.torch.sparsity.rb.functions": [[513, "module-nncf.torch.sparsity.rb.functions"]], "nncf.torch.sparsity.rb": [[514, "module-nncf.torch.sparsity.rb"]], "nncf.torch.sparsity.rb.layers": [[515, "module-nncf.torch.sparsity.rb.layers"]], "nncf.torch.sparsity.rb.loss": [[516, "module-nncf.torch.sparsity.rb.loss"]], "nncf.torch.statistics.aggregator": [[517, "module-nncf.torch.statistics.aggregator"]], "nncf.torch.statistics": [[518, "module-nncf.torch.statistics"]], "autoqprecisioninitargs (class in nncf.torch.structures)": [[519, "nncf.torch.structures.AutoQPrecisionInitArgs"]], "distributedcallbacksargs (class in nncf.torch.structures)": [[519, "nncf.torch.structures.DistributedCallbacksArgs"]], "executionparameters (class in nncf.torch.structures)": [[519, "nncf.torch.structures.ExecutionParameters"]], "legrinitargs (class in nncf.torch.structures)": [[519, "nncf.torch.structures.LeGRInitArgs"]], "quantizationprecisioninitargs (class in nncf.torch.structures)": [[519, "nncf.torch.structures.QuantizationPrecisionInitArgs"]], "nncf.torch.structures": [[519, "module-nncf.torch.structures"]], "nncf.torch.tensor": [[520, "module-nncf.torch.tensor"]], "nncf.torch.tensor_statistics.algo": [[521, "module-nncf.torch.tensor_statistics.algo"]], "nncf.torch.tensor_statistics.collectors": [[522, "module-nncf.torch.tensor_statistics.collectors"]], "nncf.torch.tensor_statistics": [[523, "module-nncf.torch.tensor_statistics"]], "nncf.torch.tensor_statistics.reduction": [[524, "module-nncf.torch.tensor_statistics.reduction"]], "nncf.torch.tensor_statistics.statistics": [[525, "module-nncf.torch.tensor_statistics.statistics"]], "nncf.torch.utils": [[526, "module-nncf.torch.utils"]], "nncf.version": [[527, "module-nncf.version"]]}})
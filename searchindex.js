Search.setIndex({"docnames": ["_autoapi_templates/index", "_autoapi_templates/python/attribute", "_autoapi_templates/python/class", "_autoapi_templates/python/data", "_autoapi_templates/python/exception", "_autoapi_templates/python/function", "_autoapi_templates/python/method", "_autoapi_templates/python/module", "_autoapi_templates/python/package", "_autoapi_templates/python/property", "autoapi/nncf/api/compression/index", "autoapi/nncf/api/index", "autoapi/nncf/api/statistics/index", "autoapi/nncf/common/accuracy_aware_training/index", "autoapi/nncf/common/accuracy_aware_training/runner/index", "autoapi/nncf/common/accuracy_aware_training/runner_factory/index", "autoapi/nncf/common/accuracy_aware_training/statistics/index", "autoapi/nncf/common/accuracy_aware_training/training_loop/index", "autoapi/nncf/common/api_marker/index", "autoapi/nncf/common/collector/index", "autoapi/nncf/common/composite_compression/index", "autoapi/nncf/common/compression/index", "autoapi/nncf/common/deprecation/index", "autoapi/nncf/common/engine/index", "autoapi/nncf/common/exporter/index", "autoapi/nncf/common/factory/index", "autoapi/nncf/common/graph/definitions/index", "autoapi/nncf/common/graph/graph/index", "autoapi/nncf/common/graph/graph_matching/index", "autoapi/nncf/common/graph/index", "autoapi/nncf/common/graph/layer_attributes/index", "autoapi/nncf/common/graph/model_transformer/index", "autoapi/nncf/common/graph/operator_metatypes/index", "autoapi/nncf/common/graph/patterns/index", "autoapi/nncf/common/graph/patterns/manager/index", "autoapi/nncf/common/graph/patterns/patterns/index", "autoapi/nncf/common/graph/transformations/command_creation/index", "autoapi/nncf/common/graph/transformations/commands/index", "autoapi/nncf/common/graph/transformations/index", "autoapi/nncf/common/graph/transformations/layout/index", "autoapi/nncf/common/graph/utils/index", "autoapi/nncf/common/hardware/config/index", "autoapi/nncf/common/hardware/index", "autoapi/nncf/common/hardware/opset/index", "autoapi/nncf/common/index", "autoapi/nncf/common/initialization/batchnorm_adaptation/index", "autoapi/nncf/common/initialization/dataloader/index", "autoapi/nncf/common/initialization/index", "autoapi/nncf/common/insertion_point_graph/index", "autoapi/nncf/common/logging/index", "autoapi/nncf/common/logging/logger/index", "autoapi/nncf/common/logging/progress_bar/index", "autoapi/nncf/common/pruning/clusterization/index", "autoapi/nncf/common/pruning/index", "autoapi/nncf/common/pruning/mask_propagation/index", "autoapi/nncf/common/pruning/model_analysis/index", "autoapi/nncf/common/pruning/node_selector/index", "autoapi/nncf/common/pruning/operations/index", "autoapi/nncf/common/pruning/schedulers/index", "autoapi/nncf/common/pruning/shape_pruning_processor/index", "autoapi/nncf/common/pruning/statistics/index", "autoapi/nncf/common/pruning/structs/index", "autoapi/nncf/common/pruning/symbolic_mask/index", "autoapi/nncf/common/pruning/tensor_processor/index", "autoapi/nncf/common/pruning/utils/index", "autoapi/nncf/common/pruning/weights_flops_calculator/index", "autoapi/nncf/common/quantization/collectors/index", "autoapi/nncf/common/quantization/config_assignment/index", "autoapi/nncf/common/quantization/index", "autoapi/nncf/common/quantization/initialization/index", "autoapi/nncf/common/quantization/initialization/range/index", "autoapi/nncf/common/quantization/quantizer_propagation/graph/index", "autoapi/nncf/common/quantization/quantizer_propagation/grouping/index", "autoapi/nncf/common/quantization/quantizer_propagation/index", "autoapi/nncf/common/quantization/quantizer_propagation/solver/index", "autoapi/nncf/common/quantization/quantizer_propagation/structs/index", "autoapi/nncf/common/quantization/quantizer_propagation/visualizer/index", "autoapi/nncf/common/quantization/quantizer_removal/index", "autoapi/nncf/common/quantization/quantizer_setup/index", "autoapi/nncf/common/quantization/quantizers/index", "autoapi/nncf/common/quantization/statistics/index", "autoapi/nncf/common/quantization/structs/index", "autoapi/nncf/common/schedulers/index", "autoapi/nncf/common/scopes/index", "autoapi/nncf/common/sparsity/collector/index", "autoapi/nncf/common/sparsity/controller/index", "autoapi/nncf/common/sparsity/index", "autoapi/nncf/common/sparsity/schedulers/index", "autoapi/nncf/common/sparsity/statistics/index", "autoapi/nncf/common/stateful_classes_registry/index", "autoapi/nncf/common/statistics/index", "autoapi/nncf/common/tensor/index", "autoapi/nncf/common/tensor_statistics/aggregator/index", "autoapi/nncf/common/tensor_statistics/collectors/index", "autoapi/nncf/common/tensor_statistics/index", "autoapi/nncf/common/tensor_statistics/reduction/index", "autoapi/nncf/common/tensor_statistics/statistic_point/index", "autoapi/nncf/common/tensor_statistics/statistics/index", "autoapi/nncf/common/utils/backend/index", "autoapi/nncf/common/utils/debug/index", "autoapi/nncf/common/utils/decorators/index", "autoapi/nncf/common/utils/dot_file_rw/index", "autoapi/nncf/common/utils/helpers/index", "autoapi/nncf/common/utils/index", "autoapi/nncf/common/utils/logger/index", "autoapi/nncf/common/utils/os/index", "autoapi/nncf/common/utils/patcher/index", "autoapi/nncf/common/utils/registry/index", "autoapi/nncf/common/utils/tensorboard/index", "autoapi/nncf/common/utils/timer/index", "autoapi/nncf/config/config/index", "autoapi/nncf/config/definitions/index", "autoapi/nncf/config/extractors/index", "autoapi/nncf/config/index", "autoapi/nncf/config/schema/index", "autoapi/nncf/config/schemata/accuracy_aware/index", "autoapi/nncf/config/schemata/algo/binarization/index", "autoapi/nncf/config/schemata/algo/const_sparsity/index", "autoapi/nncf/config/schemata/algo/filter_pruning/index", "autoapi/nncf/config/schemata/algo/index", "autoapi/nncf/config/schemata/algo/knowledge_distillation/index", "autoapi/nncf/config/schemata/algo/magnitude_sparsity/index", "autoapi/nncf/config/schemata/algo/quantization/index", "autoapi/nncf/config/schemata/algo/rb_sparsity/index", "autoapi/nncf/config/schemata/basic/index", "autoapi/nncf/config/schemata/common/compression/index", "autoapi/nncf/config/schemata/common/index", "autoapi/nncf/config/schemata/common/initialization/index", "autoapi/nncf/config/schemata/common/sparsity/index", "autoapi/nncf/config/schemata/common/targeting/index", "autoapi/nncf/config/schemata/defaults/index", "autoapi/nncf/config/schemata/experimental_schema/index", "autoapi/nncf/config/schemata/index", "autoapi/nncf/config/structures/index", "autoapi/nncf/config/telemetry_extractors/index", "autoapi/nncf/config/utils/index", "autoapi/nncf/data/dataset/index", "autoapi/nncf/data/index", "autoapi/nncf/definitions/index", "autoapi/nncf/experimental/common/graph/index", "autoapi/nncf/experimental/common/graph/netron/index", "autoapi/nncf/experimental/common/index", "autoapi/nncf/experimental/common/pruning/block_hierarchy/index", "autoapi/nncf/experimental/common/pruning/index", "autoapi/nncf/experimental/common/pruning/nodes_grouping/index", "autoapi/nncf/experimental/common/pruning/operations/index", "autoapi/nncf/experimental/common/pruning/propagation_data/index", "autoapi/nncf/experimental/common/tensor_statistics/collectors/index", "autoapi/nncf/experimental/common/tensor_statistics/index", "autoapi/nncf/experimental/index", "autoapi/nncf/experimental/openvino/index", "autoapi/nncf/experimental/openvino/quantization/index", "autoapi/nncf/experimental/openvino/quantization/quantize/index", "autoapi/nncf/experimental/openvino_native/engine/index", "autoapi/nncf/experimental/openvino_native/graph/index", "autoapi/nncf/experimental/openvino_native/graph/metatypes/common/index", "autoapi/nncf/experimental/openvino_native/graph/metatypes/index", "autoapi/nncf/experimental/openvino_native/graph/metatypes/openvino_metatypes/index", "autoapi/nncf/experimental/openvino_native/graph/model_transformer/index", "autoapi/nncf/experimental/openvino_native/graph/nncf_graph_builder/index", "autoapi/nncf/experimental/openvino_native/graph/node_utils/index", "autoapi/nncf/experimental/openvino_native/graph/transformations/command_creation/index", "autoapi/nncf/experimental/openvino_native/graph/transformations/commands/index", "autoapi/nncf/experimental/openvino_native/graph/transformations/index", "autoapi/nncf/experimental/openvino_native/hardware/config/index", "autoapi/nncf/experimental/openvino_native/hardware/fused_patterns/index", "autoapi/nncf/experimental/openvino_native/hardware/index", "autoapi/nncf/experimental/openvino_native/hardware/pattern_operations/index", "autoapi/nncf/experimental/openvino_native/index", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/bias_correction/index", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/bias_correction/openvino_backend/index", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/fast_bias_correction/index", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/fast_bias_correction/openvino_backend/index", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/index", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/min_max/index", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/min_max/openvino_backend/index", "autoapi/nncf/experimental/openvino_native/quantization/default_quantization/index", "autoapi/nncf/experimental/openvino_native/quantization/index", "autoapi/nncf/experimental/openvino_native/quantization/quantize/index", "autoapi/nncf/experimental/openvino_native/statistics/aggregator/index", "autoapi/nncf/experimental/openvino_native/statistics/collectors/index", "autoapi/nncf/experimental/openvino_native/statistics/index", "autoapi/nncf/experimental/openvino_native/statistics/statistics/index", "autoapi/nncf/experimental/openvino_native/tensor/index", "autoapi/nncf/experimental/tensorflow/context/index", "autoapi/nncf/experimental/tensorflow/graph/argprovider/index", "autoapi/nncf/experimental/tensorflow/graph/converter/index", "autoapi/nncf/experimental/tensorflow/graph/index", "autoapi/nncf/experimental/tensorflow/graph/model_transformer/index", "autoapi/nncf/experimental/tensorflow/graph/node_attributes/index", "autoapi/nncf/experimental/tensorflow/graph/transformations/commands/index", "autoapi/nncf/experimental/tensorflow/graph/transformations/index", "autoapi/nncf/experimental/tensorflow/graph/transformations/layout/index", "autoapi/nncf/experimental/tensorflow/index", "autoapi/nncf/experimental/tensorflow/nncf_network/index", "autoapi/nncf/experimental/tensorflow/patch_tf/index", "autoapi/nncf/experimental/tensorflow/quantization/algorithm/index", "autoapi/nncf/experimental/tensorflow/quantization/index", "autoapi/nncf/experimental/tensorflow/quantization/init_range/index", "autoapi/nncf/experimental/tensorflow/quantization/quantizers/index", "autoapi/nncf/experimental/tensorflow/scope/index", "autoapi/nncf/experimental/torch/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/base_handler/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elastic_depth/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elastic_kernel/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elastic_width/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elasticity_builder/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elasticity_controller/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elasticity_dim/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/filter_reorder/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/multi_elasticity_handler/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/visualization/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/search/evaluator/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/search/evaluator_handler/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/search/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/search/search/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/base_training/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/lr_scheduler/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/model_creator_helpers/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/progressive_shrinking_builder/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/progressive_shrinking_controller/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/scheduler/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/stage_descriptor/index", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/training_algorithm/index", "autoapi/nncf/experimental/torch/nas/index", "autoapi/nncf/experimental/torch/pruning/index", "autoapi/nncf/experimental/torch/pruning/operations/index", "autoapi/nncf/experimental/torch/quantization/index", "autoapi/nncf/experimental/torch/quantization/quantize/index", "autoapi/nncf/experimental/torch/search_building_blocks/index", "autoapi/nncf/experimental/torch/search_building_blocks/search_blocks/index", "autoapi/nncf/experimental/torch/search_building_blocks/search_graph/index", "autoapi/nncf/experimental/torch/sparsity/index", "autoapi/nncf/experimental/torch/sparsity/movement/algo/index", "autoapi/nncf/experimental/torch/sparsity/movement/functions/index", "autoapi/nncf/experimental/torch/sparsity/movement/index", "autoapi/nncf/experimental/torch/sparsity/movement/layers/index", "autoapi/nncf/experimental/torch/sparsity/movement/loss/index", "autoapi/nncf/experimental/torch/sparsity/movement/scheduler/index", "autoapi/nncf/experimental/torch/sparsity/movement/structured_mask_handler/index", "autoapi/nncf/index", "autoapi/nncf/onnx/engine/index", "autoapi/nncf/onnx/graph/index", "autoapi/nncf/onnx/graph/metatypes/index", "autoapi/nncf/onnx/graph/metatypes/onnx_metatypes/index", "autoapi/nncf/onnx/graph/model_transformer/index", "autoapi/nncf/onnx/graph/nncf_graph_builder/index", "autoapi/nncf/onnx/graph/node_utils/index", "autoapi/nncf/onnx/graph/onnx_graph/index", "autoapi/nncf/onnx/graph/transformations/command_creation/index", "autoapi/nncf/onnx/graph/transformations/commands/index", "autoapi/nncf/onnx/graph/transformations/index", "autoapi/nncf/onnx/hardware/config/index", "autoapi/nncf/onnx/hardware/fused_patterns/index", "autoapi/nncf/onnx/hardware/index", "autoapi/nncf/onnx/hardware/pattern_operations/index", "autoapi/nncf/onnx/index", "autoapi/nncf/onnx/quantization/default_quantization/index", "autoapi/nncf/onnx/quantization/index", "autoapi/nncf/onnx/quantization/quantize/index", "autoapi/nncf/onnx/quantization/quantizer_parameters/index", "autoapi/nncf/onnx/statistics/aggregator/index", "autoapi/nncf/onnx/statistics/collectors/index", "autoapi/nncf/onnx/statistics/index", "autoapi/nncf/onnx/statistics/statistics/index", "autoapi/nncf/onnx/tensor/index", "autoapi/nncf/openvino/engine/index", "autoapi/nncf/openvino/index", "autoapi/nncf/openvino/quantization/accuracy_aware/index", "autoapi/nncf/openvino/quantization/index", "autoapi/nncf/openvino/quantization/quantize/index", "autoapi/nncf/parameters/index", "autoapi/nncf/quantization/algorithms/accuracy_control/algorithm/index", "autoapi/nncf/quantization/algorithms/accuracy_control/backend/index", "autoapi/nncf/quantization/algorithms/accuracy_control/index", "autoapi/nncf/quantization/algorithms/accuracy_control/openvino_backend/index", "autoapi/nncf/quantization/algorithms/accuracy_control/rank_functions/index", "autoapi/nncf/quantization/algorithms/accuracy_control/ranker/index", "autoapi/nncf/quantization/algorithms/algorithm/index", "autoapi/nncf/quantization/algorithms/bias_correction/algorithm/index", "autoapi/nncf/quantization/algorithms/bias_correction/backend/index", "autoapi/nncf/quantization/algorithms/bias_correction/index", "autoapi/nncf/quantization/algorithms/bias_correction/onnx_backend/index", "autoapi/nncf/quantization/algorithms/definitions/index", "autoapi/nncf/quantization/algorithms/fast_bias_correction/algorithm/index", "autoapi/nncf/quantization/algorithms/fast_bias_correction/backend/index", "autoapi/nncf/quantization/algorithms/fast_bias_correction/index", "autoapi/nncf/quantization/algorithms/fast_bias_correction/onnx_backend/index", "autoapi/nncf/quantization/algorithms/index", "autoapi/nncf/quantization/algorithms/min_max/algorithm/index", "autoapi/nncf/quantization/algorithms/min_max/backend/index", "autoapi/nncf/quantization/algorithms/min_max/index", "autoapi/nncf/quantization/algorithms/min_max/onnx_backend/index", "autoapi/nncf/quantization/algorithms/min_max/torch_backend/index", "autoapi/nncf/quantization/algorithms/post_training/algorithm/index", "autoapi/nncf/quantization/algorithms/post_training/index", "autoapi/nncf/quantization/fake_quantize/index", "autoapi/nncf/quantization/index", "autoapi/nncf/quantization/passes/index", "autoapi/nncf/quantization/quantize/index", "autoapi/nncf/quantization/telemetry_extractors/index", "autoapi/nncf/scopes/index", "autoapi/nncf/telemetry/decorator/index", "autoapi/nncf/telemetry/events/index", "autoapi/nncf/telemetry/extractors/index", "autoapi/nncf/telemetry/index", "autoapi/nncf/telemetry/wrapper/index", "autoapi/nncf/tensorflow/accuracy_aware_training/index", "autoapi/nncf/tensorflow/accuracy_aware_training/keras_model_utils/index", "autoapi/nncf/tensorflow/accuracy_aware_training/runner/index", "autoapi/nncf/tensorflow/algorithm_selector/index", "autoapi/nncf/tensorflow/api/composite_compression/index", "autoapi/nncf/tensorflow/api/compression/index", "autoapi/nncf/tensorflow/api/index", "autoapi/nncf/tensorflow/batchnorm_adaptation/index", "autoapi/nncf/tensorflow/callbacks/checkpoint_callback/index", "autoapi/nncf/tensorflow/callbacks/index", "autoapi/nncf/tensorflow/callbacks/statistics_callback/index", "autoapi/nncf/tensorflow/exporter/index", "autoapi/nncf/tensorflow/functions/index", "autoapi/nncf/tensorflow/graph/converter/index", "autoapi/nncf/tensorflow/graph/index", "autoapi/nncf/tensorflow/graph/metatypes/common/index", "autoapi/nncf/tensorflow/graph/metatypes/index", "autoapi/nncf/tensorflow/graph/metatypes/keras_layers/index", "autoapi/nncf/tensorflow/graph/metatypes/matcher/index", "autoapi/nncf/tensorflow/graph/metatypes/tf_ops/index", "autoapi/nncf/tensorflow/graph/model_transformer/index", "autoapi/nncf/tensorflow/graph/pattern_operations/index", "autoapi/nncf/tensorflow/graph/patterns/index", "autoapi/nncf/tensorflow/graph/transformations/commands/index", "autoapi/nncf/tensorflow/graph/transformations/index", "autoapi/nncf/tensorflow/graph/transformations/layout/index", "autoapi/nncf/tensorflow/graph/utils/index", "autoapi/nncf/tensorflow/hardware/config/index", "autoapi/nncf/tensorflow/hardware/fused_patterns/index", "autoapi/nncf/tensorflow/hardware/index", "autoapi/nncf/tensorflow/helpers/callback_creation/index", "autoapi/nncf/tensorflow/helpers/index", "autoapi/nncf/tensorflow/helpers/model_creation/index", "autoapi/nncf/tensorflow/helpers/model_manager/index", "autoapi/nncf/tensorflow/helpers/utils/index", "autoapi/nncf/tensorflow/index", "autoapi/nncf/tensorflow/initialization/index", "autoapi/nncf/tensorflow/layers/custom_objects/index", "autoapi/nncf/tensorflow/layers/data_layout/index", "autoapi/nncf/tensorflow/layers/index", "autoapi/nncf/tensorflow/layers/operation/index", "autoapi/nncf/tensorflow/layers/wrapper/index", "autoapi/nncf/tensorflow/loss/index", "autoapi/nncf/tensorflow/pruning/base_algorithm/index", "autoapi/nncf/tensorflow/pruning/callbacks/index", "autoapi/nncf/tensorflow/pruning/filter_pruning/algorithm/index", "autoapi/nncf/tensorflow/pruning/filter_pruning/functions/index", "autoapi/nncf/tensorflow/pruning/filter_pruning/index", "autoapi/nncf/tensorflow/pruning/index", "autoapi/nncf/tensorflow/pruning/operations/index", "autoapi/nncf/tensorflow/pruning/tensor_processor/index", "autoapi/nncf/tensorflow/pruning/utils/index", "autoapi/nncf/tensorflow/quantization/algorithm/index", "autoapi/nncf/tensorflow/quantization/collectors/index", "autoapi/nncf/tensorflow/quantization/default_quantization/index", "autoapi/nncf/tensorflow/quantization/functions/index", "autoapi/nncf/tensorflow/quantization/index", "autoapi/nncf/tensorflow/quantization/init_range/index", "autoapi/nncf/tensorflow/quantization/layers/index", "autoapi/nncf/tensorflow/quantization/quantize/index", "autoapi/nncf/tensorflow/quantization/quantizers/index", "autoapi/nncf/tensorflow/quantization/utils/index", "autoapi/nncf/tensorflow/sparsity/base_algorithm/index", "autoapi/nncf/tensorflow/sparsity/callbacks/index", "autoapi/nncf/tensorflow/sparsity/collector/index", "autoapi/nncf/tensorflow/sparsity/index", "autoapi/nncf/tensorflow/sparsity/magnitude/algorithm/index", "autoapi/nncf/tensorflow/sparsity/magnitude/functions/index", "autoapi/nncf/tensorflow/sparsity/magnitude/index", "autoapi/nncf/tensorflow/sparsity/magnitude/operation/index", "autoapi/nncf/tensorflow/sparsity/rb/algorithm/index", "autoapi/nncf/tensorflow/sparsity/rb/functions/index", "autoapi/nncf/tensorflow/sparsity/rb/index", "autoapi/nncf/tensorflow/sparsity/rb/loss/index", "autoapi/nncf/tensorflow/sparsity/rb/operation/index", "autoapi/nncf/tensorflow/sparsity/utils/index", "autoapi/nncf/tensorflow/tensor/index", "autoapi/nncf/tensorflow/tensor_statistics/collectors/index", "autoapi/nncf/tensorflow/tensor_statistics/index", "autoapi/nncf/tensorflow/tensor_statistics/reduction/index", "autoapi/nncf/tensorflow/tensor_statistics/statistics/index", "autoapi/nncf/tensorflow/tf_internals/index", "autoapi/nncf/tensorflow/utils/hook_handle/index", "autoapi/nncf/tensorflow/utils/index", "autoapi/nncf/tensorflow/utils/node/index", "autoapi/nncf/tensorflow/utils/scopes_handle/index", "autoapi/nncf/tensorflow/utils/state/index", "autoapi/nncf/torch/accuracy_aware_training/index", "autoapi/nncf/torch/accuracy_aware_training/runner/index", "autoapi/nncf/torch/accuracy_aware_training/utils/index", "autoapi/nncf/torch/algo_selector/index", "autoapi/nncf/torch/automl/agent/ddpg/ddpg/index", "autoapi/nncf/torch/automl/agent/ddpg/index", "autoapi/nncf/torch/automl/agent/ddpg/memory/index", "autoapi/nncf/torch/automl/agent/index", "autoapi/nncf/torch/automl/environment/index", "autoapi/nncf/torch/automl/environment/quantization_env/index", "autoapi/nncf/torch/automl/index", "autoapi/nncf/torch/batchnorm_adaptation/index", "autoapi/nncf/torch/binarization/algo/index", "autoapi/nncf/torch/binarization/binarize_functions/index", "autoapi/nncf/torch/binarization/extensions/index", "autoapi/nncf/torch/binarization/index", "autoapi/nncf/torch/binarization/layers/index", "autoapi/nncf/torch/binarization/reference/index", "autoapi/nncf/torch/checkpoint_loading/index", "autoapi/nncf/torch/composite_compression/index", "autoapi/nncf/torch/compression_method_api/index", "autoapi/nncf/torch/debug/index", "autoapi/nncf/torch/dynamic_graph/context/index", "autoapi/nncf/torch/dynamic_graph/graph/index", "autoapi/nncf/torch/dynamic_graph/graph_tracer/index", "autoapi/nncf/torch/dynamic_graph/index", "autoapi/nncf/torch/dynamic_graph/io_handling/index", "autoapi/nncf/torch/dynamic_graph/layer_attributes_handlers/index", "autoapi/nncf/torch/dynamic_graph/op_input_processing/index", "autoapi/nncf/torch/dynamic_graph/operation_address/index", "autoapi/nncf/torch/dynamic_graph/patch_pytorch/index", "autoapi/nncf/torch/dynamic_graph/scope/index", "autoapi/nncf/torch/dynamic_graph/scope_access/index", "autoapi/nncf/torch/dynamic_graph/structs/index", "autoapi/nncf/torch/dynamic_graph/trace_functions/index", "autoapi/nncf/torch/dynamic_graph/trace_tensor/index", "autoapi/nncf/torch/dynamic_graph/wrappers/index", "autoapi/nncf/torch/engine/index", "autoapi/nncf/torch/exporter/index", "autoapi/nncf/torch/extensions/index", "autoapi/nncf/torch/functions/index", "autoapi/nncf/torch/graph/graph/index", "autoapi/nncf/torch/graph/graph_builder/index", "autoapi/nncf/torch/graph/index", "autoapi/nncf/torch/graph/operator_metatypes/index", "autoapi/nncf/torch/graph/pattern_operations/index", "autoapi/nncf/torch/graph/transformations/commands/index", "autoapi/nncf/torch/graph/transformations/index", "autoapi/nncf/torch/graph/transformations/layout/index", "autoapi/nncf/torch/hardware/config/index", "autoapi/nncf/torch/hardware/fused_patterns/index", "autoapi/nncf/torch/hardware/index", "autoapi/nncf/torch/index", "autoapi/nncf/torch/initialization/index", "autoapi/nncf/torch/knowledge_distillation/algo/index", "autoapi/nncf/torch/knowledge_distillation/index", "autoapi/nncf/torch/knowledge_distillation/knowledge_distillation_handler/index", "autoapi/nncf/torch/knowledge_distillation/knowledge_distillation_loss/index", "autoapi/nncf/torch/layer_utils/index", "autoapi/nncf/torch/layers/index", "autoapi/nncf/torch/model_creation/index", "autoapi/nncf/torch/module_operations/index", "autoapi/nncf/torch/nested_objects_traversal/index", "autoapi/nncf/torch/nncf_module_replacement/index", "autoapi/nncf/torch/nncf_network/index", "autoapi/nncf/torch/pruning/base_algo/index", "autoapi/nncf/torch/pruning/export_utils/index", "autoapi/nncf/torch/pruning/filter_pruning/algo/index", "autoapi/nncf/torch/pruning/filter_pruning/functions/index", "autoapi/nncf/torch/pruning/filter_pruning/global_ranking/evolutionary_optimization/index", "autoapi/nncf/torch/pruning/filter_pruning/global_ranking/index", "autoapi/nncf/torch/pruning/filter_pruning/global_ranking/legr/index", "autoapi/nncf/torch/pruning/filter_pruning/index", "autoapi/nncf/torch/pruning/filter_pruning/layers/index", "autoapi/nncf/torch/pruning/index", "autoapi/nncf/torch/pruning/operations/index", "autoapi/nncf/torch/pruning/structs/index", "autoapi/nncf/torch/pruning/tensor_processor/index", "autoapi/nncf/torch/pruning/utils/index", "autoapi/nncf/torch/quantization/adjust_padding/index", "autoapi/nncf/torch/quantization/algo/index", "autoapi/nncf/torch/quantization/default_quantization/index", "autoapi/nncf/torch/quantization/extensions/index", "autoapi/nncf/torch/quantization/hessian_trace/index", "autoapi/nncf/torch/quantization/index", "autoapi/nncf/torch/quantization/init_precision/index", "autoapi/nncf/torch/quantization/init_range/index", "autoapi/nncf/torch/quantization/layers/index", "autoapi/nncf/torch/quantization/metrics/index", "autoapi/nncf/torch/quantization/precision_constraints/index", "autoapi/nncf/torch/quantization/precision_init/adjacent_quantizers/index", "autoapi/nncf/torch/quantization/precision_init/autoq_init/index", "autoapi/nncf/torch/quantization/precision_init/base_init/index", "autoapi/nncf/torch/quantization/precision_init/bitwidth_graph/index", "autoapi/nncf/torch/quantization/precision_init/compression_ratio/index", "autoapi/nncf/torch/quantization/precision_init/hawq_debug/index", "autoapi/nncf/torch/quantization/precision_init/hawq_init/index", "autoapi/nncf/torch/quantization/precision_init/index", "autoapi/nncf/torch/quantization/precision_init/manual_init/index", "autoapi/nncf/torch/quantization/precision_init/perturbations/index", "autoapi/nncf/torch/quantization/precision_init/traces_order/index", "autoapi/nncf/torch/quantization/quantize/index", "autoapi/nncf/torch/quantization/quantize_functions/index", "autoapi/nncf/torch/quantization/reference/index", "autoapi/nncf/torch/quantization/schedulers/index", "autoapi/nncf/torch/quantization/statistics/index", "autoapi/nncf/torch/quantization/strip/index", "autoapi/nncf/torch/quantization/structs/index", "autoapi/nncf/torch/quantization/translator/index", "autoapi/nncf/torch/sparsity/base_algo/index", "autoapi/nncf/torch/sparsity/collector/index", "autoapi/nncf/torch/sparsity/const/algo/index", "autoapi/nncf/torch/sparsity/const/index", "autoapi/nncf/torch/sparsity/functions/index", "autoapi/nncf/torch/sparsity/index", "autoapi/nncf/torch/sparsity/layers/index", "autoapi/nncf/torch/sparsity/magnitude/algo/index", "autoapi/nncf/torch/sparsity/magnitude/functions/index", "autoapi/nncf/torch/sparsity/magnitude/index", "autoapi/nncf/torch/sparsity/rb/algo/index", "autoapi/nncf/torch/sparsity/rb/functions/index", "autoapi/nncf/torch/sparsity/rb/index", "autoapi/nncf/torch/sparsity/rb/layers/index", "autoapi/nncf/torch/sparsity/rb/loss/index", "autoapi/nncf/torch/statistics/aggregator/index", "autoapi/nncf/torch/statistics/index", "autoapi/nncf/torch/structures/index", "autoapi/nncf/torch/tensor/index", "autoapi/nncf/torch/tensor_statistics/algo/index", "autoapi/nncf/torch/tensor_statistics/collectors/index", "autoapi/nncf/torch/tensor_statistics/index", "autoapi/nncf/torch/tensor_statistics/reduction/index", "autoapi/nncf/torch/tensor_statistics/statistics/index", "autoapi/nncf/torch/utils/index", "autoapi/nncf/version/index", "index"], "filenames": ["_autoapi_templates/index.rst", "_autoapi_templates/python/attribute.rst", "_autoapi_templates/python/class.rst", "_autoapi_templates/python/data.rst", "_autoapi_templates/python/exception.rst", "_autoapi_templates/python/function.rst", "_autoapi_templates/python/method.rst", "_autoapi_templates/python/module.rst", "_autoapi_templates/python/package.rst", "_autoapi_templates/python/property.rst", "autoapi/nncf/api/compression/index.rst", "autoapi/nncf/api/index.rst", "autoapi/nncf/api/statistics/index.rst", "autoapi/nncf/common/accuracy_aware_training/index.rst", "autoapi/nncf/common/accuracy_aware_training/runner/index.rst", "autoapi/nncf/common/accuracy_aware_training/runner_factory/index.rst", "autoapi/nncf/common/accuracy_aware_training/statistics/index.rst", "autoapi/nncf/common/accuracy_aware_training/training_loop/index.rst", "autoapi/nncf/common/api_marker/index.rst", "autoapi/nncf/common/collector/index.rst", "autoapi/nncf/common/composite_compression/index.rst", "autoapi/nncf/common/compression/index.rst", "autoapi/nncf/common/deprecation/index.rst", "autoapi/nncf/common/engine/index.rst", "autoapi/nncf/common/exporter/index.rst", "autoapi/nncf/common/factory/index.rst", "autoapi/nncf/common/graph/definitions/index.rst", "autoapi/nncf/common/graph/graph/index.rst", "autoapi/nncf/common/graph/graph_matching/index.rst", "autoapi/nncf/common/graph/index.rst", "autoapi/nncf/common/graph/layer_attributes/index.rst", "autoapi/nncf/common/graph/model_transformer/index.rst", "autoapi/nncf/common/graph/operator_metatypes/index.rst", "autoapi/nncf/common/graph/patterns/index.rst", "autoapi/nncf/common/graph/patterns/manager/index.rst", "autoapi/nncf/common/graph/patterns/patterns/index.rst", "autoapi/nncf/common/graph/transformations/command_creation/index.rst", "autoapi/nncf/common/graph/transformations/commands/index.rst", "autoapi/nncf/common/graph/transformations/index.rst", "autoapi/nncf/common/graph/transformations/layout/index.rst", "autoapi/nncf/common/graph/utils/index.rst", "autoapi/nncf/common/hardware/config/index.rst", "autoapi/nncf/common/hardware/index.rst", "autoapi/nncf/common/hardware/opset/index.rst", "autoapi/nncf/common/index.rst", "autoapi/nncf/common/initialization/batchnorm_adaptation/index.rst", "autoapi/nncf/common/initialization/dataloader/index.rst", "autoapi/nncf/common/initialization/index.rst", "autoapi/nncf/common/insertion_point_graph/index.rst", "autoapi/nncf/common/logging/index.rst", "autoapi/nncf/common/logging/logger/index.rst", "autoapi/nncf/common/logging/progress_bar/index.rst", "autoapi/nncf/common/pruning/clusterization/index.rst", "autoapi/nncf/common/pruning/index.rst", "autoapi/nncf/common/pruning/mask_propagation/index.rst", "autoapi/nncf/common/pruning/model_analysis/index.rst", "autoapi/nncf/common/pruning/node_selector/index.rst", "autoapi/nncf/common/pruning/operations/index.rst", "autoapi/nncf/common/pruning/schedulers/index.rst", "autoapi/nncf/common/pruning/shape_pruning_processor/index.rst", "autoapi/nncf/common/pruning/statistics/index.rst", "autoapi/nncf/common/pruning/structs/index.rst", "autoapi/nncf/common/pruning/symbolic_mask/index.rst", "autoapi/nncf/common/pruning/tensor_processor/index.rst", "autoapi/nncf/common/pruning/utils/index.rst", "autoapi/nncf/common/pruning/weights_flops_calculator/index.rst", "autoapi/nncf/common/quantization/collectors/index.rst", "autoapi/nncf/common/quantization/config_assignment/index.rst", "autoapi/nncf/common/quantization/index.rst", "autoapi/nncf/common/quantization/initialization/index.rst", "autoapi/nncf/common/quantization/initialization/range/index.rst", "autoapi/nncf/common/quantization/quantizer_propagation/graph/index.rst", "autoapi/nncf/common/quantization/quantizer_propagation/grouping/index.rst", "autoapi/nncf/common/quantization/quantizer_propagation/index.rst", "autoapi/nncf/common/quantization/quantizer_propagation/solver/index.rst", "autoapi/nncf/common/quantization/quantizer_propagation/structs/index.rst", "autoapi/nncf/common/quantization/quantizer_propagation/visualizer/index.rst", "autoapi/nncf/common/quantization/quantizer_removal/index.rst", "autoapi/nncf/common/quantization/quantizer_setup/index.rst", "autoapi/nncf/common/quantization/quantizers/index.rst", "autoapi/nncf/common/quantization/statistics/index.rst", "autoapi/nncf/common/quantization/structs/index.rst", "autoapi/nncf/common/schedulers/index.rst", "autoapi/nncf/common/scopes/index.rst", "autoapi/nncf/common/sparsity/collector/index.rst", "autoapi/nncf/common/sparsity/controller/index.rst", "autoapi/nncf/common/sparsity/index.rst", "autoapi/nncf/common/sparsity/schedulers/index.rst", "autoapi/nncf/common/sparsity/statistics/index.rst", "autoapi/nncf/common/stateful_classes_registry/index.rst", "autoapi/nncf/common/statistics/index.rst", "autoapi/nncf/common/tensor/index.rst", "autoapi/nncf/common/tensor_statistics/aggregator/index.rst", "autoapi/nncf/common/tensor_statistics/collectors/index.rst", "autoapi/nncf/common/tensor_statistics/index.rst", "autoapi/nncf/common/tensor_statistics/reduction/index.rst", "autoapi/nncf/common/tensor_statistics/statistic_point/index.rst", "autoapi/nncf/common/tensor_statistics/statistics/index.rst", "autoapi/nncf/common/utils/backend/index.rst", "autoapi/nncf/common/utils/debug/index.rst", "autoapi/nncf/common/utils/decorators/index.rst", "autoapi/nncf/common/utils/dot_file_rw/index.rst", "autoapi/nncf/common/utils/helpers/index.rst", "autoapi/nncf/common/utils/index.rst", "autoapi/nncf/common/utils/logger/index.rst", "autoapi/nncf/common/utils/os/index.rst", "autoapi/nncf/common/utils/patcher/index.rst", "autoapi/nncf/common/utils/registry/index.rst", "autoapi/nncf/common/utils/tensorboard/index.rst", "autoapi/nncf/common/utils/timer/index.rst", "autoapi/nncf/config/config/index.rst", "autoapi/nncf/config/definitions/index.rst", "autoapi/nncf/config/extractors/index.rst", "autoapi/nncf/config/index.rst", "autoapi/nncf/config/schema/index.rst", "autoapi/nncf/config/schemata/accuracy_aware/index.rst", "autoapi/nncf/config/schemata/algo/binarization/index.rst", "autoapi/nncf/config/schemata/algo/const_sparsity/index.rst", "autoapi/nncf/config/schemata/algo/filter_pruning/index.rst", "autoapi/nncf/config/schemata/algo/index.rst", "autoapi/nncf/config/schemata/algo/knowledge_distillation/index.rst", "autoapi/nncf/config/schemata/algo/magnitude_sparsity/index.rst", "autoapi/nncf/config/schemata/algo/quantization/index.rst", "autoapi/nncf/config/schemata/algo/rb_sparsity/index.rst", "autoapi/nncf/config/schemata/basic/index.rst", "autoapi/nncf/config/schemata/common/compression/index.rst", "autoapi/nncf/config/schemata/common/index.rst", "autoapi/nncf/config/schemata/common/initialization/index.rst", "autoapi/nncf/config/schemata/common/sparsity/index.rst", "autoapi/nncf/config/schemata/common/targeting/index.rst", "autoapi/nncf/config/schemata/defaults/index.rst", "autoapi/nncf/config/schemata/experimental_schema/index.rst", "autoapi/nncf/config/schemata/index.rst", "autoapi/nncf/config/structures/index.rst", "autoapi/nncf/config/telemetry_extractors/index.rst", "autoapi/nncf/config/utils/index.rst", "autoapi/nncf/data/dataset/index.rst", "autoapi/nncf/data/index.rst", "autoapi/nncf/definitions/index.rst", "autoapi/nncf/experimental/common/graph/index.rst", "autoapi/nncf/experimental/common/graph/netron/index.rst", "autoapi/nncf/experimental/common/index.rst", "autoapi/nncf/experimental/common/pruning/block_hierarchy/index.rst", "autoapi/nncf/experimental/common/pruning/index.rst", "autoapi/nncf/experimental/common/pruning/nodes_grouping/index.rst", "autoapi/nncf/experimental/common/pruning/operations/index.rst", "autoapi/nncf/experimental/common/pruning/propagation_data/index.rst", "autoapi/nncf/experimental/common/tensor_statistics/collectors/index.rst", "autoapi/nncf/experimental/common/tensor_statistics/index.rst", "autoapi/nncf/experimental/index.rst", "autoapi/nncf/experimental/openvino/index.rst", "autoapi/nncf/experimental/openvino/quantization/index.rst", "autoapi/nncf/experimental/openvino/quantization/quantize/index.rst", "autoapi/nncf/experimental/openvino_native/engine/index.rst", "autoapi/nncf/experimental/openvino_native/graph/index.rst", "autoapi/nncf/experimental/openvino_native/graph/metatypes/common/index.rst", "autoapi/nncf/experimental/openvino_native/graph/metatypes/index.rst", "autoapi/nncf/experimental/openvino_native/graph/metatypes/openvino_metatypes/index.rst", "autoapi/nncf/experimental/openvino_native/graph/model_transformer/index.rst", "autoapi/nncf/experimental/openvino_native/graph/nncf_graph_builder/index.rst", "autoapi/nncf/experimental/openvino_native/graph/node_utils/index.rst", "autoapi/nncf/experimental/openvino_native/graph/transformations/command_creation/index.rst", "autoapi/nncf/experimental/openvino_native/graph/transformations/commands/index.rst", "autoapi/nncf/experimental/openvino_native/graph/transformations/index.rst", "autoapi/nncf/experimental/openvino_native/hardware/config/index.rst", "autoapi/nncf/experimental/openvino_native/hardware/fused_patterns/index.rst", "autoapi/nncf/experimental/openvino_native/hardware/index.rst", "autoapi/nncf/experimental/openvino_native/hardware/pattern_operations/index.rst", "autoapi/nncf/experimental/openvino_native/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/bias_correction/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/bias_correction/openvino_backend/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/fast_bias_correction/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/fast_bias_correction/openvino_backend/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/min_max/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/algorithms/min_max/openvino_backend/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/default_quantization/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/index.rst", "autoapi/nncf/experimental/openvino_native/quantization/quantize/index.rst", "autoapi/nncf/experimental/openvino_native/statistics/aggregator/index.rst", "autoapi/nncf/experimental/openvino_native/statistics/collectors/index.rst", "autoapi/nncf/experimental/openvino_native/statistics/index.rst", "autoapi/nncf/experimental/openvino_native/statistics/statistics/index.rst", "autoapi/nncf/experimental/openvino_native/tensor/index.rst", "autoapi/nncf/experimental/tensorflow/context/index.rst", "autoapi/nncf/experimental/tensorflow/graph/argprovider/index.rst", "autoapi/nncf/experimental/tensorflow/graph/converter/index.rst", "autoapi/nncf/experimental/tensorflow/graph/index.rst", "autoapi/nncf/experimental/tensorflow/graph/model_transformer/index.rst", "autoapi/nncf/experimental/tensorflow/graph/node_attributes/index.rst", "autoapi/nncf/experimental/tensorflow/graph/transformations/commands/index.rst", "autoapi/nncf/experimental/tensorflow/graph/transformations/index.rst", "autoapi/nncf/experimental/tensorflow/graph/transformations/layout/index.rst", "autoapi/nncf/experimental/tensorflow/index.rst", "autoapi/nncf/experimental/tensorflow/nncf_network/index.rst", "autoapi/nncf/experimental/tensorflow/patch_tf/index.rst", "autoapi/nncf/experimental/tensorflow/quantization/algorithm/index.rst", "autoapi/nncf/experimental/tensorflow/quantization/index.rst", "autoapi/nncf/experimental/tensorflow/quantization/init_range/index.rst", "autoapi/nncf/experimental/tensorflow/quantization/quantizers/index.rst", "autoapi/nncf/experimental/tensorflow/scope/index.rst", "autoapi/nncf/experimental/torch/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/base_handler/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elastic_depth/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elastic_kernel/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elastic_width/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elasticity_builder/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elasticity_controller/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/elasticity_dim/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/filter_reorder/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/multi_elasticity_handler/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/elasticity/visualization/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/search/evaluator/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/search/evaluator_handler/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/search/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/search/search/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/base_training/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/lr_scheduler/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/model_creator_helpers/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/progressive_shrinking_builder/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/progressive_shrinking_controller/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/scheduler/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/stage_descriptor/index.rst", "autoapi/nncf/experimental/torch/nas/bootstrapNAS/training/training_algorithm/index.rst", "autoapi/nncf/experimental/torch/nas/index.rst", "autoapi/nncf/experimental/torch/pruning/index.rst", "autoapi/nncf/experimental/torch/pruning/operations/index.rst", "autoapi/nncf/experimental/torch/quantization/index.rst", "autoapi/nncf/experimental/torch/quantization/quantize/index.rst", "autoapi/nncf/experimental/torch/search_building_blocks/index.rst", "autoapi/nncf/experimental/torch/search_building_blocks/search_blocks/index.rst", "autoapi/nncf/experimental/torch/search_building_blocks/search_graph/index.rst", "autoapi/nncf/experimental/torch/sparsity/index.rst", "autoapi/nncf/experimental/torch/sparsity/movement/algo/index.rst", "autoapi/nncf/experimental/torch/sparsity/movement/functions/index.rst", "autoapi/nncf/experimental/torch/sparsity/movement/index.rst", "autoapi/nncf/experimental/torch/sparsity/movement/layers/index.rst", "autoapi/nncf/experimental/torch/sparsity/movement/loss/index.rst", "autoapi/nncf/experimental/torch/sparsity/movement/scheduler/index.rst", "autoapi/nncf/experimental/torch/sparsity/movement/structured_mask_handler/index.rst", "autoapi/nncf/index.rst", "autoapi/nncf/onnx/engine/index.rst", "autoapi/nncf/onnx/graph/index.rst", "autoapi/nncf/onnx/graph/metatypes/index.rst", "autoapi/nncf/onnx/graph/metatypes/onnx_metatypes/index.rst", "autoapi/nncf/onnx/graph/model_transformer/index.rst", "autoapi/nncf/onnx/graph/nncf_graph_builder/index.rst", "autoapi/nncf/onnx/graph/node_utils/index.rst", "autoapi/nncf/onnx/graph/onnx_graph/index.rst", "autoapi/nncf/onnx/graph/transformations/command_creation/index.rst", "autoapi/nncf/onnx/graph/transformations/commands/index.rst", "autoapi/nncf/onnx/graph/transformations/index.rst", "autoapi/nncf/onnx/hardware/config/index.rst", "autoapi/nncf/onnx/hardware/fused_patterns/index.rst", "autoapi/nncf/onnx/hardware/index.rst", "autoapi/nncf/onnx/hardware/pattern_operations/index.rst", "autoapi/nncf/onnx/index.rst", "autoapi/nncf/onnx/quantization/default_quantization/index.rst", "autoapi/nncf/onnx/quantization/index.rst", "autoapi/nncf/onnx/quantization/quantize/index.rst", "autoapi/nncf/onnx/quantization/quantizer_parameters/index.rst", "autoapi/nncf/onnx/statistics/aggregator/index.rst", "autoapi/nncf/onnx/statistics/collectors/index.rst", "autoapi/nncf/onnx/statistics/index.rst", "autoapi/nncf/onnx/statistics/statistics/index.rst", "autoapi/nncf/onnx/tensor/index.rst", "autoapi/nncf/openvino/engine/index.rst", "autoapi/nncf/openvino/index.rst", "autoapi/nncf/openvino/quantization/accuracy_aware/index.rst", "autoapi/nncf/openvino/quantization/index.rst", "autoapi/nncf/openvino/quantization/quantize/index.rst", "autoapi/nncf/parameters/index.rst", "autoapi/nncf/quantization/algorithms/accuracy_control/algorithm/index.rst", "autoapi/nncf/quantization/algorithms/accuracy_control/backend/index.rst", "autoapi/nncf/quantization/algorithms/accuracy_control/index.rst", "autoapi/nncf/quantization/algorithms/accuracy_control/openvino_backend/index.rst", "autoapi/nncf/quantization/algorithms/accuracy_control/rank_functions/index.rst", "autoapi/nncf/quantization/algorithms/accuracy_control/ranker/index.rst", "autoapi/nncf/quantization/algorithms/algorithm/index.rst", "autoapi/nncf/quantization/algorithms/bias_correction/algorithm/index.rst", "autoapi/nncf/quantization/algorithms/bias_correction/backend/index.rst", "autoapi/nncf/quantization/algorithms/bias_correction/index.rst", "autoapi/nncf/quantization/algorithms/bias_correction/onnx_backend/index.rst", "autoapi/nncf/quantization/algorithms/definitions/index.rst", "autoapi/nncf/quantization/algorithms/fast_bias_correction/algorithm/index.rst", "autoapi/nncf/quantization/algorithms/fast_bias_correction/backend/index.rst", "autoapi/nncf/quantization/algorithms/fast_bias_correction/index.rst", "autoapi/nncf/quantization/algorithms/fast_bias_correction/onnx_backend/index.rst", "autoapi/nncf/quantization/algorithms/index.rst", "autoapi/nncf/quantization/algorithms/min_max/algorithm/index.rst", "autoapi/nncf/quantization/algorithms/min_max/backend/index.rst", "autoapi/nncf/quantization/algorithms/min_max/index.rst", "autoapi/nncf/quantization/algorithms/min_max/onnx_backend/index.rst", "autoapi/nncf/quantization/algorithms/min_max/torch_backend/index.rst", "autoapi/nncf/quantization/algorithms/post_training/algorithm/index.rst", "autoapi/nncf/quantization/algorithms/post_training/index.rst", "autoapi/nncf/quantization/fake_quantize/index.rst", "autoapi/nncf/quantization/index.rst", "autoapi/nncf/quantization/passes/index.rst", "autoapi/nncf/quantization/quantize/index.rst", "autoapi/nncf/quantization/telemetry_extractors/index.rst", "autoapi/nncf/scopes/index.rst", "autoapi/nncf/telemetry/decorator/index.rst", "autoapi/nncf/telemetry/events/index.rst", "autoapi/nncf/telemetry/extractors/index.rst", "autoapi/nncf/telemetry/index.rst", "autoapi/nncf/telemetry/wrapper/index.rst", "autoapi/nncf/tensorflow/accuracy_aware_training/index.rst", "autoapi/nncf/tensorflow/accuracy_aware_training/keras_model_utils/index.rst", "autoapi/nncf/tensorflow/accuracy_aware_training/runner/index.rst", "autoapi/nncf/tensorflow/algorithm_selector/index.rst", "autoapi/nncf/tensorflow/api/composite_compression/index.rst", "autoapi/nncf/tensorflow/api/compression/index.rst", "autoapi/nncf/tensorflow/api/index.rst", "autoapi/nncf/tensorflow/batchnorm_adaptation/index.rst", "autoapi/nncf/tensorflow/callbacks/checkpoint_callback/index.rst", "autoapi/nncf/tensorflow/callbacks/index.rst", "autoapi/nncf/tensorflow/callbacks/statistics_callback/index.rst", "autoapi/nncf/tensorflow/exporter/index.rst", "autoapi/nncf/tensorflow/functions/index.rst", "autoapi/nncf/tensorflow/graph/converter/index.rst", "autoapi/nncf/tensorflow/graph/index.rst", "autoapi/nncf/tensorflow/graph/metatypes/common/index.rst", "autoapi/nncf/tensorflow/graph/metatypes/index.rst", "autoapi/nncf/tensorflow/graph/metatypes/keras_layers/index.rst", "autoapi/nncf/tensorflow/graph/metatypes/matcher/index.rst", "autoapi/nncf/tensorflow/graph/metatypes/tf_ops/index.rst", "autoapi/nncf/tensorflow/graph/model_transformer/index.rst", "autoapi/nncf/tensorflow/graph/pattern_operations/index.rst", "autoapi/nncf/tensorflow/graph/patterns/index.rst", "autoapi/nncf/tensorflow/graph/transformations/commands/index.rst", "autoapi/nncf/tensorflow/graph/transformations/index.rst", "autoapi/nncf/tensorflow/graph/transformations/layout/index.rst", "autoapi/nncf/tensorflow/graph/utils/index.rst", "autoapi/nncf/tensorflow/hardware/config/index.rst", "autoapi/nncf/tensorflow/hardware/fused_patterns/index.rst", "autoapi/nncf/tensorflow/hardware/index.rst", "autoapi/nncf/tensorflow/helpers/callback_creation/index.rst", "autoapi/nncf/tensorflow/helpers/index.rst", "autoapi/nncf/tensorflow/helpers/model_creation/index.rst", "autoapi/nncf/tensorflow/helpers/model_manager/index.rst", "autoapi/nncf/tensorflow/helpers/utils/index.rst", "autoapi/nncf/tensorflow/index.rst", "autoapi/nncf/tensorflow/initialization/index.rst", "autoapi/nncf/tensorflow/layers/custom_objects/index.rst", "autoapi/nncf/tensorflow/layers/data_layout/index.rst", "autoapi/nncf/tensorflow/layers/index.rst", "autoapi/nncf/tensorflow/layers/operation/index.rst", "autoapi/nncf/tensorflow/layers/wrapper/index.rst", "autoapi/nncf/tensorflow/loss/index.rst", "autoapi/nncf/tensorflow/pruning/base_algorithm/index.rst", "autoapi/nncf/tensorflow/pruning/callbacks/index.rst", "autoapi/nncf/tensorflow/pruning/filter_pruning/algorithm/index.rst", "autoapi/nncf/tensorflow/pruning/filter_pruning/functions/index.rst", "autoapi/nncf/tensorflow/pruning/filter_pruning/index.rst", "autoapi/nncf/tensorflow/pruning/index.rst", "autoapi/nncf/tensorflow/pruning/operations/index.rst", "autoapi/nncf/tensorflow/pruning/tensor_processor/index.rst", "autoapi/nncf/tensorflow/pruning/utils/index.rst", "autoapi/nncf/tensorflow/quantization/algorithm/index.rst", "autoapi/nncf/tensorflow/quantization/collectors/index.rst", "autoapi/nncf/tensorflow/quantization/default_quantization/index.rst", "autoapi/nncf/tensorflow/quantization/functions/index.rst", "autoapi/nncf/tensorflow/quantization/index.rst", "autoapi/nncf/tensorflow/quantization/init_range/index.rst", "autoapi/nncf/tensorflow/quantization/layers/index.rst", "autoapi/nncf/tensorflow/quantization/quantize/index.rst", "autoapi/nncf/tensorflow/quantization/quantizers/index.rst", "autoapi/nncf/tensorflow/quantization/utils/index.rst", "autoapi/nncf/tensorflow/sparsity/base_algorithm/index.rst", "autoapi/nncf/tensorflow/sparsity/callbacks/index.rst", "autoapi/nncf/tensorflow/sparsity/collector/index.rst", "autoapi/nncf/tensorflow/sparsity/index.rst", "autoapi/nncf/tensorflow/sparsity/magnitude/algorithm/index.rst", "autoapi/nncf/tensorflow/sparsity/magnitude/functions/index.rst", "autoapi/nncf/tensorflow/sparsity/magnitude/index.rst", "autoapi/nncf/tensorflow/sparsity/magnitude/operation/index.rst", "autoapi/nncf/tensorflow/sparsity/rb/algorithm/index.rst", "autoapi/nncf/tensorflow/sparsity/rb/functions/index.rst", "autoapi/nncf/tensorflow/sparsity/rb/index.rst", "autoapi/nncf/tensorflow/sparsity/rb/loss/index.rst", "autoapi/nncf/tensorflow/sparsity/rb/operation/index.rst", "autoapi/nncf/tensorflow/sparsity/utils/index.rst", "autoapi/nncf/tensorflow/tensor/index.rst", "autoapi/nncf/tensorflow/tensor_statistics/collectors/index.rst", "autoapi/nncf/tensorflow/tensor_statistics/index.rst", "autoapi/nncf/tensorflow/tensor_statistics/reduction/index.rst", "autoapi/nncf/tensorflow/tensor_statistics/statistics/index.rst", "autoapi/nncf/tensorflow/tf_internals/index.rst", "autoapi/nncf/tensorflow/utils/hook_handle/index.rst", "autoapi/nncf/tensorflow/utils/index.rst", "autoapi/nncf/tensorflow/utils/node/index.rst", "autoapi/nncf/tensorflow/utils/scopes_handle/index.rst", "autoapi/nncf/tensorflow/utils/state/index.rst", "autoapi/nncf/torch/accuracy_aware_training/index.rst", "autoapi/nncf/torch/accuracy_aware_training/runner/index.rst", "autoapi/nncf/torch/accuracy_aware_training/utils/index.rst", "autoapi/nncf/torch/algo_selector/index.rst", "autoapi/nncf/torch/automl/agent/ddpg/ddpg/index.rst", "autoapi/nncf/torch/automl/agent/ddpg/index.rst", "autoapi/nncf/torch/automl/agent/ddpg/memory/index.rst", "autoapi/nncf/torch/automl/agent/index.rst", "autoapi/nncf/torch/automl/environment/index.rst", "autoapi/nncf/torch/automl/environment/quantization_env/index.rst", "autoapi/nncf/torch/automl/index.rst", "autoapi/nncf/torch/batchnorm_adaptation/index.rst", "autoapi/nncf/torch/binarization/algo/index.rst", "autoapi/nncf/torch/binarization/binarize_functions/index.rst", "autoapi/nncf/torch/binarization/extensions/index.rst", "autoapi/nncf/torch/binarization/index.rst", "autoapi/nncf/torch/binarization/layers/index.rst", "autoapi/nncf/torch/binarization/reference/index.rst", "autoapi/nncf/torch/checkpoint_loading/index.rst", "autoapi/nncf/torch/composite_compression/index.rst", "autoapi/nncf/torch/compression_method_api/index.rst", "autoapi/nncf/torch/debug/index.rst", "autoapi/nncf/torch/dynamic_graph/context/index.rst", "autoapi/nncf/torch/dynamic_graph/graph/index.rst", "autoapi/nncf/torch/dynamic_graph/graph_tracer/index.rst", "autoapi/nncf/torch/dynamic_graph/index.rst", "autoapi/nncf/torch/dynamic_graph/io_handling/index.rst", "autoapi/nncf/torch/dynamic_graph/layer_attributes_handlers/index.rst", "autoapi/nncf/torch/dynamic_graph/op_input_processing/index.rst", "autoapi/nncf/torch/dynamic_graph/operation_address/index.rst", "autoapi/nncf/torch/dynamic_graph/patch_pytorch/index.rst", "autoapi/nncf/torch/dynamic_graph/scope/index.rst", "autoapi/nncf/torch/dynamic_graph/scope_access/index.rst", "autoapi/nncf/torch/dynamic_graph/structs/index.rst", "autoapi/nncf/torch/dynamic_graph/trace_functions/index.rst", "autoapi/nncf/torch/dynamic_graph/trace_tensor/index.rst", "autoapi/nncf/torch/dynamic_graph/wrappers/index.rst", "autoapi/nncf/torch/engine/index.rst", "autoapi/nncf/torch/exporter/index.rst", "autoapi/nncf/torch/extensions/index.rst", "autoapi/nncf/torch/functions/index.rst", "autoapi/nncf/torch/graph/graph/index.rst", "autoapi/nncf/torch/graph/graph_builder/index.rst", "autoapi/nncf/torch/graph/index.rst", "autoapi/nncf/torch/graph/operator_metatypes/index.rst", "autoapi/nncf/torch/graph/pattern_operations/index.rst", "autoapi/nncf/torch/graph/transformations/commands/index.rst", "autoapi/nncf/torch/graph/transformations/index.rst", "autoapi/nncf/torch/graph/transformations/layout/index.rst", "autoapi/nncf/torch/hardware/config/index.rst", "autoapi/nncf/torch/hardware/fused_patterns/index.rst", "autoapi/nncf/torch/hardware/index.rst", "autoapi/nncf/torch/index.rst", "autoapi/nncf/torch/initialization/index.rst", "autoapi/nncf/torch/knowledge_distillation/algo/index.rst", "autoapi/nncf/torch/knowledge_distillation/index.rst", "autoapi/nncf/torch/knowledge_distillation/knowledge_distillation_handler/index.rst", "autoapi/nncf/torch/knowledge_distillation/knowledge_distillation_loss/index.rst", "autoapi/nncf/torch/layer_utils/index.rst", "autoapi/nncf/torch/layers/index.rst", "autoapi/nncf/torch/model_creation/index.rst", "autoapi/nncf/torch/module_operations/index.rst", "autoapi/nncf/torch/nested_objects_traversal/index.rst", "autoapi/nncf/torch/nncf_module_replacement/index.rst", "autoapi/nncf/torch/nncf_network/index.rst", "autoapi/nncf/torch/pruning/base_algo/index.rst", "autoapi/nncf/torch/pruning/export_utils/index.rst", "autoapi/nncf/torch/pruning/filter_pruning/algo/index.rst", "autoapi/nncf/torch/pruning/filter_pruning/functions/index.rst", "autoapi/nncf/torch/pruning/filter_pruning/global_ranking/evolutionary_optimization/index.rst", "autoapi/nncf/torch/pruning/filter_pruning/global_ranking/index.rst", "autoapi/nncf/torch/pruning/filter_pruning/global_ranking/legr/index.rst", "autoapi/nncf/torch/pruning/filter_pruning/index.rst", "autoapi/nncf/torch/pruning/filter_pruning/layers/index.rst", "autoapi/nncf/torch/pruning/index.rst", "autoapi/nncf/torch/pruning/operations/index.rst", "autoapi/nncf/torch/pruning/structs/index.rst", "autoapi/nncf/torch/pruning/tensor_processor/index.rst", "autoapi/nncf/torch/pruning/utils/index.rst", "autoapi/nncf/torch/quantization/adjust_padding/index.rst", "autoapi/nncf/torch/quantization/algo/index.rst", "autoapi/nncf/torch/quantization/default_quantization/index.rst", "autoapi/nncf/torch/quantization/extensions/index.rst", "autoapi/nncf/torch/quantization/hessian_trace/index.rst", "autoapi/nncf/torch/quantization/index.rst", "autoapi/nncf/torch/quantization/init_precision/index.rst", "autoapi/nncf/torch/quantization/init_range/index.rst", "autoapi/nncf/torch/quantization/layers/index.rst", "autoapi/nncf/torch/quantization/metrics/index.rst", "autoapi/nncf/torch/quantization/precision_constraints/index.rst", "autoapi/nncf/torch/quantization/precision_init/adjacent_quantizers/index.rst", "autoapi/nncf/torch/quantization/precision_init/autoq_init/index.rst", "autoapi/nncf/torch/quantization/precision_init/base_init/index.rst", "autoapi/nncf/torch/quantization/precision_init/bitwidth_graph/index.rst", "autoapi/nncf/torch/quantization/precision_init/compression_ratio/index.rst", "autoapi/nncf/torch/quantization/precision_init/hawq_debug/index.rst", "autoapi/nncf/torch/quantization/precision_init/hawq_init/index.rst", "autoapi/nncf/torch/quantization/precision_init/index.rst", "autoapi/nncf/torch/quantization/precision_init/manual_init/index.rst", "autoapi/nncf/torch/quantization/precision_init/perturbations/index.rst", "autoapi/nncf/torch/quantization/precision_init/traces_order/index.rst", "autoapi/nncf/torch/quantization/quantize/index.rst", "autoapi/nncf/torch/quantization/quantize_functions/index.rst", "autoapi/nncf/torch/quantization/reference/index.rst", "autoapi/nncf/torch/quantization/schedulers/index.rst", "autoapi/nncf/torch/quantization/statistics/index.rst", "autoapi/nncf/torch/quantization/strip/index.rst", "autoapi/nncf/torch/quantization/structs/index.rst", "autoapi/nncf/torch/quantization/translator/index.rst", "autoapi/nncf/torch/sparsity/base_algo/index.rst", "autoapi/nncf/torch/sparsity/collector/index.rst", "autoapi/nncf/torch/sparsity/const/algo/index.rst", "autoapi/nncf/torch/sparsity/const/index.rst", "autoapi/nncf/torch/sparsity/functions/index.rst", "autoapi/nncf/torch/sparsity/index.rst", "autoapi/nncf/torch/sparsity/layers/index.rst", "autoapi/nncf/torch/sparsity/magnitude/algo/index.rst", "autoapi/nncf/torch/sparsity/magnitude/functions/index.rst", "autoapi/nncf/torch/sparsity/magnitude/index.rst", "autoapi/nncf/torch/sparsity/rb/algo/index.rst", "autoapi/nncf/torch/sparsity/rb/functions/index.rst", "autoapi/nncf/torch/sparsity/rb/index.rst", "autoapi/nncf/torch/sparsity/rb/layers/index.rst", "autoapi/nncf/torch/sparsity/rb/loss/index.rst", "autoapi/nncf/torch/statistics/aggregator/index.rst", "autoapi/nncf/torch/statistics/index.rst", "autoapi/nncf/torch/structures/index.rst", "autoapi/nncf/torch/tensor/index.rst", "autoapi/nncf/torch/tensor_statistics/algo/index.rst", "autoapi/nncf/torch/tensor_statistics/collectors/index.rst", "autoapi/nncf/torch/tensor_statistics/index.rst", "autoapi/nncf/torch/tensor_statistics/reduction/index.rst", "autoapi/nncf/torch/tensor_statistics/statistics/index.rst", "autoapi/nncf/torch/utils/index.rst", "autoapi/nncf/version/index.rst", "index.rst"], "titles": ["NNCF API Reference", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.api.compression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.api</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.api.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.accuracy_aware_training</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.accuracy_aware_training.runner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.accuracy_aware_training.runner_factory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.accuracy_aware_training.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.accuracy_aware_training.training_loop</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.api_marker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.collector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.composite_compression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.compression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.deprecation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.exporter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.factory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.definitions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.graph_matching</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.layer_attributes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.model_transformer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.operator_metatypes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.patterns.manager</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.patterns.patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.transformations.command_creation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.transformations.commands</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.transformations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.transformations.layout</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.graph.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.hardware.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.hardware</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.hardware.opset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.initialization.batchnorm_adaptation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.initialization.dataloader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.initialization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.insertion_point_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.logging</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.logging.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.logging.progress_bar</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.clusterization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.mask_propagation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.model_analysis</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.node_selector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.schedulers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.shape_pruning_processor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.structs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.symbolic_mask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.tensor_processor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.pruning.weights_flops_calculator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.collectors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.config_assignment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.initialization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.initialization.range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.quantizer_propagation.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.quantizer_propagation.grouping</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.quantizer_propagation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.quantizer_propagation.solver</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.quantizer_propagation.structs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.quantizer_propagation.visualizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.quantizer_removal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.quantizer_setup</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.quantizers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.quantization.structs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.schedulers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.scopes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.sparsity.collector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.sparsity.controller</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.sparsity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.sparsity.schedulers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.sparsity.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.stateful_classes_registry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.tensor_statistics.aggregator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.tensor_statistics.collectors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.tensor_statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.tensor_statistics.reduction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.tensor_statistics.statistic_point</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.tensor_statistics.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.debug</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.decorators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.dot_file_rw</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.helpers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.os</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.patcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.registry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.tensorboard</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.common.utils.timer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.definitions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schema</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.accuracy_aware</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.algo.binarization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.algo.const_sparsity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.algo.filter_pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.algo.knowledge_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.algo.magnitude_sparsity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.algo.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.algo.rb_sparsity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.basic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.common.compression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.common.initialization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.common.sparsity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.common.targeting</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.defaults</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata.experimental_schema</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.schemata</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.structures</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.telemetry_extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.config.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.data.dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.definitions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.common.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.common.graph.netron</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.common.pruning.block_hierarchy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.common.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.common.pruning.nodes_grouping</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.common.pruning.operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.common.pruning.propagation_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.common.tensor_statistics.collectors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.common.tensor_statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino.quantization.quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph.metatypes.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph.metatypes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph.metatypes.openvino_metatypes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph.model_transformer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph.nncf_graph_builder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph.node_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph.transformations.command_creation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph.transformations.commands</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.graph.transformations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.hardware.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.hardware.fused_patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.hardware</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.hardware.pattern_operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization.algorithms.bias_correction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization.algorithms.bias_correction.openvino_backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction.openvino_backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization.algorithms</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization.algorithms.min_max</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization.algorithms.min_max.openvino_backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization.default_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.quantization.quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.statistics.aggregator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.statistics.collectors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.statistics.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.openvino_native.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.context</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.graph.argprovider</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.graph.converter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.graph.model_transformer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.graph.node_attributes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.graph.transformations.commands</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.graph.transformations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.graph.transformations.layout</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.nncf_network</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.patch_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.quantization.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.quantization.init_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.quantization.quantizers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.tensorflow.scope</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.base_handler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_depth</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_kernel</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_width</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_builder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_controller</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_dim</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.filter_reorder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.multi_elasticity_handler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.elasticity.visualization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.search.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.search.evaluator_handler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.search</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.search.search</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.training.base_training</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.training</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.training.lr_scheduler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.training.model_creator_helpers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_builder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_controller</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.training.scheduler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.training.stage_descriptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas.bootstrapNAS.training.training_algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.pruning.operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.quantization.quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.search_building_blocks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.search_building_blocks.search_blocks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.search_building_blocks.search_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.sparsity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.sparsity.movement.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.sparsity.movement.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.sparsity.movement</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.sparsity.movement.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.sparsity.movement.loss</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.sparsity.movement.scheduler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.experimental.torch.sparsity.movement.structured_mask_handler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph.metatypes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph.metatypes.onnx_metatypes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph.model_transformer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph.nncf_graph_builder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph.node_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph.onnx_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph.transformations.command_creation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph.transformations.commands</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.graph.transformations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.hardware.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.hardware.fused_patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.hardware</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.hardware.pattern_operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.quantization.default_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.quantization.quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.quantization.quantizer_parameters</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.statistics.aggregator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.statistics.collectors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.statistics.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.onnx.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.openvino.engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.openvino</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.openvino.quantization.accuracy_aware</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.openvino.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.openvino.quantization.quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.parameters</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.accuracy_control.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.accuracy_control.backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.accuracy_control</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.accuracy_control.openvino_backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.accuracy_control.rank_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.accuracy_control.ranker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.bias_correction.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.bias_correction.backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.bias_correction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.bias_correction.onnx_backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.definitions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.fast_bias_correction.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.fast_bias_correction.backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.fast_bias_correction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.fast_bias_correction.onnx_backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.min_max.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.min_max.backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.min_max</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.min_max.onnx_backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.min_max.torch_backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.post_training.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.algorithms.post_training</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.fake_quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.passes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.quantization.telemetry_extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.scopes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.telemetry.decorator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.telemetry.events</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.telemetry.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.telemetry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.telemetry.wrapper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.accuracy_aware_training</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.accuracy_aware_training.keras_model_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.accuracy_aware_training.runner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.algorithm_selector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.api.composite_compression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.api.compression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.api</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.batchnorm_adaptation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.callbacks.checkpoint_callback</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.callbacks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.callbacks.statistics_callback</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.exporter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.converter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.metatypes.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.metatypes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.metatypes.keras_layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.metatypes.matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.metatypes.tf_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.model_transformer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.pattern_operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.transformations.commands</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.transformations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.transformations.layout</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.graph.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.hardware.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.hardware.fused_patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.hardware</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.helpers.callback_creation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.helpers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.helpers.model_creation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.helpers.model_manager</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.helpers.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.initialization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.layers.custom_objects</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.layers.data_layout</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.layers.operation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.layers.wrapper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.loss</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.pruning.base_algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.pruning.callbacks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.pruning.filter_pruning.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.pruning.filter_pruning.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.pruning.filter_pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.pruning.operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.pruning.tensor_processor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.pruning.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization.collectors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization.default_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization.init_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization.quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization.quantizers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.quantization.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.base_algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.callbacks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.collector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.magnitude.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.magnitude.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.magnitude</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.magnitude.operation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.rb.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.rb.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.rb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.rb.loss</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.rb.operation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.sparsity.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.tensor_statistics.collectors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.tensor_statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.tensor_statistics.reduction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.tensor_statistics.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.tf_internals</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.utils.hook_handle</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.utils.node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.utils.scopes_handle</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.tensorflow.utils.state</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.accuracy_aware_training</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.accuracy_aware_training.runner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.accuracy_aware_training.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.algo_selector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.automl.agent.ddpg.ddpg</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.automl.agent.ddpg</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.automl.agent.ddpg.memory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.automl.agent</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.automl.environment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.automl.environment.quantization_env</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.automl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.batchnorm_adaptation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.binarization.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.binarization.binarize_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.binarization.extensions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.binarization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.binarization.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.binarization.reference</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.checkpoint_loading</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.composite_compression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.compression_method_api</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.debug</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.context</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.graph_tracer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.io_handling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.layer_attributes_handlers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.op_input_processing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.operation_address</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.patch_pytorch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.scope</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.scope_access</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.structs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.trace_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.trace_tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.dynamic_graph.wrappers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.exporter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.extensions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.graph.graph_builder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.graph.operator_metatypes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.graph.pattern_operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.graph.transformations.commands</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.graph.transformations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.graph.transformations.layout</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.hardware.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.hardware.fused_patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.hardware</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.initialization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.knowledge_distillation.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.knowledge_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.knowledge_distillation.knowledge_distillation_handler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.knowledge_distillation.knowledge_distillation_loss</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.layer_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.model_creation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.module_operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.nested_objects_traversal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.nncf_module_replacement</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.nncf_network</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.base_algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.export_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.filter_pruning.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.filter_pruning.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.filter_pruning.global_ranking.evolutionary_optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.filter_pruning.global_ranking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.filter_pruning.global_ranking.legr</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.filter_pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.filter_pruning.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.operations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.structs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.tensor_processor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.pruning.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.adjust_padding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.default_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.extensions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.hessian_trace</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.init_precision</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.init_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_constraints</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.adjacent_quantizers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.autoq_init</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.base_init</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.bitwidth_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.compression_ratio</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.hawq_debug</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.hawq_init</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.manual_init</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.perturbations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.precision_init.traces_order</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.quantize_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.reference</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.schedulers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.strip</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.structs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.quantization.translator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.base_algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.collector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.const.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.const</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.magnitude.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.magnitude.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.magnitude</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.rb.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.rb.functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.rb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.rb.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.sparsity.rb.loss</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.statistics.aggregator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.structures</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.tensor_statistics.algo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.tensor_statistics.collectors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.tensor_statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.tensor_statistics.reduction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.tensor_statistics.statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.torch.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nncf.version</span></code>", "NNCF documentation"], "terms": {"extend": [1, 4, 8, 243, 417], "python": [1, 4, 8, 46], "data": [1, 7, 46, 243, 345, 449, 523], "rst": [1, 4, 7, 8], "obj": [2, 3, 5, 6, 7, 9], "displai": [2, 3, 5, 6, 7, 9], "py": [2, 3, 5, 6, 9], "type": [2, 3, 7, 9, 243, 523], "short_nam": [2, 5, 6, 7, 9], "arg": [2, 5, 6, 243, 449, 523], "endif": [2, 3, 5, 6, 7, 9], "return_annot": [2, 5, 6], "overload": [2, 5, 6], "length": [2, 7], "endfor": [2, 5, 6, 7, 9], "base": [2, 46, 133, 243, 345, 355, 362, 376, 380, 451, 464, 477, 506, 508, 513, 516, 523], "show": [2, 3, 7], "inherit": [2, 133], "autoapi_opt": [2, 7], "link_obj": 2, "loop": [2, 345], "last": 2, "diagram": 2, "object": [2, 243, 345, 449, 523], "autoapi": [2, 7], "full_nam": 2, "part": 2, "1": [2, 3, 7], "privat": 2, "member": 2, "docstr": [2, 3, 5, 6, 7, 9, 417], "indent": [2, 3, 5, 6, 7, 9], "3": [2, 3, 5, 6, 7, 9], "set": [2, 7, 243, 376, 380, 464, 477, 508, 513, 516], "visible_class": [2, 7], "class": [2, 4, 7, 532], "selectattr": [2, 7], "list": [2, 7, 243, 355, 362, 380, 449, 464, 506, 508, 513, 516], "els": [2, 3, 6, 7], "rejectattr": [2, 7], "klass": [2, 7], "render": [2, 7], "visible_properti": 2, "properti": [2, 5, 6, 9], "visible_attribut": [2, 7], "attribut": [2, 7], "visible_method": 2, "method": [2, 6, 243, 345, 362, 376, 380, 417, 449, 464, 477, 506, 508, 513, 516], "name": [3, 7, 243, 449], "annot": [3, 9], "i": [3, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "none": [3, 5, 6, 7, 133, 243, 345, 449, 464, 477, 513, 516, 523], "valu": [3, 243, 464], "string": 3, "splitlin": 3, "count": 3, "multilin": 3, "width": 3, "8": 3, "blank": 3, "true": [3, 243, 345, 376, 449, 464, 513], "r": 3, "truncat": 3, "100": 3, "function": [5, 7, 362, 451, 477, 516, 523, 532], "orphan": 7, "nest": 7, "pars": 7, "block": 7, "subpackag": [7, 532], "visible_subpackag": 7, "toctre": 7, "titlesonli": 7, "maxdepth": 7, "index": 7, "endblock": 7, "submodul": 7, "visible_submodul": 7, "content": 7, "all": [7, 133, 243, 376, 380, 508, 513, 516, 523], "visible_children": 7, "children": 7, "elif": 7, "equalto": 7, "packag": [7, 417], "import": [7, 243, 449], "visible_funct": 7, "modul": [7, 8, 355, 376, 380, 449, 451, 464, 477, 506, 508, 513, 516, 523], "summari": 7, "scope": [7, 243], "id": [7, 464, 523], "obj_item": 7, "0": [7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "copyright": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "c": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "2023": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 421, 422, 425, 426, 427, 428, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "intel": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "corpor": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "licens": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "under": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "apach": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "version": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "2": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "you": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "mai": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "us": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "thi": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "file": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532], "except": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "complianc": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "obtain": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "copi": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "http": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "www": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "org": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "unless": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "requir": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "applic": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "law": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "agre": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "write": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "softwar": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "distribut": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "an": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "AS": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "basi": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "without": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "warranti": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "OR": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "condit": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "OF": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "ani": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "kind": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "either": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "express": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "impli": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "see": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "specif": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "languag": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "govern": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "permiss": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "limitiniti": [44, 133, 243, 345, 477, 523], "dataload": [44, 47, 133, 243, 523], "nncfdataload": [46, 133], "abc": 46, "wrap": [46, 449, 451, 477, 516, 523], "custom": [46, 345, 523], "sourc": [46, 243, 345, 449], "abstract": 46, "__iter__": 46, "creat": [46, 523], "iter": [46, 243, 355, 362, 376, 380, 451, 464, 477, 508, 513, 516, 523], "element": 46, "The": [46, 243, 345, 355, 362, 376, 449, 464, 477, 506, 513, 516, 523], "return": [46, 243, 345, 355, 362, 376, 380, 449, 451, 464, 477, 506, 508, 513, 516, 523], "implement": [46, 345, 362, 523], "protocol": 46, "structur": [113, 243, 345, 449], "quantizationrangeinitarg": 133, "data_load": [133, 345, 523], "common": [133, 243, 355, 362, 376, 380, 451, 464, 477, 506, 508, 513, 516, 532], "devic": [133, 243, 345, 523], "str": [133, 243, 345, 355, 362, 380, 449, 451, 464, 477, 523], "nncfextraconfigstruct": [133, 523], "store": [133, 523], "addit": [133, 243, 345, 355, 376, 380, 449, 451, 464, 477, 506, 508, 513, 516], "argument": [133, 449, 523], "quantiz": [133, 243, 345, 449, 523], "rang": [133, 477], "algorithm": [133, 243, 345, 357, 358, 366, 375, 378, 382, 417, 449, 451, 464, 477, 506, 508, 513, 516, 523], "bnadaptationinitarg": 133, "batchnorm": 133, "statist": [133, 243, 355, 362, 376, 380, 451, 464, 477, 508, 513, 516], "adapt": [133, 345], "modelevaluationarg": 133, "eval_fn": [133, 523], "callabl": [133, 243, 449, 523], "from": [133, 243, 345, 449, 523], "which": [133, 243, 449], "extra": [133, 345], "defin": [133, 243, 417], "nncfconfig": [133, 243, 345, 355, 376, 380, 449, 464, 477, 513, 516, 523], "2020": [134, 457, 489, 490, 492], "config": [243, 345, 355, 362, 376, 380, 449, 464, 477, 513, 516, 523, 532], "tensorflow": [243, 532], "prune": [243, 345, 449, 523], "filter_prun": [243, 345, 358, 449, 471], "sparsiti": [243, 345, 449], "magnitud": [243, 345, 375, 449, 511], "rb": [243, 345, 375, 449, 511], "torch": [243, 532], "knowledge_distil": [243, 449], "algo": [243, 449, 452, 469, 471, 481, 509, 511, 515, 518], "const": [243, 449, 511], "base_algo": [243, 449, 464, 508, 511, 513, 516], "kwarg": [243, 449], "dict": [243, 345, 449, 464, 477], "A": [243, 345, 355, 362, 376, 380, 449, 451, 464, 477, 508, 513, 516, 523], "regular": [243, 449, 523], "dictionari": 243, "some": [243, 345, 449], "util": [243, 523], "classmethod": 243, "from_dict": 243, "nncf_dict": 243, "load": [243, 345, 449], "must": [243, 449], "contain": [243, 355, 362, 376, 380, 449, 451, 464, 477, 508, 513, 516], "onli": [243, 362, 464, 477, 506, 523], "json": [243, 532], "support": [243, 451, 477, 516], "primit": 243, "get_redefinable_global_param_value_for_algo": 243, "param_nam": 243, "algo_nam": 243, "option": [243, 523], "paramet": [243, 345, 355, 362, 376, 380, 449, 451, 464, 477, 506, 508, 513, 516, 523], "can": [243, 355, 362, 376, 380, 449, 451, 464, 477, 508, 513, 516], "specifi": [243, 345, 449, 477, 523], "both": 243, "global": [243, 464, 523], "level": [243, 355, 376, 380, 451, 464, 477, 508, 513, 516], "so": [243, 417, 449], "thei": 243, "appli": [243, 345, 376, 380, 449, 464, 508, 513, 516], "same": [243, 449, 523], "time": [243, 355, 362, 376, 380, 451, 464, 477, 508, 513, 516], "overridden": 243, "section": 243, "should": [243, 345, 355, 362, 376, 380, 449, 451, 464, 477, 506, 508, 513, 516, 523], "given": [243, 523], "consid": 243, "exact": [243, 345, 449], "format": [243, 362, 449, 464, 477, 506], "present": 243, "top": 243, "most": 243, "subdict": 243, "among": [243, 449], "allow": [243, 345], "resolut": 243, "redefin": 243, "occur": 243, "dataset": [243, 345, 523], "data_sourc": 243, "dataitem": 243, "transform_func": 243, "modelinput": 243, "gener": 243, "interfac": 243, "compress": [243, 345, 355, 362, 376, 380, 417, 449, 451, 464, 477, 506, 508, 513, 516, 523], "retriev": 243, "item": 243, "pass": [243, 345, 449, 523], "These": 243, "ar": [243, 345, 376, 380, 449, 451, 464, 477, 506, 508, 513, 516, 523], "differ": [243, 523], "purpos": 243, "exampl": [243, 523], "model": [243, 345, 355, 362, 376, 380, 449, 451, 464, 477, 506, 508, 513, 516, 523], "infer": 243, "valid": [243, 345, 523], "It": [243, 523], "depend": [243, 523], "If": [243, 345, 449, 464], "ha": [243, 449], "been": 243, "per": 243, "cannot": [243, 449], "input": [243, 449, 477, 523], "transform": 243, "extract": 243, "": [243, 362, 376, 380, 449, 464, 477, 506, 508, 513, 516, 523], "For": [243, 523], "supervis": 243, "learn": [243, 345, 523], "usual": [243, 449], "label": 243, "get_data": 243, "indic": 243, "int": [243, 345, 449, 464, 477, 523], "select": 243, "zero": 243, "sort": 243, "ascend": 243, "order": [243, 376, 451, 464, 477, 506, 508, 513, 516], "get_inference_data": 243, "wa": 243, "ignoredscop": 243, "dataclass": 243, "descript": 243, "ignor": 243, "sub": 243, "graph": [243, 355, 449, 464], "exclud": 243, "process": [243, 345, 376, 380, 449, 451, 464, 477, 506, 508, 513, 516, 523], "etc": 243, "node": 243, "node_nam": 243, "node_1": 243, "node_2": 243, "node_3": 243, "ignored_scop": 243, "pattern": 243, "node_": 243, "d": 243, "oper": [243, 449], "openvino": 243, "opset": 243, "doc": 243, "ai": 243, "latest": 243, "openvino_docs_ops_opset": 243, "html": 243, "operation_typ": 243, "multipli": 243, "groupconvolut": 243, "interpol": 243, "onnx": [243, 464], "mul": 243, "conv": 243, "resiz": 243, "note": 243, "accord": [243, 355, 449], "framework": 243, "modeltyp": 243, "enum": 243, "describ": 243, "taken": 243, "account": 243, "dure": [243, 345, 355, 376, 380, 449, 451, 464, 477, 506, 508, 513, 516], "arxiv": 243, "pdf": 243, "1706": 243, "03762": 243, "targetdevic": 243, "target": [243, 355, 362, 376, 449, 464, 477, 506, 513, 516, 523], "while": [243, 449], "best": [243, 355, 362, 376, 451, 464, 477, 506, 513, 516], "perform": [243, 345, 523], "cpu": [243, 523], "gpu": [243, 523], "vpu": 243, "quantizationpreset": 243, "enumer": 243, "deriv": 243, "new": 243, "quantize_with_accuracy_control": 243, "api": [243, 345, 355, 362, 376, 417, 449, 451, 464, 477, 506, 513, 516, 532], "tmodel": [243, 345], "calibration_dataset": 243, "validation_dataset": 243, "validation_fn": 243, "float": [243, 345, 355, 451, 464, 508, 523], "max_drop": 243, "01": 243, "preset": 243, "struct": [243, 464, 477], "target_devic": 243, "subset_s": 243, "300": 243, "fast_bias_correct": 243, "bool": [243, 345, 355, 362, 376, 380, 449, 451, 464, 477, 506, 508, 513, 523], "model_typ": 243, "post": 243, "train": [243, 345, 355, 362, 376, 380, 449, 451, 464, 477, 506, 508, 513, 516, 523], "accuraci": [243, 345], "control": [243, 345, 362, 449, 464, 506, 523], "provid": [243, 345, 355, 523], "repres": 243, "calibr": 243, "take": [243, 355, 362, 376, 380, 449, 451, 464, 477, 508, 513, 516], "two": [243, 449, 523], "argumet": 243, "metric": [243, 477], "follow": 243, "mean": 243, "higher": 243, "correspond": [243, 345, 464, 477], "better": 243, "maximum": [243, 477], "absolut": 243, "drop": [243, 345], "achiev": 243, "after": [243, 376, 380, 451, 477, 508, 513, 516, 523], "mode": [243, 523], "size": [243, 345], "subset": 243, "calcul": [243, 477, 523], "activ": 243, "fals": [243, 355, 362, 376, 380, 449, 451, 464, 477, 506, 508, 513, 516], "enabl": [243, 345, 355, 362, 376, 380, 451, 464, 477, 506, 508, 513, 516], "bia": 243, "correct": 243, "more": 243, "accur": 243, "less": 243, "memori": 243, "need": [243, 355, 362, 376, 380, 451, 464, 477, 506, 508, 513, 516, 523], "now": 243, "flow": 243, "2021": 338, "create_compressed_model": [345, 449, 523], "kera": [345, 355, 362], "compression_st": [345, 449], "tupl": [345, 449, 464, 477, 523], "compressionalgorithmcontrol": [345, 449, 523], "main": [345, 449], "produc": [345, 449], "readi": [345, 449, 523], "fine": [345, 449], "tune": [345, 449], "origin": [345, 355, 376, 380, 449, 451, 464, 477, 506, 508, 513, 516, 523], "configur": [345, 449, 532], "have": [345, 449], "its": [345, 449], "alreadi": [345, 449], "checkpoint": [345, 355, 362, 376, 449, 451, 464, 477, 506, 513, 516], "anoth": [345, 449], "determin": [345, 449], "modif": [345, 449], "state": [345, 449, 523], "unambigu": [345, 449], "restor": [345, 449], "includ": [345, 449], "builder": [345, 449], "trainabl": 345, "skip": [345, 449], "build": [345, 449], "compression_ctrl": 345, "compressed_model": 345, "where": [345, 449], "necessari": [345, 523], "register_default_init_arg": 345, "nncf_config": [345, 523], "batch_siz": 345, "regist": 345, "certain": 345, "instanc": [345, 355, 362, 376, 380, 449, 451, 464, 477, 508, 513, 516, 523], "batch": [345, 355, 362, 376, 380, 451, 464, 477, 508, 513, 516], "adaptivecompressiontrainingloop": 345, "compression_control": 345, "uncompressed_model_accuraci": 345, "lr_updates_need": 345, "verbos": 345, "minimal_compression_r": 345, "maximal_compression_r": 345, "95": 345, "dump_checkpoint": 345, "baseearlyexitcompressiontrainingloop": 345, "awar": 345, "wherebi": 345, "rate": [345, 355, 376, 380, 464, 506], "automat": 345, "vari": 345, "reach": 345, "maxim": 345, "possibl": 345, "posit": [345, 449], "budget": 345, "degrad": 345, "criterion": [345, 523], "satisfi": 345, "run": 345, "train_epoch_fn": 345, "validate_fn": 345, "configure_optimizers_fn": 345, "dump_checkpoint_fn": 345, "load_checkpoint_fn": 345, "early_stopping_fn": 345, "tensorboard_writ": 345, "log_dir": 345, "update_learning_rate_fn": 345, "logic": 345, "trainingrunn": 345, "call": [345, 376, 380, 449, 451, 477, 508, 513, 516, 523], "befor": [345, 362, 449, 464, 477, 506], "singl": 345, "epoch": [345, 523], "insid": [345, 451, 477, 516], "train_epoch": 345, "param": [345, 355, 449, 477, 523], "evalu": [345, 449], "instanti": 345, "optim": [345, 523], "schedul": [345, 355, 376, 380, 451, 464, 477, 506, 508, 513, 516], "configure_optim": 345, "dump": [345, 449], "check": 345, "earli": 345, "stop": 345, "earlyexitcompressiontrainingloop": 345, "filterpruningcontrol": [355, 464], "target_model": [355, 362, 376, 380, 451, 464, 477, 506, 508, 513, 516], "nncfgraph": 355, "op_nam": [355, 362, 376, 380], "prunable_typ": [355, 464], "pruned_layer_group": 355, "cluster": [355, 464], "base_algorithm": [355, 376, 380], "prunedlayerinfo": 355, "basepruningalgocontrol": [355, 464], "serv": [355, 376, 380, 451, 464, 477, 506, 508, 513, 516], "handl": [355, 376, 380, 451, 464, 477, 506, 508, 513, 516], "hook": [355, 376, 380, 451, 464, 477, 506, 508, 513, 516], "insert": [355, 376, 380, 451, 464, 477, 506, 508, 513, 516], "uncompress": [355, 362, 376, 380, 449, 451, 464, 477, 506, 508, 513, 516], "filter": [355, 464], "compression_stag": [355, 362, 376, 451, 464, 477, 506, 513, 516], "compressionstag": [355, 362, 376, 451, 464, 477, 506, 513, 516], "stage": [355, 362, 376, 464, 477, 506, 513, 516], "save": [355, 362, 376, 451, 464, 477, 506, 513, 516], "distinguish": [355, 362, 376, 451, 464, 477, 506, 513, 516], "between": [355, 362, 376, 451, 464, 477, 506, 513, 516], "partial": [355, 362, 376, 451, 464, 477, 506, 513, 516], "fulli": [355, 362, 376, 451, 464, 477, 506, 513, 516], "disable_schedul": [355, 376, 380, 464, 506], "disabl": [355, 376, 380, 464, 506], "current": [355, 376, 380, 464, 506], "chang": [355, 376, 380, 464, 506], "dummi": [355, 376, 380, 449, 464, 506], "one": [355, 376, 380, 464, 506, 523], "doe": [355, 376, 380, 464, 506], "quickly_collected_onli": [355, 362, 376, 380, 451, 464, 477, 508, 513, 516], "nncfstatist": [355, 362, 376, 380, 451, 464, 477, 508, 513, 516], "collect": [355, 362, 376, 380, 451, 464, 477, 508, 513, 516], "don": [355, 362, 376, 380, 451, 464, 477, 508, 513, 516], "t": [355, 362, 376, 380, 449, 451, 464, 477, 508, 513, 516], "too": [355, 362, 376, 380, 451, 464, 477, 508, 513, 516], "much": [355, 362, 376, 380, 451, 464, 477, 508, 513, 516], "comput": [355, 362, 376, 380, 451, 464, 477, 508, 513, 516], "help": [355, 362, 376, 380, 451, 464, 477, 508, 513, 516], "case": [355, 362, 376, 380, 449, 451, 464, 477, 508, 513, 516, 523], "when": [355, 362, 376, 380, 449, 451, 464, 477, 508, 513, 516, 523], "keep": [355, 362, 376, 380, 451, 464, 477, 508, 513, 516], "track": [355, 362, 376, 380, 451, 464, 477, 508, 513, 516], "each": [355, 362, 376, 380, 449, 451, 464, 477, 508, 513, 516, 523], "step": [355, 362, 376, 380, 451, 464, 477, 508, 513, 516, 523], "set_pruning_level": [355, 464], "pruning_level": [355, 464], "run_batchnorm_adapt": [355, 376, 464, 513], "setup": [355, 523], "mask": [355, 376, 380, 464, 508, 513, 516], "ratio": 355, "quantizationcontrol": [362, 477], "basecompressionalgorithmcontrol": 362, "basic": 362, "strip_model": [362, 464, 477, 506], "do_copi": [362, 464, 477, 506], "strip": [362, 464, 477, 506], "auxiliari": [362, 464, 477, 506], "layer": [362, 464, 477, 506, 523], "were": [362, 449, 464, 477, 506], "export": [362, 464, 477, 506], "modifi": [362, 464, 477, 506], "default": [362, 464, 477, 506, 523], "magnitudesparsitycontrol": [376, 513], "basesparsitycontrol": [376, 380], "host": [376, 380, 451, 464, 477, 506, 508, 513, 516], "entiti": [376, 380, 451, 464, 477, 506, 508, 513, 516], "loss": [376, 380, 451, 464, 477, 506, 508, 513, 516, 523], "freez": [376, 380, 508, 513, 516], "set_sparsity_level": [376, 380, 508, 513, 516], "sparsity_level": [376, 380, 508, 513, 516], "weight": [376, 380, 449, 464, 508, 513, 516, 523], "rbsparsitycontrol": [380, 516], "user": 417, "could": [417, 449], "exist": 417, "nn": [449, 451, 464, 523], "dummy_forward_fn": 449, "wrap_inputs_fn": 449, "wrap_outputs_fn": 449, "dump_graph": 449, "nncf_network": [449, 451, 464, 477, 506, 508, 513, 516], "nncfnetwork": [449, 451, 464, 477, 506, 508, 513, 516], "pytorch": [449, 523], "represent": 449, "entir": 449, "suppli": 449, "instead": 449, "forward": 449, "intern": 449, "via": 449, "trace": [449, 477, 523], "pipelin": 449, "special": [449, 451, 477, 516], "loader": 449, "output": [449, 523], "other": [449, 523], "than": 449, "tensor": [449, 464, 477, 523], "otherwis": [449, 523], "made": [449, 451, 477, 516], "mock": 449, "shape": 449, "code": 449, "nncf_model_input": 449, "underli": 449, "exactli": 449, "below": 449, "also": [449, 523], "non": 449, "directli": 449, "locat": 449, "receiv": [449, 523], "keyword": 449, "e": [449, 451, 477, 516, 523], "g": [449, 523], "mark": 449, "whether": [449, 523], "dot": 449, "log": 449, "directori": 449, "compositecompressioncontrol": 449, "load_stat": 449, "state_dict_to_load": 449, "is_resum": 449, "keys_to_ignor": 449, "well": 449, "Will": 449, "do": 449, "match": 449, "state_dict": 449, "discard": 449, "irrelev": 449, "prefix": 449, "ad": 449, "dataparallel": [449, 523], "distributeddataparallel": [449, 451, 477, 516, 523], "behavior": 449, "success": 449, "rais": 449, "miss": 449, "won": 449, "number": [449, 523], "entri": 449, "successfulli": 449, "disable_trac": 449, "patch": 449, "execut": 449, "within": 449, "no_nncf_trac": 449, "context": 449, "knowledgedistillationcontrol": 451, "original_model": 451, "kd_type": 451, "scale": 451, "temperatur": 451, "compression_method_api": [451, 506], "ptcompressionalgorithmcontrol": [451, 506], "multipl": [451, 477, 516], "go": [451, 477, 516], "prepar": [451, 477, 516], "properli": [451, 477, 516], "pruned_module_group": 464, "prunedmoduleinfo": 464, "pruned_norms_oper": 464, "nncfnode": 464, "filterpruningmask": 464, "static": 464, "get_mask": 464, "minfo": 464, "groupwis": 464, "correspod": 464, "term": 464, "percentag": 464, "flop": 464, "remov": 464, "latter": 464, "being": 464, "prune_flop": 464, "flag": 464, "kei": 464, "group": [464, 523], "prepare_for_export": [464, 477], "debug_interfac": 477, "quantizationdebuginterfac": 477, "weight_quant": 477, "weightquantizerid": 477, "weightquantizerinfo": 477, "non_weight_quant": 477, "nonweightquantizerid": 477, "nonweightquantizerinfo": 477, "groups_of_adjacent_quant": 477, "precision_init": 477, "adjacent_quant": 477, "groupsofadjacentquant": 477, "quantizers_input_shap": 477, "quantizerid": 477, "build_time_metric_info": 477, "quantizationsharebuildtimeinfo": 477, "build_time_range_init_param": 477, "init_rang": 477, "ptrangeinitparam": 477, "quantizationcontrollerbas": 477, "deploy": 477, "init_precis": 477, "precision_init_typ": 477, "precision_init_param": 477, "base_init": 477, "baseprecisioninitparam": 477, "precision_constraint": 477, "hardwarequantizationconstraint": 477, "quantizer_setup": 477, "singleconfigquantizersetup": 477, "precis": [477, 523], "happen": 477, "measur": [477, 523], "sensit": [477, 523], "perturb": [477, 523], "averag": [477, 523], "hessian": [477, 523], "estim": [477, 523], "hutchinson": [477, 523], "range_init_param": 477, "minimum": 477, "observ": 477, "creation": 477, "basesparsityalgocontrol": [506, 508, 513, 516], "sparsified_module_info": [506, 508, 513, 516], "sparsemoduleinfo": [506, 508, 513, 516], "sparsitycontrol": 506, "constsparsitycontrol": 508, "target_sparsified_module_info": [513, 516], "quantizationprecisioninitarg": 523, "criterion_fn": 523, "_loss": 523, "bitwidth": 523, "reflect": 523, "just": 523, "direct": 523, "incept": 523, "v3": 523, "combin": 523, "descend": 523, "over": 523, "ptinitializingdataload": 523, "simpl": 523, "warn": 523, "final": 523, "make": 523, "sure": 523, "fail": 523, "cuda": 523, "autoqprecisioninitarg": 523, "legrinitarg": 523, "train_load": 523, "train_fn": 523, "val_load": 523, "val_fn": 523, "train_optim": 523, "rank": 523, "initialis": 523, "train_step": 523, "pair": 523, "acc": 523, "distributedcallbacksarg": 523, "wrapping_callback": 523, "unwrapping_callback": 523, "callback": 523, "unwrap": 523, "executionparamet": 523, "cpu_onli": 523, "current_gpu": 523, "refer": 532, "schema": 532}, "objects": {"": [[243, 0, 0, "-", "nncf"]], "nncf": [[243, 1, 1, "", "Dataset"], [243, 1, 1, "", "IgnoredScope"], [243, 1, 1, "", "ModelType"], [243, 1, 1, "", "NNCFConfig"], [243, 1, 1, "", "QuantizationPreset"], [243, 1, 1, "", "TargetDevice"], [11, 0, 0, "-", "api"], [44, 0, 0, "-", "common"], [113, 0, 0, "-", "config"], [137, 0, 0, "-", "data"], [138, 0, 0, "-", "definitions"], [149, 0, 0, "-", "experimental"], [259, 0, 0, "-", "onnx"], [270, 0, 0, "-", "openvino"], [274, 0, 0, "-", "parameters"], [300, 0, 0, "-", "quantization"], [243, 3, 1, "", "quantize_with_accuracy_control"], [304, 0, 0, "-", "scopes"], [308, 0, 0, "-", "telemetry"], [345, 0, 0, "-", "tensorflow"], [449, 0, 0, "-", "torch"], [531, 0, 0, "-", "version"]], "nncf.Dataset": [[243, 2, 1, "", "get_data"], [243, 2, 1, "", "get_inference_data"]], "nncf.NNCFConfig": [[243, 2, 1, "", "from_dict"], [243, 2, 1, "", "get_redefinable_global_param_value_for_algo"]], "nncf.api": [[10, 0, 0, "-", "compression"], [12, 0, 0, "-", "statistics"]], "nncf.common": [[13, 0, 0, "-", "accuracy_aware_training"], [18, 0, 0, "-", "api_marker"], [19, 0, 0, "-", "collector"], [20, 0, 0, "-", "composite_compression"], [21, 0, 0, "-", "compression"], [22, 0, 0, "-", "deprecation"], [23, 0, 0, "-", "engine"], [24, 0, 0, "-", "exporter"], [25, 0, 0, "-", "factory"], [29, 0, 0, "-", "graph"], [42, 0, 0, "-", "hardware"], [47, 0, 0, "-", "initialization"], [48, 0, 0, "-", "insertion_point_graph"], [49, 0, 0, "-", "logging"], [53, 0, 0, "-", "pruning"], [68, 0, 0, "-", "quantization"], [82, 0, 0, "-", "schedulers"], [83, 0, 0, "-", "scopes"], [86, 0, 0, "-", "sparsity"], [89, 0, 0, "-", "stateful_classes_registry"], [90, 0, 0, "-", "statistics"], [91, 0, 0, "-", "tensor"], [94, 0, 0, "-", "tensor_statistics"], [103, 0, 0, "-", "utils"]], "nncf.common.accuracy_aware_training": [[14, 0, 0, "-", "runner"], [15, 0, 0, "-", "runner_factory"], [16, 0, 0, "-", "statistics"], [17, 0, 0, "-", "training_loop"]], "nncf.common.graph": [[26, 0, 0, "-", "definitions"], [27, 0, 0, "-", "graph"], [28, 0, 0, "-", "graph_matching"], [30, 0, 0, "-", "layer_attributes"], [31, 0, 0, "-", "model_transformer"], [32, 0, 0, "-", "operator_metatypes"], [33, 0, 0, "-", "patterns"], [38, 0, 0, "-", "transformations"], [40, 0, 0, "-", "utils"]], "nncf.common.graph.patterns": [[34, 0, 0, "-", "manager"], [35, 0, 0, "-", "patterns"]], "nncf.common.graph.transformations": [[36, 0, 0, "-", "command_creation"], [37, 0, 0, "-", "commands"], [39, 0, 0, "-", "layout"]], "nncf.common.hardware": [[41, 0, 0, "-", "config"], [43, 0, 0, "-", "opset"]], "nncf.common.initialization": [[45, 0, 0, "-", "batchnorm_adaptation"], [46, 0, 0, "-", "dataloader"]], "nncf.common.initialization.dataloader": [[46, 1, 1, "", "NNCFDataLoader"]], "nncf.common.initialization.dataloader.NNCFDataLoader": [[46, 2, 1, "", "__iter__"]], "nncf.common.logging": [[50, 0, 0, "-", "logger"], [51, 0, 0, "-", "progress_bar"]], "nncf.common.pruning": [[52, 0, 0, "-", "clusterization"], [54, 0, 0, "-", "mask_propagation"], [55, 0, 0, "-", "model_analysis"], [56, 0, 0, "-", "node_selector"], [57, 0, 0, "-", "operations"], [58, 0, 0, "-", "schedulers"], [59, 0, 0, "-", "shape_pruning_processor"], [60, 0, 0, "-", "statistics"], [61, 0, 0, "-", "structs"], [62, 0, 0, "-", "symbolic_mask"], [63, 0, 0, "-", "tensor_processor"], [64, 0, 0, "-", "utils"], [65, 0, 0, "-", "weights_flops_calculator"]], "nncf.common.quantization": [[66, 0, 0, "-", "collectors"], [67, 0, 0, "-", "config_assignment"], [69, 0, 0, "-", "initialization"], [73, 0, 0, "-", "quantizer_propagation"], [77, 0, 0, "-", "quantizer_removal"], [78, 0, 0, "-", "quantizer_setup"], [79, 0, 0, "-", "quantizers"], [80, 0, 0, "-", "statistics"], [81, 0, 0, "-", "structs"]], "nncf.common.quantization.initialization": [[70, 0, 0, "-", "range"]], "nncf.common.quantization.quantizer_propagation": [[71, 0, 0, "-", "graph"], [72, 0, 0, "-", "grouping"], [74, 0, 0, "-", "solver"], [75, 0, 0, "-", "structs"], [76, 0, 0, "-", "visualizer"]], "nncf.common.sparsity": [[84, 0, 0, "-", "collector"], [85, 0, 0, "-", "controller"], [87, 0, 0, "-", "schedulers"], [88, 0, 0, "-", "statistics"]], "nncf.common.tensor_statistics": [[92, 0, 0, "-", "aggregator"], [93, 0, 0, "-", "collectors"], [95, 0, 0, "-", "reduction"], [96, 0, 0, "-", "statistic_point"], [97, 0, 0, "-", "statistics"]], "nncf.common.utils": [[98, 0, 0, "-", "backend"], [99, 0, 0, "-", "debug"], [100, 0, 0, "-", "decorators"], [101, 0, 0, "-", "dot_file_rw"], [102, 0, 0, "-", "helpers"], [104, 0, 0, "-", "logger"], [105, 0, 0, "-", "os"], [106, 0, 0, "-", "patcher"], [107, 0, 0, "-", "registry"], [108, 0, 0, "-", "tensorboard"], [109, 0, 0, "-", "timer"]], "nncf.config": [[110, 0, 0, "-", "config"], [111, 0, 0, "-", "definitions"], [112, 0, 0, "-", "extractors"], [114, 0, 0, "-", "schema"], [132, 0, 0, "-", "schemata"], [133, 0, 0, "-", "structures"], [134, 0, 0, "-", "telemetry_extractors"], [135, 0, 0, "-", "utils"]], "nncf.config.schemata": [[115, 0, 0, "-", "accuracy_aware"], [119, 0, 0, "-", "algo"], [124, 0, 0, "-", "basic"], [126, 0, 0, "-", "common"], [130, 0, 0, "-", "defaults"], [131, 0, 0, "-", "experimental_schema"]], "nncf.config.schemata.algo": [[116, 0, 0, "-", "binarization"], [117, 0, 0, "-", "const_sparsity"], [118, 0, 0, "-", "filter_pruning"], [120, 0, 0, "-", "knowledge_distillation"], [121, 0, 0, "-", "magnitude_sparsity"], [122, 0, 0, "-", "quantization"], [123, 0, 0, "-", "rb_sparsity"]], "nncf.config.schemata.common": [[125, 0, 0, "-", "compression"], [127, 0, 0, "-", "initialization"], [128, 0, 0, "-", "sparsity"], [129, 0, 0, "-", "targeting"]], "nncf.config.structures": [[133, 1, 1, "", "BNAdaptationInitArgs"], [133, 1, 1, "", "ModelEvaluationArgs"], [133, 1, 1, "", "QuantizationRangeInitArgs"]], "nncf.data": [[136, 0, 0, "-", "dataset"]], "nncf.experimental": [[141, 0, 0, "-", "common"], [150, 0, 0, "-", "openvino"], [168, 0, 0, "-", "openvino_native"], [193, 0, 0, "-", "tensorflow"], [201, 0, 0, "-", "torch"]], "nncf.experimental.common": [[139, 0, 0, "-", "graph"], [143, 0, 0, "-", "pruning"], [148, 0, 0, "-", "tensor_statistics"]], "nncf.experimental.common.graph": [[140, 0, 0, "-", "netron"]], "nncf.experimental.common.pruning": [[142, 0, 0, "-", "block_hierarchy"], [144, 0, 0, "-", "nodes_grouping"], [145, 0, 0, "-", "operations"], [146, 0, 0, "-", "propagation_data"]], "nncf.experimental.common.tensor_statistics": [[147, 0, 0, "-", "collectors"]], "nncf.experimental.openvino": [[151, 0, 0, "-", "quantization"]], "nncf.experimental.openvino.quantization": [[152, 0, 0, "-", "quantize"]], "nncf.experimental.openvino_native": [[153, 0, 0, "-", "engine"], [154, 0, 0, "-", "graph"], [166, 0, 0, "-", "hardware"], [177, 0, 0, "-", "quantization"], [181, 0, 0, "-", "statistics"], [183, 0, 0, "-", "tensor"]], "nncf.experimental.openvino_native.graph": [[156, 0, 0, "-", "metatypes"], [158, 0, 0, "-", "model_transformer"], [159, 0, 0, "-", "nncf_graph_builder"], [160, 0, 0, "-", "node_utils"], [163, 0, 0, "-", "transformations"]], "nncf.experimental.openvino_native.graph.metatypes": [[155, 0, 0, "-", "common"], [157, 0, 0, "-", "openvino_metatypes"]], "nncf.experimental.openvino_native.graph.transformations": [[161, 0, 0, "-", "command_creation"], [162, 0, 0, "-", "commands"]], "nncf.experimental.openvino_native.hardware": [[164, 0, 0, "-", "config"], [165, 0, 0, "-", "fused_patterns"], [167, 0, 0, "-", "pattern_operations"]], "nncf.experimental.openvino_native.quantization": [[173, 0, 0, "-", "algorithms"], [176, 0, 0, "-", "default_quantization"], [178, 0, 0, "-", "quantize"]], "nncf.experimental.openvino_native.quantization.algorithms": [[169, 0, 0, "-", "bias_correction"], [171, 0, 0, "-", "fast_bias_correction"], [174, 0, 0, "-", "min_max"]], "nncf.experimental.openvino_native.quantization.algorithms.bias_correction": [[170, 0, 0, "-", "openvino_backend"]], "nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction": [[172, 0, 0, "-", "openvino_backend"]], "nncf.experimental.openvino_native.quantization.algorithms.min_max": [[175, 0, 0, "-", "openvino_backend"]], "nncf.experimental.openvino_native.statistics": [[179, 0, 0, "-", "aggregator"], [180, 0, 0, "-", "collectors"], [182, 0, 0, "-", "statistics"]], "nncf.experimental.tensorflow": [[184, 0, 0, "-", "context"], [187, 0, 0, "-", "graph"], [194, 0, 0, "-", "nncf_network"], [195, 0, 0, "-", "patch_tf"], [197, 0, 0, "-", "quantization"], [200, 0, 0, "-", "scope"]], "nncf.experimental.tensorflow.graph": [[185, 0, 0, "-", "argprovider"], [186, 0, 0, "-", "converter"], [188, 0, 0, "-", "model_transformer"], [189, 0, 0, "-", "node_attributes"], [191, 0, 0, "-", "transformations"]], "nncf.experimental.tensorflow.graph.transformations": [[190, 0, 0, "-", "commands"], [192, 0, 0, "-", "layout"]], "nncf.experimental.tensorflow.quantization": [[196, 0, 0, "-", "algorithm"], [198, 0, 0, "-", "init_range"], [199, 0, 0, "-", "quantizers"]], "nncf.experimental.torch": [[227, 0, 0, "-", "nas"], [228, 0, 0, "-", "pruning"], [230, 0, 0, "-", "quantization"], [232, 0, 0, "-", "search_building_blocks"], [235, 0, 0, "-", "sparsity"]], "nncf.experimental.torch.nas": [[213, 0, 0, "-", "bootstrapNAS"]], "nncf.experimental.torch.nas.bootstrapNAS": [[210, 0, 0, "-", "elasticity"], [216, 0, 0, "-", "search"], [219, 0, 0, "-", "training"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity": [[202, 0, 0, "-", "base_handler"], [203, 0, 0, "-", "elastic_depth"], [204, 0, 0, "-", "elastic_kernel"], [205, 0, 0, "-", "elastic_width"], [206, 0, 0, "-", "elasticity_builder"], [207, 0, 0, "-", "elasticity_controller"], [208, 0, 0, "-", "elasticity_dim"], [209, 0, 0, "-", "filter_reorder"], [211, 0, 0, "-", "multi_elasticity_handler"], [212, 0, 0, "-", "visualization"]], "nncf.experimental.torch.nas.bootstrapNAS.search": [[214, 0, 0, "-", "evaluator"], [215, 0, 0, "-", "evaluator_handler"], [217, 0, 0, "-", "search"]], "nncf.experimental.torch.nas.bootstrapNAS.training": [[218, 0, 0, "-", "base_training"], [220, 0, 0, "-", "lr_scheduler"], [221, 0, 0, "-", "model_creator_helpers"], [222, 0, 0, "-", "progressive_shrinking_builder"], [223, 0, 0, "-", "progressive_shrinking_controller"], [224, 0, 0, "-", "scheduler"], [225, 0, 0, "-", "stage_descriptor"], [226, 0, 0, "-", "training_algorithm"]], "nncf.experimental.torch.pruning": [[229, 0, 0, "-", "operations"]], "nncf.experimental.torch.quantization": [[231, 0, 0, "-", "quantize"]], "nncf.experimental.torch.search_building_blocks": [[233, 0, 0, "-", "search_blocks"], [234, 0, 0, "-", "search_graph"]], "nncf.experimental.torch.sparsity": [[238, 0, 0, "-", "movement"]], "nncf.experimental.torch.sparsity.movement": [[236, 0, 0, "-", "algo"], [237, 0, 0, "-", "functions"], [239, 0, 0, "-", "layers"], [240, 0, 0, "-", "loss"], [241, 0, 0, "-", "scheduler"], [242, 0, 0, "-", "structured_mask_handler"]], "nncf.onnx": [[244, 0, 0, "-", "engine"], [245, 0, 0, "-", "graph"], [257, 0, 0, "-", "hardware"], [261, 0, 0, "-", "quantization"], [266, 0, 0, "-", "statistics"], [268, 0, 0, "-", "tensor"]], "nncf.onnx.graph": [[246, 0, 0, "-", "metatypes"], [248, 0, 0, "-", "model_transformer"], [249, 0, 0, "-", "nncf_graph_builder"], [250, 0, 0, "-", "node_utils"], [251, 0, 0, "-", "onnx_graph"], [254, 0, 0, "-", "transformations"]], "nncf.onnx.graph.metatypes": [[247, 0, 0, "-", "onnx_metatypes"]], "nncf.onnx.graph.transformations": [[252, 0, 0, "-", "command_creation"], [253, 0, 0, "-", "commands"]], "nncf.onnx.hardware": [[255, 0, 0, "-", "config"], [256, 0, 0, "-", "fused_patterns"], [258, 0, 0, "-", "pattern_operations"]], "nncf.onnx.quantization": [[260, 0, 0, "-", "default_quantization"], [262, 0, 0, "-", "quantize"], [263, 0, 0, "-", "quantizer_parameters"]], "nncf.onnx.statistics": [[264, 0, 0, "-", "aggregator"], [265, 0, 0, "-", "collectors"], [267, 0, 0, "-", "statistics"]], "nncf.openvino": [[269, 0, 0, "-", "engine"], [272, 0, 0, "-", "quantization"]], "nncf.openvino.quantization": [[271, 0, 0, "-", "accuracy_aware"], [273, 0, 0, "-", "quantize"]], "nncf.quantization": [[291, 0, 0, "-", "algorithms"], [299, 0, 0, "-", "fake_quantize"], [301, 0, 0, "-", "passes"], [302, 0, 0, "-", "quantize"], [303, 0, 0, "-", "telemetry_extractors"]], "nncf.quantization.algorithms": [[277, 0, 0, "-", "accuracy_control"], [281, 0, 0, "-", "algorithm"], [284, 0, 0, "-", "bias_correction"], [286, 0, 0, "-", "definitions"], [289, 0, 0, "-", "fast_bias_correction"], [294, 0, 0, "-", "min_max"], [298, 0, 0, "-", "post_training"]], "nncf.quantization.algorithms.accuracy_control": [[275, 0, 0, "-", "algorithm"], [276, 0, 0, "-", "backend"], [278, 0, 0, "-", "openvino_backend"], [279, 0, 0, "-", "rank_functions"], [280, 0, 0, "-", "ranker"]], "nncf.quantization.algorithms.bias_correction": [[282, 0, 0, "-", "algorithm"], [283, 0, 0, "-", "backend"], [285, 0, 0, "-", "onnx_backend"]], "nncf.quantization.algorithms.fast_bias_correction": [[287, 0, 0, "-", "algorithm"], [288, 0, 0, "-", "backend"], [290, 0, 0, "-", "onnx_backend"]], "nncf.quantization.algorithms.min_max": [[292, 0, 0, "-", "algorithm"], [293, 0, 0, "-", "backend"], [295, 0, 0, "-", "onnx_backend"], [296, 0, 0, "-", "torch_backend"]], "nncf.quantization.algorithms.post_training": [[297, 0, 0, "-", "algorithm"]], "nncf.telemetry": [[305, 0, 0, "-", "decorator"], [306, 0, 0, "-", "events"], [307, 0, 0, "-", "extractors"], [309, 0, 0, "-", "wrapper"]], "nncf.tensorflow": [[345, 1, 1, "", "AdaptiveCompressionTrainingLoop"], [345, 1, 1, "", "EarlyExitCompressionTrainingLoop"], [310, 0, 0, "-", "accuracy_aware_training"], [313, 0, 0, "-", "algorithm_selector"], [316, 0, 0, "-", "api"], [317, 0, 0, "-", "batchnorm_adaptation"], [319, 0, 0, "-", "callbacks"], [345, 3, 1, "", "create_compressed_model"], [321, 0, 0, "-", "exporter"], [322, 0, 0, "-", "functions"], [324, 0, 0, "-", "graph"], [339, 0, 0, "-", "hardware"], [341, 0, 0, "-", "helpers"], [346, 0, 0, "-", "initialization"], [349, 0, 0, "-", "layers"], [352, 0, 0, "-", "loss"], [358, 0, 0, "-", "pruning"], [366, 0, 0, "-", "quantization"], [345, 3, 1, "", "register_default_init_args"], [375, 0, 0, "-", "sparsity"], [386, 0, 0, "-", "tensor"], [388, 0, 0, "-", "tensor_statistics"], [391, 0, 0, "-", "tf_internals"], [393, 0, 0, "-", "utils"]], "nncf.tensorflow.AdaptiveCompressionTrainingLoop": [[345, 2, 1, "", "run"]], "nncf.tensorflow.accuracy_aware_training": [[311, 0, 0, "-", "keras_model_utils"], [312, 0, 0, "-", "runner"]], "nncf.tensorflow.api": [[314, 0, 0, "-", "composite_compression"], [315, 0, 0, "-", "compression"]], "nncf.tensorflow.callbacks": [[318, 0, 0, "-", "checkpoint_callback"], [320, 0, 0, "-", "statistics_callback"]], "nncf.tensorflow.graph": [[323, 0, 0, "-", "converter"], [326, 0, 0, "-", "metatypes"], [330, 0, 0, "-", "model_transformer"], [331, 0, 0, "-", "pattern_operations"], [332, 0, 0, "-", "patterns"], [334, 0, 0, "-", "transformations"], [336, 0, 0, "-", "utils"]], "nncf.tensorflow.graph.metatypes": [[325, 0, 0, "-", "common"], [327, 0, 0, "-", "keras_layers"], [328, 0, 0, "-", "matcher"], [329, 0, 0, "-", "tf_ops"]], "nncf.tensorflow.graph.transformations": [[333, 0, 0, "-", "commands"], [335, 0, 0, "-", "layout"]], "nncf.tensorflow.hardware": [[337, 0, 0, "-", "config"], [338, 0, 0, "-", "fused_patterns"]], "nncf.tensorflow.helpers": [[340, 0, 0, "-", "callback_creation"], [342, 0, 0, "-", "model_creation"], [343, 0, 0, "-", "model_manager"], [344, 0, 0, "-", "utils"]], "nncf.tensorflow.layers": [[347, 0, 0, "-", "custom_objects"], [348, 0, 0, "-", "data_layout"], [350, 0, 0, "-", "operation"], [351, 0, 0, "-", "wrapper"]], "nncf.tensorflow.pruning": [[353, 0, 0, "-", "base_algorithm"], [354, 0, 0, "-", "callbacks"], [357, 0, 0, "-", "filter_pruning"], [359, 0, 0, "-", "operations"], [360, 0, 0, "-", "tensor_processor"], [361, 0, 0, "-", "utils"]], "nncf.tensorflow.pruning.filter_pruning": [[355, 0, 0, "-", "algorithm"], [356, 0, 0, "-", "functions"]], "nncf.tensorflow.pruning.filter_pruning.algorithm": [[355, 1, 1, "", "FilterPruningController"]], "nncf.tensorflow.pruning.filter_pruning.algorithm.FilterPruningController": [[355, 2, 1, "", "compression_stage"], [355, 2, 1, "", "disable_scheduler"], [355, 2, 1, "", "set_pruning_level"], [355, 2, 1, "", "statistics"]], "nncf.tensorflow.quantization": [[362, 0, 0, "-", "algorithm"], [363, 0, 0, "-", "collectors"], [364, 0, 0, "-", "default_quantization"], [365, 0, 0, "-", "functions"], [367, 0, 0, "-", "init_range"], [368, 0, 0, "-", "layers"], [369, 0, 0, "-", "quantize"], [370, 0, 0, "-", "quantizers"], [371, 0, 0, "-", "utils"]], "nncf.tensorflow.quantization.algorithm": [[362, 1, 1, "", "QuantizationController"]], "nncf.tensorflow.quantization.algorithm.QuantizationController": [[362, 2, 1, "", "compression_stage"], [362, 2, 1, "", "statistics"], [362, 2, 1, "", "strip_model"]], "nncf.tensorflow.sparsity": [[372, 0, 0, "-", "base_algorithm"], [373, 0, 0, "-", "callbacks"], [374, 0, 0, "-", "collector"], [378, 0, 0, "-", "magnitude"], [382, 0, 0, "-", "rb"], [385, 0, 0, "-", "utils"]], "nncf.tensorflow.sparsity.magnitude": [[376, 0, 0, "-", "algorithm"], [377, 0, 0, "-", "functions"], [379, 0, 0, "-", "operation"]], "nncf.tensorflow.sparsity.magnitude.algorithm": [[376, 1, 1, "", "MagnitudeSparsityController"]], "nncf.tensorflow.sparsity.magnitude.algorithm.MagnitudeSparsityController": [[376, 2, 1, "", "compression_stage"], [376, 2, 1, "", "disable_scheduler"], [376, 2, 1, "", "freeze"], [376, 2, 1, "", "set_sparsity_level"], [376, 2, 1, "", "statistics"]], "nncf.tensorflow.sparsity.rb": [[380, 0, 0, "-", "algorithm"], [381, 0, 0, "-", "functions"], [383, 0, 0, "-", "loss"], [384, 0, 0, "-", "operation"]], "nncf.tensorflow.sparsity.rb.algorithm": [[380, 1, 1, "", "RBSparsityController"]], "nncf.tensorflow.sparsity.rb.algorithm.RBSparsityController": [[380, 2, 1, "", "disable_scheduler"], [380, 2, 1, "", "freeze"], [380, 2, 1, "", "set_sparsity_level"], [380, 2, 1, "", "statistics"]], "nncf.tensorflow.tensor_statistics": [[387, 0, 0, "-", "collectors"], [389, 0, 0, "-", "reduction"], [390, 0, 0, "-", "statistics"]], "nncf.tensorflow.utils": [[392, 0, 0, "-", "hook_handle"], [394, 0, 0, "-", "node"], [395, 0, 0, "-", "scopes_handle"], [396, 0, 0, "-", "state"]], "nncf.torch": [[397, 0, 0, "-", "accuracy_aware_training"], [400, 0, 0, "-", "algo_selector"], [407, 0, 0, "-", "automl"], [408, 0, 0, "-", "batchnorm_adaptation"], [412, 0, 0, "-", "binarization"], [415, 0, 0, "-", "checkpoint_loading"], [416, 0, 0, "-", "composite_compression"], [417, 0, 0, "-", "compression_method_api"], [449, 3, 1, "", "create_compressed_model"], [418, 0, 0, "-", "debug"], [449, 3, 1, "", "disable_tracing"], [422, 0, 0, "-", "dynamic_graph"], [434, 0, 0, "-", "engine"], [435, 0, 0, "-", "exporter"], [436, 0, 0, "-", "extensions"], [437, 0, 0, "-", "functions"], [440, 0, 0, "-", "graph"], [448, 0, 0, "-", "hardware"], [450, 0, 0, "-", "initialization"], [452, 0, 0, "-", "knowledge_distillation"], [455, 0, 0, "-", "layer_utils"], [456, 0, 0, "-", "layers"], [449, 3, 1, "", "load_state"], [457, 0, 0, "-", "model_creation"], [458, 0, 0, "-", "module_operations"], [459, 0, 0, "-", "nested_objects_traversal"], [460, 0, 0, "-", "nncf_module_replacement"], [461, 0, 0, "-", "nncf_network"], [471, 0, 0, "-", "pruning"], [481, 0, 0, "-", "quantization"], [511, 0, 0, "-", "sparsity"], [522, 0, 0, "-", "statistics"], [523, 0, 0, "-", "structures"], [524, 0, 0, "-", "tensor"], [527, 0, 0, "-", "tensor_statistics"], [530, 0, 0, "-", "utils"]], "nncf.torch.accuracy_aware_training": [[398, 0, 0, "-", "runner"], [399, 0, 0, "-", "utils"]], "nncf.torch.automl": [[404, 0, 0, "-", "agent"], [405, 0, 0, "-", "environment"]], "nncf.torch.automl.agent": [[402, 0, 0, "-", "ddpg"]], "nncf.torch.automl.agent.ddpg": [[401, 0, 0, "-", "ddpg"], [403, 0, 0, "-", "memory"]], "nncf.torch.automl.environment": [[406, 0, 0, "-", "quantization_env"]], "nncf.torch.binarization": [[409, 0, 0, "-", "algo"], [410, 0, 0, "-", "binarize_functions"], [411, 0, 0, "-", "extensions"], [413, 0, 0, "-", "layers"], [414, 0, 0, "-", "reference"]], "nncf.torch.dynamic_graph": [[419, 0, 0, "-", "context"], [420, 0, 0, "-", "graph"], [421, 0, 0, "-", "graph_tracer"], [423, 0, 0, "-", "io_handling"], [424, 0, 0, "-", "layer_attributes_handlers"], [425, 0, 0, "-", "op_input_processing"], [426, 0, 0, "-", "operation_address"], [427, 0, 0, "-", "patch_pytorch"], [428, 0, 0, "-", "scope"], [429, 0, 0, "-", "scope_access"], [430, 0, 0, "-", "structs"], [431, 0, 0, "-", "trace_functions"], [432, 0, 0, "-", "trace_tensor"], [433, 0, 0, "-", "wrappers"]], "nncf.torch.graph": [[438, 0, 0, "-", "graph"], [439, 0, 0, "-", "graph_builder"], [441, 0, 0, "-", "operator_metatypes"], [442, 0, 0, "-", "pattern_operations"], [444, 0, 0, "-", "transformations"]], "nncf.torch.graph.transformations": [[443, 0, 0, "-", "commands"], [445, 0, 0, "-", "layout"]], "nncf.torch.hardware": [[446, 0, 0, "-", "config"], [447, 0, 0, "-", "fused_patterns"]], "nncf.torch.knowledge_distillation": [[451, 0, 0, "-", "algo"], [453, 0, 0, "-", "knowledge_distillation_handler"], [454, 0, 0, "-", "knowledge_distillation_loss"]], "nncf.torch.knowledge_distillation.algo": [[451, 1, 1, "", "KnowledgeDistillationController"]], "nncf.torch.knowledge_distillation.algo.KnowledgeDistillationController": [[451, 2, 1, "", "compression_stage"], [451, 2, 1, "", "distributed"], [451, 2, 1, "", "statistics"]], "nncf.torch.pruning": [[462, 0, 0, "-", "base_algo"], [463, 0, 0, "-", "export_utils"], [469, 0, 0, "-", "filter_pruning"], [472, 0, 0, "-", "operations"], [473, 0, 0, "-", "structs"], [474, 0, 0, "-", "tensor_processor"], [475, 0, 0, "-", "utils"]], "nncf.torch.pruning.filter_pruning": [[464, 0, 0, "-", "algo"], [465, 0, 0, "-", "functions"], [467, 0, 0, "-", "global_ranking"], [470, 0, 0, "-", "layers"]], "nncf.torch.pruning.filter_pruning.algo": [[464, 1, 1, "", "FilterPruningController"]], "nncf.torch.pruning.filter_pruning.algo.FilterPruningController": [[464, 2, 1, "", "compression_stage"], [464, 2, 1, "", "disable_scheduler"], [464, 2, 1, "", "get_mask"], [464, 2, 1, "", "prepare_for_export"], [464, 2, 1, "", "set_pruning_level"], [464, 2, 1, "", "statistics"], [464, 2, 1, "", "strip_model"]], "nncf.torch.pruning.filter_pruning.global_ranking": [[466, 0, 0, "-", "evolutionary_optimization"], [468, 0, 0, "-", "legr"]], "nncf.torch.quantization": [[476, 0, 0, "-", "adjust_padding"], [477, 0, 0, "-", "algo"], [478, 0, 0, "-", "default_quantization"], [479, 0, 0, "-", "extensions"], [480, 0, 0, "-", "hessian_trace"], [482, 0, 0, "-", "init_precision"], [483, 0, 0, "-", "init_range"], [484, 0, 0, "-", "layers"], [485, 0, 0, "-", "metrics"], [486, 0, 0, "-", "precision_constraints"], [494, 0, 0, "-", "precision_init"], [498, 0, 0, "-", "quantize"], [499, 0, 0, "-", "quantize_functions"], [500, 0, 0, "-", "reference"], [501, 0, 0, "-", "schedulers"], [502, 0, 0, "-", "statistics"], [503, 0, 0, "-", "strip"], [504, 0, 0, "-", "structs"], [505, 0, 0, "-", "translator"]], "nncf.torch.quantization.algo": [[477, 1, 1, "", "QuantizationController"]], "nncf.torch.quantization.algo.QuantizationController": [[477, 2, 1, "", "compression_stage"], [477, 2, 1, "", "distributed"], [477, 2, 1, "", "init_precision"], [477, 2, 1, "", "init_range"], [477, 2, 1, "", "prepare_for_export"], [477, 2, 1, "", "statistics"], [477, 2, 1, "", "strip_model"]], "nncf.torch.quantization.precision_init": [[487, 0, 0, "-", "adjacent_quantizers"], [488, 0, 0, "-", "autoq_init"], [489, 0, 0, "-", "base_init"], [490, 0, 0, "-", "bitwidth_graph"], [491, 0, 0, "-", "compression_ratio"], [492, 0, 0, "-", "hawq_debug"], [493, 0, 0, "-", "hawq_init"], [495, 0, 0, "-", "manual_init"], [496, 0, 0, "-", "perturbations"], [497, 0, 0, "-", "traces_order"]], "nncf.torch.sparsity": [[506, 0, 0, "-", "base_algo"], [507, 0, 0, "-", "collector"], [509, 0, 0, "-", "const"], [510, 0, 0, "-", "functions"], [512, 0, 0, "-", "layers"], [515, 0, 0, "-", "magnitude"], [518, 0, 0, "-", "rb"]], "nncf.torch.sparsity.base_algo": [[506, 1, 1, "", "BaseSparsityAlgoController"]], "nncf.torch.sparsity.base_algo.BaseSparsityAlgoController": [[506, 2, 1, "", "compression_stage"], [506, 2, 1, "", "disable_scheduler"], [506, 2, 1, "", "strip_model"]], "nncf.torch.sparsity.const": [[508, 0, 0, "-", "algo"]], "nncf.torch.sparsity.const.algo": [[508, 1, 1, "", "ConstSparsityController"]], "nncf.torch.sparsity.const.algo.ConstSparsityController": [[508, 2, 1, "", "freeze"], [508, 2, 1, "", "set_sparsity_level"], [508, 2, 1, "", "statistics"]], "nncf.torch.sparsity.magnitude": [[513, 0, 0, "-", "algo"], [514, 0, 0, "-", "functions"]], "nncf.torch.sparsity.magnitude.algo": [[513, 1, 1, "", "MagnitudeSparsityController"]], "nncf.torch.sparsity.magnitude.algo.MagnitudeSparsityController": [[513, 2, 1, "", "compression_stage"], [513, 2, 1, "", "freeze"], [513, 2, 1, "", "set_sparsity_level"], [513, 2, 1, "", "statistics"]], "nncf.torch.sparsity.rb": [[516, 0, 0, "-", "algo"], [517, 0, 0, "-", "functions"], [519, 0, 0, "-", "layers"], [520, 0, 0, "-", "loss"]], "nncf.torch.sparsity.rb.algo": [[516, 1, 1, "", "RBSparsityController"]], "nncf.torch.sparsity.rb.algo.RBSparsityController": [[516, 2, 1, "", "compression_stage"], [516, 2, 1, "", "distributed"], [516, 2, 1, "", "freeze"], [516, 2, 1, "", "set_sparsity_level"], [516, 2, 1, "", "statistics"]], "nncf.torch.statistics": [[521, 0, 0, "-", "aggregator"]], "nncf.torch.structures": [[523, 1, 1, "", "AutoQPrecisionInitArgs"], [523, 1, 1, "", "DistributedCallbacksArgs"], [523, 1, 1, "", "ExecutionParameters"], [523, 1, 1, "", "LeGRInitArgs"], [523, 1, 1, "", "QuantizationPrecisionInitArgs"]], "nncf.torch.tensor_statistics": [[525, 0, 0, "-", "algo"], [526, 0, 0, "-", "collectors"], [528, 0, 0, "-", "reduction"], [529, 0, 0, "-", "statistics"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"nncf": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532], "api": [0, 10, 11, 12, 314, 315, 316], "refer": [0, 414, 500], "compress": [10, 21, 125, 315], "statist": [12, 16, 60, 80, 88, 90, 97, 179, 180, 181, 182, 264, 265, 266, 267, 390, 502, 521, 522, 529], "common": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 125, 126, 127, 128, 129, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 155, 325], "accuracy_aware_train": [13, 14, 15, 16, 17, 310, 311, 312, 397, 398, 399], "runner": [14, 312, 398], "runner_factori": 15, "training_loop": 17, "api_mark": 18, "collector": [19, 66, 84, 93, 147, 180, 265, 363, 374, 387, 507, 526], "composite_compress": [20, 314, 416], "deprec": 22, "engin": [23, 153, 244, 269, 434], "export": [24, 321, 435], "factori": 25, "graph": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 71, 139, 140, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 185, 186, 187, 188, 189, 190, 191, 192, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 420, 438, 439, 440, 441, 442, 443, 444, 445], "definit": [26, 111, 138, 286], "graph_match": 28, "layer_attribut": 30, "model_transform": [31, 158, 188, 248, 330], "operator_metatyp": [32, 441], "pattern": [33, 34, 35, 332], "manag": 34, "transform": [36, 37, 38, 39, 161, 162, 163, 190, 191, 192, 252, 253, 254, 333, 334, 335, 443, 444, 445], "command_cr": [36, 161, 252], "command": [37, 162, 190, 253, 333, 443], "layout": [39, 192, 335, 445], "util": [40, 64, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 135, 336, 344, 361, 371, 385, 392, 393, 394, 395, 396, 399, 475, 530], "hardwar": [41, 42, 43, 164, 165, 166, 167, 255, 256, 257, 258, 337, 338, 339, 446, 447, 448], "config": [41, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 164, 255, 337, 446], "opset": 43, "subpackag": [44, 243, 345, 358, 375, 449, 471, 511], "initi": [45, 46, 47, 69, 70, 127, 346, 450], "batchnorm_adapt": [45, 317, 408], "dataload": 46, "class": [46, 133, 243, 345, 355, 362, 376, 380, 451, 464, 477, 506, 508, 513, 516, 523], "submodul": [47, 113, 357, 366, 378, 382, 449, 452, 469, 481, 509, 511, 515, 518], "insertion_point_graph": 48, "log": [49, 50, 51], "logger": [50, 104], "progress_bar": 51, "prune": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 142, 143, 144, 145, 146, 228, 229, 353, 354, 355, 356, 357, 358, 359, 360, 361, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "cluster": 52, "mask_propag": 54, "model_analysi": 55, "node_selector": 56, "oper": [57, 145, 229, 350, 359, 379, 384, 472], "schedul": [58, 82, 87, 224, 241, 501], "shape_pruning_processor": 59, "struct": [61, 75, 81, 430, 473, 504], "symbolic_mask": 62, "tensor_processor": [63, 360, 474], "weights_flops_calcul": 65, "quantiz": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 122, 151, 152, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 196, 197, 198, 199, 230, 231, 260, 261, 262, 263, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505], "config_assign": 67, "rang": 70, "quantizer_propag": [71, 72, 73, 74, 75, 76], "group": 72, "solver": 74, "visual": [76, 212], "quantizer_remov": 77, "quantizer_setup": 78, "scope": [83, 200, 304, 428], "sparsiti": [84, 85, 86, 87, 88, 128, 235, 236, 237, 238, 239, 240, 241, 242, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520], "control": 85, "stateful_classes_registri": 89, "tensor": [91, 183, 268, 386, 524], "tensor_statist": [92, 93, 94, 95, 96, 97, 147, 148, 387, 388, 389, 390, 525, 526, 527, 528, 529], "aggreg": [92, 179, 264, 521], "reduct": [95, 389, 528], "statistic_point": 96, "backend": [98, 276, 283, 288, 293], "debug": [99, 418], "decor": [100, 305], "dot_file_rw": 101, "helper": [102, 340, 341, 342, 343, 344], "o": 105, "patcher": 106, "registri": 107, "tensorboard": 108, "timer": 109, "extractor": [112, 307], "schema": 114, "schemata": [115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "accuracy_awar": [115, 271], "algo": [116, 117, 118, 119, 120, 121, 122, 123, 236, 409, 451, 464, 477, 508, 513, 516, 525], "binar": [116, 409, 410, 411, 412, 413, 414], "const_spars": 117, "filter_prun": [118, 355, 356, 357, 464, 465, 466, 467, 468, 469, 470], "knowledge_distil": [120, 451, 452, 453, 454], "magnitude_spars": 121, "rb_sparsiti": 123, "basic": 124, "target": 129, "default": 130, "experimental_schema": 131, "structur": [133, 523], "telemetry_extractor": [134, 303], "data": [136, 137], "dataset": 136, "experiment": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "netron": 140, "block_hierarchi": 142, "nodes_group": 144, "propagation_data": 146, "openvino": [150, 151, 152, 269, 270, 271, 272, 273], "openvino_n": [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183], "metatyp": [155, 156, 157, 246, 247, 325, 326, 327, 328, 329], "openvino_metatyp": 157, "nncf_graph_build": [159, 249], "node_util": [160, 250], "fused_pattern": [165, 256, 338, 447], "pattern_oper": [167, 258, 331, 442], "algorithm": [169, 170, 171, 172, 173, 174, 175, 196, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 355, 362, 376, 380], "bias_correct": [169, 170, 282, 283, 284, 285], "openvino_backend": [170, 172, 175, 278], "fast_bias_correct": [171, 172, 287, 288, 289, 290], "min_max": [174, 175, 292, 293, 294, 295, 296], "default_quant": [176, 260, 364, 478], "tensorflow": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "context": [184, 419], "argprovid": 185, "convert": [186, 323], "node_attribut": 189, "nncf_network": [194, 461], "patch_tf": 195, "init_rang": [198, 367, 483], "torch": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "na": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "bootstrapna": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], "elast": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212], "base_handl": 202, "elastic_depth": 203, "elastic_kernel": 204, "elastic_width": 205, "elasticity_build": 206, "elasticity_control": 207, "elasticity_dim": 208, "filter_reord": 209, "multi_elasticity_handl": 211, "search": [214, 215, 216, 217], "evalu": 214, "evaluator_handl": 215, "train": [218, 219, 220, 221, 222, 223, 224, 225, 226], "base_train": 218, "lr_schedul": 220, "model_creator_help": 221, "progressive_shrinking_build": 222, "progressive_shrinking_control": 223, "stage_descriptor": 225, "training_algorithm": 226, "search_building_block": [232, 233, 234], "search_block": 233, "search_graph": 234, "movement": [236, 237, 238, 239, 240, 241, 242], "function": [237, 243, 322, 345, 356, 365, 377, 381, 437, 449, 465, 510, 514, 517], "layer": [239, 347, 348, 349, 350, 351, 368, 413, 456, 470, 484, 512, 519], "loss": [240, 352, 383, 520], "structured_mask_handl": 242, "onnx": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "onnx_metatyp": 247, "onnx_graph": 251, "quantizer_paramet": 263, "paramet": 274, "accuracy_control": [275, 276, 277, 278, 279, 280], "rank_funct": 279, "ranker": 280, "onnx_backend": [285, 290, 295], "torch_backend": 296, "post_train": [297, 298], "fake_quant": 299, "pass": 301, "telemetri": [305, 306, 307, 308, 309], "event": 306, "wrapper": [309, 351, 433], "keras_model_util": 311, "algorithm_selector": 313, "callback": [318, 319, 320, 354, 373], "checkpoint_callback": 318, "statistics_callback": 320, "keras_lay": 327, "matcher": 328, "tf_op": 329, "callback_cr": 340, "model_cr": [342, 457], "model_manag": 343, "custom_object": 347, "data_layout": 348, "base_algorithm": [353, 372], "magnitud": [376, 377, 378, 379, 513, 514, 515], "rb": [380, 381, 382, 383, 384, 516, 517, 518, 519, 520], "tf_intern": 391, "hook_handl": 392, "node": 394, "scopes_handl": 395, "state": 396, "algo_selector": 400, "automl": [401, 402, 403, 404, 405, 406, 407], "agent": [401, 402, 403, 404], "ddpg": [401, 402, 403], "memori": 403, "environ": [405, 406], "quantization_env": 406, "binarize_funct": 410, "extens": [411, 436, 479], "checkpoint_load": 415, "compression_method_api": 417, "dynamic_graph": [419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "graph_trac": 421, "io_handl": 423, "layer_attributes_handl": 424, "op_input_process": 425, "operation_address": 426, "patch_pytorch": 427, "scope_access": 429, "trace_funct": 431, "trace_tensor": 432, "graph_build": 439, "knowledge_distillation_handl": 453, "knowledge_distillation_loss": 454, "layer_util": 455, "module_oper": 458, "nested_objects_travers": 459, "nncf_module_replac": 460, "base_algo": [462, 506], "export_util": 463, "global_rank": [466, 467, 468], "evolutionary_optim": 466, "legr": 468, "adjust_pad": 476, "hessian_trac": 480, "init_precis": 482, "metric": 485, "precision_constraint": 486, "precision_init": [487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497], "adjacent_quant": 487, "autoq_init": 488, "base_init": 489, "bitwidth_graph": 490, "compression_ratio": 491, "hawq_debug": 492, "hawq_init": 493, "manual_init": 495, "perturb": 496, "traces_ord": 497, "quantize_funct": 499, "strip": 503, "translat": 505, "const": [508, 509], "version": 531, "document": 532, "content": 532}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"NNCF API Reference": [[0, "nncf-api-reference"]], "nncf.api.compression": [[10, "module-nncf.api.compression"]], "nncf.api": [[11, "module-nncf.api"]], "nncf.api.statistics": [[12, "module-nncf.api.statistics"]], "nncf.common.accuracy_aware_training": [[13, "module-nncf.common.accuracy_aware_training"]], "nncf.common.accuracy_aware_training.runner": [[14, "module-nncf.common.accuracy_aware_training.runner"]], "nncf.common.accuracy_aware_training.runner_factory": [[15, "module-nncf.common.accuracy_aware_training.runner_factory"]], "nncf.common.accuracy_aware_training.statistics": [[16, "module-nncf.common.accuracy_aware_training.statistics"]], "nncf.common.accuracy_aware_training.training_loop": [[17, "module-nncf.common.accuracy_aware_training.training_loop"]], "nncf.common.api_marker": [[18, "module-nncf.common.api_marker"]], "nncf.common.collector": [[19, "module-nncf.common.collector"]], "nncf.common.composite_compression": [[20, "module-nncf.common.composite_compression"]], "nncf.common.compression": [[21, "module-nncf.common.compression"]], "nncf.common.deprecation": [[22, "module-nncf.common.deprecation"]], "nncf.common.engine": [[23, "module-nncf.common.engine"]], "nncf.common.exporter": [[24, "module-nncf.common.exporter"]], "nncf.common.factory": [[25, "module-nncf.common.factory"]], "nncf.common.graph.definitions": [[26, "module-nncf.common.graph.definitions"]], "nncf.common.graph.graph": [[27, "module-nncf.common.graph.graph"]], "nncf.common.graph.graph_matching": [[28, "module-nncf.common.graph.graph_matching"]], "nncf.common.graph": [[29, "module-nncf.common.graph"]], "nncf.common.graph.layer_attributes": [[30, "module-nncf.common.graph.layer_attributes"]], "nncf.common.graph.model_transformer": [[31, "module-nncf.common.graph.model_transformer"]], "nncf.common.graph.operator_metatypes": [[32, "module-nncf.common.graph.operator_metatypes"]], "nncf.common.graph.patterns": [[33, "module-nncf.common.graph.patterns"]], "nncf.common.graph.patterns.manager": [[34, "module-nncf.common.graph.patterns.manager"]], "nncf.common.graph.patterns.patterns": [[35, "module-nncf.common.graph.patterns.patterns"]], "nncf.common.graph.transformations.command_creation": [[36, "module-nncf.common.graph.transformations.command_creation"]], "nncf.common.graph.transformations.commands": [[37, "module-nncf.common.graph.transformations.commands"]], "nncf.common.graph.transformations": [[38, "module-nncf.common.graph.transformations"]], "nncf.common.graph.transformations.layout": [[39, "module-nncf.common.graph.transformations.layout"]], "nncf.common.graph.utils": [[40, "module-nncf.common.graph.utils"]], "nncf.common.hardware.config": [[41, "module-nncf.common.hardware.config"]], "nncf.common.hardware": [[42, "module-nncf.common.hardware"]], "nncf.common.hardware.opset": [[43, "module-nncf.common.hardware.opset"]], "nncf.common": [[44, "module-nncf.common"]], "Subpackages": [[44, "subpackages"], [243, "subpackages"], [345, "subpackages"], [358, "subpackages"], [375, "subpackages"], [449, "subpackages"], [471, "subpackages"], [511, "subpackages"]], "nncf.common.initialization.batchnorm_adaptation": [[45, "module-nncf.common.initialization.batchnorm_adaptation"]], "nncf.common.initialization.dataloader": [[46, "module-nncf.common.initialization.dataloader"]], "Classes": [[46, "classes"], [133, "classes"], [243, "classes"], [345, "classes"], [355, "classes"], [362, "classes"], [376, "classes"], [380, "classes"], [451, "classes"], [464, "classes"], [477, "classes"], [506, "classes"], [508, "classes"], [513, "classes"], [516, "classes"], [523, "classes"]], "nncf.common.initialization": [[47, "module-nncf.common.initialization"]], "Submodules": [[47, "submodules"], [113, "submodules"], [357, "submodules"], [366, "submodules"], [378, "submodules"], [382, "submodules"], [449, "submodules"], [452, "submodules"], [469, "submodules"], [481, "submodules"], [509, "submodules"], [511, "submodules"], [515, "submodules"], [518, "submodules"]], "nncf.common.insertion_point_graph": [[48, "module-nncf.common.insertion_point_graph"]], "nncf.common.logging": [[49, "module-nncf.common.logging"]], "nncf.common.logging.logger": [[50, "module-nncf.common.logging.logger"]], "nncf.common.logging.progress_bar": [[51, "module-nncf.common.logging.progress_bar"]], "nncf.common.pruning.clusterization": [[52, "module-nncf.common.pruning.clusterization"]], "nncf.common.pruning": [[53, "module-nncf.common.pruning"]], "nncf.common.pruning.mask_propagation": [[54, "module-nncf.common.pruning.mask_propagation"]], "nncf.common.pruning.model_analysis": [[55, "module-nncf.common.pruning.model_analysis"]], "nncf.common.pruning.node_selector": [[56, "module-nncf.common.pruning.node_selector"]], "nncf.common.pruning.operations": [[57, "module-nncf.common.pruning.operations"]], "nncf.common.pruning.schedulers": [[58, "module-nncf.common.pruning.schedulers"]], "nncf.common.pruning.shape_pruning_processor": [[59, "module-nncf.common.pruning.shape_pruning_processor"]], "nncf.common.pruning.statistics": [[60, "module-nncf.common.pruning.statistics"]], "nncf.common.pruning.structs": [[61, "module-nncf.common.pruning.structs"]], "nncf.common.pruning.symbolic_mask": [[62, "module-nncf.common.pruning.symbolic_mask"]], "nncf.common.pruning.tensor_processor": [[63, "module-nncf.common.pruning.tensor_processor"]], "nncf.common.pruning.utils": [[64, "module-nncf.common.pruning.utils"]], "nncf.common.pruning.weights_flops_calculator": [[65, "module-nncf.common.pruning.weights_flops_calculator"]], "nncf.common.quantization.collectors": [[66, "module-nncf.common.quantization.collectors"]], "nncf.common.quantization.config_assignment": [[67, "module-nncf.common.quantization.config_assignment"]], "nncf.common.quantization": [[68, "module-nncf.common.quantization"]], "nncf.common.quantization.initialization": [[69, "module-nncf.common.quantization.initialization"]], "nncf.common.quantization.initialization.range": [[70, "module-nncf.common.quantization.initialization.range"]], "nncf.common.quantization.quantizer_propagation.graph": [[71, "module-nncf.common.quantization.quantizer_propagation.graph"]], "nncf.common.quantization.quantizer_propagation.grouping": [[72, "module-nncf.common.quantization.quantizer_propagation.grouping"]], "nncf.common.quantization.quantizer_propagation": [[73, "module-nncf.common.quantization.quantizer_propagation"]], "nncf.common.quantization.quantizer_propagation.solver": [[74, "module-nncf.common.quantization.quantizer_propagation.solver"]], "nncf.common.quantization.quantizer_propagation.structs": [[75, "module-nncf.common.quantization.quantizer_propagation.structs"]], "nncf.common.quantization.quantizer_propagation.visualizer": [[76, "module-nncf.common.quantization.quantizer_propagation.visualizer"]], "nncf.common.quantization.quantizer_removal": [[77, "module-nncf.common.quantization.quantizer_removal"]], "nncf.common.quantization.quantizer_setup": [[78, "module-nncf.common.quantization.quantizer_setup"]], "nncf.common.quantization.quantizers": [[79, "module-nncf.common.quantization.quantizers"]], "nncf.common.quantization.statistics": [[80, "module-nncf.common.quantization.statistics"]], "nncf.common.quantization.structs": [[81, "module-nncf.common.quantization.structs"]], "nncf.common.schedulers": [[82, "module-nncf.common.schedulers"]], "nncf.common.scopes": [[83, "module-nncf.common.scopes"]], "nncf.common.sparsity.collector": [[84, "module-nncf.common.sparsity.collector"]], "nncf.common.sparsity.controller": [[85, "module-nncf.common.sparsity.controller"]], "nncf.common.sparsity": [[86, "module-nncf.common.sparsity"]], "nncf.common.sparsity.schedulers": [[87, "module-nncf.common.sparsity.schedulers"]], "nncf.common.sparsity.statistics": [[88, "module-nncf.common.sparsity.statistics"]], "nncf.common.stateful_classes_registry": [[89, "module-nncf.common.stateful_classes_registry"]], "nncf.common.statistics": [[90, "module-nncf.common.statistics"]], "nncf.common.tensor": [[91, "module-nncf.common.tensor"]], "nncf.common.tensor_statistics.aggregator": [[92, "module-nncf.common.tensor_statistics.aggregator"]], "nncf.common.tensor_statistics.collectors": [[93, "module-nncf.common.tensor_statistics.collectors"]], "nncf.common.tensor_statistics": [[94, "module-nncf.common.tensor_statistics"]], "nncf.common.tensor_statistics.reduction": [[95, "module-nncf.common.tensor_statistics.reduction"]], "nncf.common.tensor_statistics.statistic_point": [[96, "module-nncf.common.tensor_statistics.statistic_point"]], "nncf.common.tensor_statistics.statistics": [[97, "module-nncf.common.tensor_statistics.statistics"]], "nncf.common.utils.backend": [[98, "module-nncf.common.utils.backend"]], "nncf.common.utils.debug": [[99, "module-nncf.common.utils.debug"]], "nncf.common.utils.decorators": [[100, "module-nncf.common.utils.decorators"]], "nncf.common.utils.dot_file_rw": [[101, "module-nncf.common.utils.dot_file_rw"]], "nncf.common.utils.helpers": [[102, "module-nncf.common.utils.helpers"]], "nncf.common.utils": [[103, "module-nncf.common.utils"]], "nncf.common.utils.logger": [[104, "module-nncf.common.utils.logger"]], "nncf.common.utils.os": [[105, "module-nncf.common.utils.os"]], "nncf.common.utils.patcher": [[106, "module-nncf.common.utils.patcher"]], "nncf.common.utils.registry": [[107, "module-nncf.common.utils.registry"]], "nncf.common.utils.tensorboard": [[108, "module-nncf.common.utils.tensorboard"]], "nncf.common.utils.timer": [[109, "module-nncf.common.utils.timer"]], "nncf.config.config": [[110, "module-nncf.config.config"]], "nncf.config.definitions": [[111, "module-nncf.config.definitions"]], "nncf.config.extractors": [[112, "module-nncf.config.extractors"]], "nncf.config": [[113, "module-nncf.config"]], "nncf.config.schema": [[114, "module-nncf.config.schema"]], "nncf.config.schemata.accuracy_aware": [[115, "module-nncf.config.schemata.accuracy_aware"]], "nncf.config.schemata.algo.binarization": [[116, "module-nncf.config.schemata.algo.binarization"]], "nncf.config.schemata.algo.const_sparsity": [[117, "module-nncf.config.schemata.algo.const_sparsity"]], "nncf.config.schemata.algo.filter_pruning": [[118, "module-nncf.config.schemata.algo.filter_pruning"]], "nncf.config.schemata.algo": [[119, "module-nncf.config.schemata.algo"]], "nncf.config.schemata.algo.knowledge_distillation": [[120, "module-nncf.config.schemata.algo.knowledge_distillation"]], "nncf.config.schemata.algo.magnitude_sparsity": [[121, "module-nncf.config.schemata.algo.magnitude_sparsity"]], "nncf.config.schemata.algo.quantization": [[122, "module-nncf.config.schemata.algo.quantization"]], "nncf.config.schemata.algo.rb_sparsity": [[123, "module-nncf.config.schemata.algo.rb_sparsity"]], "nncf.config.schemata.basic": [[124, "module-nncf.config.schemata.basic"]], "nncf.config.schemata.common.compression": [[125, "module-nncf.config.schemata.common.compression"]], "nncf.config.schemata.common": [[126, "module-nncf.config.schemata.common"]], "nncf.config.schemata.common.initialization": [[127, "module-nncf.config.schemata.common.initialization"]], "nncf.config.schemata.common.sparsity": [[128, "module-nncf.config.schemata.common.sparsity"]], "nncf.config.schemata.common.targeting": [[129, "module-nncf.config.schemata.common.targeting"]], "nncf.config.schemata.defaults": [[130, "module-nncf.config.schemata.defaults"]], "nncf.config.schemata.experimental_schema": [[131, "module-nncf.config.schemata.experimental_schema"]], "nncf.config.schemata": [[132, "module-nncf.config.schemata"]], "nncf.config.structures": [[133, "module-nncf.config.structures"]], "nncf.config.telemetry_extractors": [[134, "module-nncf.config.telemetry_extractors"]], "nncf.config.utils": [[135, "module-nncf.config.utils"]], "nncf.data.dataset": [[136, "module-nncf.data.dataset"]], "nncf.data": [[137, "module-nncf.data"]], "nncf.definitions": [[138, "module-nncf.definitions"]], "nncf.experimental.common.graph": [[139, "module-nncf.experimental.common.graph"]], "nncf.experimental.common.graph.netron": [[140, "module-nncf.experimental.common.graph.netron"]], "nncf.experimental.common": [[141, "module-nncf.experimental.common"]], "nncf.experimental.common.pruning.block_hierarchy": [[142, "module-nncf.experimental.common.pruning.block_hierarchy"]], "nncf.experimental.common.pruning": [[143, "module-nncf.experimental.common.pruning"]], "nncf.experimental.common.pruning.nodes_grouping": [[144, "module-nncf.experimental.common.pruning.nodes_grouping"]], "nncf.experimental.common.pruning.operations": [[145, "module-nncf.experimental.common.pruning.operations"]], "nncf.experimental.common.pruning.propagation_data": [[146, "module-nncf.experimental.common.pruning.propagation_data"]], "nncf.experimental.common.tensor_statistics.collectors": [[147, "module-nncf.experimental.common.tensor_statistics.collectors"]], "nncf.experimental.common.tensor_statistics": [[148, "module-nncf.experimental.common.tensor_statistics"]], "nncf.experimental": [[149, "module-nncf.experimental"]], "nncf.experimental.openvino": [[150, "module-nncf.experimental.openvino"]], "nncf.experimental.openvino.quantization": [[151, "module-nncf.experimental.openvino.quantization"]], "nncf.experimental.openvino.quantization.quantize": [[152, "module-nncf.experimental.openvino.quantization.quantize"]], "nncf.experimental.openvino_native.engine": [[153, "module-nncf.experimental.openvino_native.engine"]], "nncf.experimental.openvino_native.graph": [[154, "module-nncf.experimental.openvino_native.graph"]], "nncf.experimental.openvino_native.graph.metatypes.common": [[155, "module-nncf.experimental.openvino_native.graph.metatypes.common"]], "nncf.experimental.openvino_native.graph.metatypes": [[156, "module-nncf.experimental.openvino_native.graph.metatypes"]], "nncf.experimental.openvino_native.graph.metatypes.openvino_metatypes": [[157, "module-nncf.experimental.openvino_native.graph.metatypes.openvino_metatypes"]], "nncf.experimental.openvino_native.graph.model_transformer": [[158, "module-nncf.experimental.openvino_native.graph.model_transformer"]], "nncf.experimental.openvino_native.graph.nncf_graph_builder": [[159, "module-nncf.experimental.openvino_native.graph.nncf_graph_builder"]], "nncf.experimental.openvino_native.graph.node_utils": [[160, "module-nncf.experimental.openvino_native.graph.node_utils"]], "nncf.experimental.openvino_native.graph.transformations.command_creation": [[161, "module-nncf.experimental.openvino_native.graph.transformations.command_creation"]], "nncf.experimental.openvino_native.graph.transformations.commands": [[162, "module-nncf.experimental.openvino_native.graph.transformations.commands"]], "nncf.experimental.openvino_native.graph.transformations": [[163, "module-nncf.experimental.openvino_native.graph.transformations"]], "nncf.experimental.openvino_native.hardware.config": [[164, "module-nncf.experimental.openvino_native.hardware.config"]], "nncf.experimental.openvino_native.hardware.fused_patterns": [[165, "module-nncf.experimental.openvino_native.hardware.fused_patterns"]], "nncf.experimental.openvino_native.hardware": [[166, "module-nncf.experimental.openvino_native.hardware"]], "nncf.experimental.openvino_native.hardware.pattern_operations": [[167, "module-nncf.experimental.openvino_native.hardware.pattern_operations"]], "nncf.experimental.openvino_native": [[168, "module-nncf.experimental.openvino_native"]], "nncf.experimental.openvino_native.quantization.algorithms.bias_correction": [[169, "module-nncf.experimental.openvino_native.quantization.algorithms.bias_correction"]], "nncf.experimental.openvino_native.quantization.algorithms.bias_correction.openvino_backend": [[170, "module-nncf.experimental.openvino_native.quantization.algorithms.bias_correction.openvino_backend"]], "nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction": [[171, "module-nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction"]], "nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction.openvino_backend": [[172, "module-nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction.openvino_backend"]], "nncf.experimental.openvino_native.quantization.algorithms": [[173, "module-nncf.experimental.openvino_native.quantization.algorithms"]], "nncf.experimental.openvino_native.quantization.algorithms.min_max": [[174, "module-nncf.experimental.openvino_native.quantization.algorithms.min_max"]], "nncf.experimental.openvino_native.quantization.algorithms.min_max.openvino_backend": [[175, "module-nncf.experimental.openvino_native.quantization.algorithms.min_max.openvino_backend"]], "nncf.experimental.openvino_native.quantization.default_quantization": [[176, "module-nncf.experimental.openvino_native.quantization.default_quantization"]], "nncf.experimental.openvino_native.quantization": [[177, "module-nncf.experimental.openvino_native.quantization"]], "nncf.experimental.openvino_native.quantization.quantize": [[178, "module-nncf.experimental.openvino_native.quantization.quantize"]], "nncf.experimental.openvino_native.statistics.aggregator": [[179, "module-nncf.experimental.openvino_native.statistics.aggregator"]], "nncf.experimental.openvino_native.statistics.collectors": [[180, "module-nncf.experimental.openvino_native.statistics.collectors"]], "nncf.experimental.openvino_native.statistics": [[181, "module-nncf.experimental.openvino_native.statistics"]], "nncf.experimental.openvino_native.statistics.statistics": [[182, "module-nncf.experimental.openvino_native.statistics.statistics"]], "nncf.experimental.openvino_native.tensor": [[183, "module-nncf.experimental.openvino_native.tensor"]], "nncf.experimental.tensorflow.context": [[184, "module-nncf.experimental.tensorflow.context"]], "nncf.experimental.tensorflow.graph.argprovider": [[185, "module-nncf.experimental.tensorflow.graph.argprovider"]], "nncf.experimental.tensorflow.graph.converter": [[186, "module-nncf.experimental.tensorflow.graph.converter"]], "nncf.experimental.tensorflow.graph": [[187, "module-nncf.experimental.tensorflow.graph"]], "nncf.experimental.tensorflow.graph.model_transformer": [[188, "module-nncf.experimental.tensorflow.graph.model_transformer"]], "nncf.experimental.tensorflow.graph.node_attributes": [[189, "module-nncf.experimental.tensorflow.graph.node_attributes"]], "nncf.experimental.tensorflow.graph.transformations.commands": [[190, "module-nncf.experimental.tensorflow.graph.transformations.commands"]], "nncf.experimental.tensorflow.graph.transformations": [[191, "module-nncf.experimental.tensorflow.graph.transformations"]], "nncf.experimental.tensorflow.graph.transformations.layout": [[192, "module-nncf.experimental.tensorflow.graph.transformations.layout"]], "nncf.experimental.tensorflow": [[193, "module-nncf.experimental.tensorflow"]], "nncf.experimental.tensorflow.nncf_network": [[194, "module-nncf.experimental.tensorflow.nncf_network"]], "nncf.experimental.tensorflow.patch_tf": [[195, "module-nncf.experimental.tensorflow.patch_tf"]], "nncf.experimental.tensorflow.quantization.algorithm": [[196, "module-nncf.experimental.tensorflow.quantization.algorithm"]], "nncf.experimental.tensorflow.quantization": [[197, "module-nncf.experimental.tensorflow.quantization"]], "nncf.experimental.tensorflow.quantization.init_range": [[198, "module-nncf.experimental.tensorflow.quantization.init_range"]], "nncf.experimental.tensorflow.quantization.quantizers": [[199, "module-nncf.experimental.tensorflow.quantization.quantizers"]], "nncf.experimental.tensorflow.scope": [[200, "module-nncf.experimental.tensorflow.scope"]], "nncf.experimental.torch": [[201, "module-nncf.experimental.torch"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.base_handler": [[202, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.base_handler"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_depth": [[203, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_depth"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_kernel": [[204, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_kernel"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_width": [[205, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_width"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_builder": [[206, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_builder"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_controller": [[207, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_controller"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_dim": [[208, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_dim"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.filter_reorder": [[209, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.filter_reorder"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity": [[210, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.multi_elasticity_handler": [[211, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.multi_elasticity_handler"]], "nncf.experimental.torch.nas.bootstrapNAS.elasticity.visualization": [[212, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.visualization"]], "nncf.experimental.torch.nas.bootstrapNAS": [[213, "module-nncf.experimental.torch.nas.bootstrapNAS"]], "nncf.experimental.torch.nas.bootstrapNAS.search.evaluator": [[214, "module-nncf.experimental.torch.nas.bootstrapNAS.search.evaluator"]], "nncf.experimental.torch.nas.bootstrapNAS.search.evaluator_handler": [[215, "module-nncf.experimental.torch.nas.bootstrapNAS.search.evaluator_handler"]], "nncf.experimental.torch.nas.bootstrapNAS.search": [[216, "module-nncf.experimental.torch.nas.bootstrapNAS.search"]], "nncf.experimental.torch.nas.bootstrapNAS.search.search": [[217, "module-nncf.experimental.torch.nas.bootstrapNAS.search.search"]], "nncf.experimental.torch.nas.bootstrapNAS.training.base_training": [[218, "module-nncf.experimental.torch.nas.bootstrapNAS.training.base_training"]], "nncf.experimental.torch.nas.bootstrapNAS.training": [[219, "module-nncf.experimental.torch.nas.bootstrapNAS.training"]], "nncf.experimental.torch.nas.bootstrapNAS.training.lr_scheduler": [[220, "module-nncf.experimental.torch.nas.bootstrapNAS.training.lr_scheduler"]], "nncf.experimental.torch.nas.bootstrapNAS.training.model_creator_helpers": [[221, "module-nncf.experimental.torch.nas.bootstrapNAS.training.model_creator_helpers"]], "nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_builder": [[222, "module-nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_builder"]], "nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_controller": [[223, "module-nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_controller"]], "nncf.experimental.torch.nas.bootstrapNAS.training.scheduler": [[224, "module-nncf.experimental.torch.nas.bootstrapNAS.training.scheduler"]], "nncf.experimental.torch.nas.bootstrapNAS.training.stage_descriptor": [[225, "module-nncf.experimental.torch.nas.bootstrapNAS.training.stage_descriptor"]], "nncf.experimental.torch.nas.bootstrapNAS.training.training_algorithm": [[226, "module-nncf.experimental.torch.nas.bootstrapNAS.training.training_algorithm"]], "nncf.experimental.torch.nas": [[227, "module-nncf.experimental.torch.nas"]], "nncf.experimental.torch.pruning": [[228, "module-nncf.experimental.torch.pruning"]], "nncf.experimental.torch.pruning.operations": [[229, "module-nncf.experimental.torch.pruning.operations"]], "nncf.experimental.torch.quantization": [[230, "module-nncf.experimental.torch.quantization"]], "nncf.experimental.torch.quantization.quantize": [[231, "module-nncf.experimental.torch.quantization.quantize"]], "nncf.experimental.torch.search_building_blocks": [[232, "module-nncf.experimental.torch.search_building_blocks"]], "nncf.experimental.torch.search_building_blocks.search_blocks": [[233, "module-nncf.experimental.torch.search_building_blocks.search_blocks"]], "nncf.experimental.torch.search_building_blocks.search_graph": [[234, "module-nncf.experimental.torch.search_building_blocks.search_graph"]], "nncf.experimental.torch.sparsity": [[235, "module-nncf.experimental.torch.sparsity"]], "nncf.experimental.torch.sparsity.movement.algo": [[236, "module-nncf.experimental.torch.sparsity.movement.algo"]], "nncf.experimental.torch.sparsity.movement.functions": [[237, "module-nncf.experimental.torch.sparsity.movement.functions"]], "nncf.experimental.torch.sparsity.movement": [[238, "module-nncf.experimental.torch.sparsity.movement"]], "nncf.experimental.torch.sparsity.movement.layers": [[239, "module-nncf.experimental.torch.sparsity.movement.layers"]], "nncf.experimental.torch.sparsity.movement.loss": [[240, "module-nncf.experimental.torch.sparsity.movement.loss"]], "nncf.experimental.torch.sparsity.movement.scheduler": [[241, "module-nncf.experimental.torch.sparsity.movement.scheduler"]], "nncf.experimental.torch.sparsity.movement.structured_mask_handler": [[242, "module-nncf.experimental.torch.sparsity.movement.structured_mask_handler"]], "nncf": [[243, "module-nncf"]], "Functions": [[243, "functions"], [345, "functions"], [449, "functions"]], "nncf.onnx.engine": [[244, "module-nncf.onnx.engine"]], "nncf.onnx.graph": [[245, "module-nncf.onnx.graph"]], "nncf.onnx.graph.metatypes": [[246, "module-nncf.onnx.graph.metatypes"]], "nncf.onnx.graph.metatypes.onnx_metatypes": [[247, "module-nncf.onnx.graph.metatypes.onnx_metatypes"]], "nncf.onnx.graph.model_transformer": [[248, "module-nncf.onnx.graph.model_transformer"]], "nncf.onnx.graph.nncf_graph_builder": [[249, "module-nncf.onnx.graph.nncf_graph_builder"]], "nncf.onnx.graph.node_utils": [[250, "module-nncf.onnx.graph.node_utils"]], "nncf.onnx.graph.onnx_graph": [[251, "module-nncf.onnx.graph.onnx_graph"]], "nncf.onnx.graph.transformations.command_creation": [[252, "module-nncf.onnx.graph.transformations.command_creation"]], "nncf.onnx.graph.transformations.commands": [[253, "module-nncf.onnx.graph.transformations.commands"]], "nncf.onnx.graph.transformations": [[254, "module-nncf.onnx.graph.transformations"]], "nncf.onnx.hardware.config": [[255, "module-nncf.onnx.hardware.config"]], "nncf.onnx.hardware.fused_patterns": [[256, "module-nncf.onnx.hardware.fused_patterns"]], "nncf.onnx.hardware": [[257, "module-nncf.onnx.hardware"]], "nncf.onnx.hardware.pattern_operations": [[258, "module-nncf.onnx.hardware.pattern_operations"]], "nncf.onnx": [[259, "module-nncf.onnx"]], "nncf.onnx.quantization.default_quantization": [[260, "module-nncf.onnx.quantization.default_quantization"]], "nncf.onnx.quantization": [[261, "module-nncf.onnx.quantization"]], "nncf.onnx.quantization.quantize": [[262, "module-nncf.onnx.quantization.quantize"]], "nncf.onnx.quantization.quantizer_parameters": [[263, "module-nncf.onnx.quantization.quantizer_parameters"]], "nncf.onnx.statistics.aggregator": [[264, "module-nncf.onnx.statistics.aggregator"]], "nncf.onnx.statistics.collectors": [[265, "module-nncf.onnx.statistics.collectors"]], "nncf.onnx.statistics": [[266, "module-nncf.onnx.statistics"]], "nncf.onnx.statistics.statistics": [[267, "module-nncf.onnx.statistics.statistics"]], "nncf.onnx.tensor": [[268, "module-nncf.onnx.tensor"]], "nncf.openvino.engine": [[269, "module-nncf.openvino.engine"]], "nncf.openvino": [[270, "module-nncf.openvino"]], "nncf.openvino.quantization.accuracy_aware": [[271, "module-nncf.openvino.quantization.accuracy_aware"]], "nncf.openvino.quantization": [[272, "module-nncf.openvino.quantization"]], "nncf.openvino.quantization.quantize": [[273, "module-nncf.openvino.quantization.quantize"]], "nncf.parameters": [[274, "module-nncf.parameters"]], "nncf.quantization.algorithms.accuracy_control.algorithm": [[275, "module-nncf.quantization.algorithms.accuracy_control.algorithm"]], "nncf.quantization.algorithms.accuracy_control.backend": [[276, "module-nncf.quantization.algorithms.accuracy_control.backend"]], "nncf.quantization.algorithms.accuracy_control": [[277, "module-nncf.quantization.algorithms.accuracy_control"]], "nncf.quantization.algorithms.accuracy_control.openvino_backend": [[278, "module-nncf.quantization.algorithms.accuracy_control.openvino_backend"]], "nncf.quantization.algorithms.accuracy_control.rank_functions": [[279, "module-nncf.quantization.algorithms.accuracy_control.rank_functions"]], "nncf.quantization.algorithms.accuracy_control.ranker": [[280, "module-nncf.quantization.algorithms.accuracy_control.ranker"]], "nncf.quantization.algorithms.algorithm": [[281, "module-nncf.quantization.algorithms.algorithm"]], "nncf.quantization.algorithms.bias_correction.algorithm": [[282, "module-nncf.quantization.algorithms.bias_correction.algorithm"]], "nncf.quantization.algorithms.bias_correction.backend": [[283, "module-nncf.quantization.algorithms.bias_correction.backend"]], "nncf.quantization.algorithms.bias_correction": [[284, "module-nncf.quantization.algorithms.bias_correction"]], "nncf.quantization.algorithms.bias_correction.onnx_backend": [[285, "module-nncf.quantization.algorithms.bias_correction.onnx_backend"]], "nncf.quantization.algorithms.definitions": [[286, "module-nncf.quantization.algorithms.definitions"]], "nncf.quantization.algorithms.fast_bias_correction.algorithm": [[287, "module-nncf.quantization.algorithms.fast_bias_correction.algorithm"]], "nncf.quantization.algorithms.fast_bias_correction.backend": [[288, "module-nncf.quantization.algorithms.fast_bias_correction.backend"]], "nncf.quantization.algorithms.fast_bias_correction": [[289, "module-nncf.quantization.algorithms.fast_bias_correction"]], "nncf.quantization.algorithms.fast_bias_correction.onnx_backend": [[290, "module-nncf.quantization.algorithms.fast_bias_correction.onnx_backend"]], "nncf.quantization.algorithms": [[291, "module-nncf.quantization.algorithms"]], "nncf.quantization.algorithms.min_max.algorithm": [[292, "module-nncf.quantization.algorithms.min_max.algorithm"]], "nncf.quantization.algorithms.min_max.backend": [[293, "module-nncf.quantization.algorithms.min_max.backend"]], "nncf.quantization.algorithms.min_max": [[294, "module-nncf.quantization.algorithms.min_max"]], "nncf.quantization.algorithms.min_max.onnx_backend": [[295, "module-nncf.quantization.algorithms.min_max.onnx_backend"]], "nncf.quantization.algorithms.min_max.torch_backend": [[296, "module-nncf.quantization.algorithms.min_max.torch_backend"]], "nncf.quantization.algorithms.post_training.algorithm": [[297, "module-nncf.quantization.algorithms.post_training.algorithm"]], "nncf.quantization.algorithms.post_training": [[298, "module-nncf.quantization.algorithms.post_training"]], "nncf.quantization.fake_quantize": [[299, "module-nncf.quantization.fake_quantize"]], "nncf.quantization": [[300, "module-nncf.quantization"]], "nncf.quantization.passes": [[301, "module-nncf.quantization.passes"]], "nncf.quantization.quantize": [[302, "module-nncf.quantization.quantize"]], "nncf.quantization.telemetry_extractors": [[303, "module-nncf.quantization.telemetry_extractors"]], "nncf.scopes": [[304, "module-nncf.scopes"]], "nncf.telemetry.decorator": [[305, "module-nncf.telemetry.decorator"]], "nncf.telemetry.events": [[306, "module-nncf.telemetry.events"]], "nncf.telemetry.extractors": [[307, "module-nncf.telemetry.extractors"]], "nncf.telemetry": [[308, "module-nncf.telemetry"]], "nncf.telemetry.wrapper": [[309, "module-nncf.telemetry.wrapper"]], "nncf.tensorflow.accuracy_aware_training": [[310, "module-nncf.tensorflow.accuracy_aware_training"]], "nncf.tensorflow.accuracy_aware_training.keras_model_utils": [[311, "module-nncf.tensorflow.accuracy_aware_training.keras_model_utils"]], "nncf.tensorflow.accuracy_aware_training.runner": [[312, "module-nncf.tensorflow.accuracy_aware_training.runner"]], "nncf.tensorflow.algorithm_selector": [[313, "module-nncf.tensorflow.algorithm_selector"]], "nncf.tensorflow.api.composite_compression": [[314, "module-nncf.tensorflow.api.composite_compression"]], "nncf.tensorflow.api.compression": [[315, "module-nncf.tensorflow.api.compression"]], "nncf.tensorflow.api": [[316, "module-nncf.tensorflow.api"]], "nncf.tensorflow.batchnorm_adaptation": [[317, "module-nncf.tensorflow.batchnorm_adaptation"]], "nncf.tensorflow.callbacks.checkpoint_callback": [[318, "module-nncf.tensorflow.callbacks.checkpoint_callback"]], "nncf.tensorflow.callbacks": [[319, "module-nncf.tensorflow.callbacks"]], "nncf.tensorflow.callbacks.statistics_callback": [[320, "module-nncf.tensorflow.callbacks.statistics_callback"]], "nncf.tensorflow.exporter": [[321, "module-nncf.tensorflow.exporter"]], "nncf.tensorflow.functions": [[322, "module-nncf.tensorflow.functions"]], "nncf.tensorflow.graph.converter": [[323, "module-nncf.tensorflow.graph.converter"]], "nncf.tensorflow.graph": [[324, "module-nncf.tensorflow.graph"]], "nncf.tensorflow.graph.metatypes.common": [[325, "module-nncf.tensorflow.graph.metatypes.common"]], "nncf.tensorflow.graph.metatypes": [[326, "module-nncf.tensorflow.graph.metatypes"]], "nncf.tensorflow.graph.metatypes.keras_layers": [[327, "module-nncf.tensorflow.graph.metatypes.keras_layers"]], "nncf.tensorflow.graph.metatypes.matcher": [[328, "module-nncf.tensorflow.graph.metatypes.matcher"]], "nncf.tensorflow.graph.metatypes.tf_ops": [[329, "module-nncf.tensorflow.graph.metatypes.tf_ops"]], "nncf.tensorflow.graph.model_transformer": [[330, "module-nncf.tensorflow.graph.model_transformer"]], "nncf.tensorflow.graph.pattern_operations": [[331, "module-nncf.tensorflow.graph.pattern_operations"]], "nncf.tensorflow.graph.patterns": [[332, "module-nncf.tensorflow.graph.patterns"]], "nncf.tensorflow.graph.transformations.commands": [[333, "module-nncf.tensorflow.graph.transformations.commands"]], "nncf.tensorflow.graph.transformations": [[334, "module-nncf.tensorflow.graph.transformations"]], "nncf.tensorflow.graph.transformations.layout": [[335, "module-nncf.tensorflow.graph.transformations.layout"]], "nncf.tensorflow.graph.utils": [[336, "module-nncf.tensorflow.graph.utils"]], "nncf.tensorflow.hardware.config": [[337, "module-nncf.tensorflow.hardware.config"]], "nncf.tensorflow.hardware.fused_patterns": [[338, "module-nncf.tensorflow.hardware.fused_patterns"]], "nncf.tensorflow.hardware": [[339, "module-nncf.tensorflow.hardware"]], "nncf.tensorflow.helpers.callback_creation": [[340, "module-nncf.tensorflow.helpers.callback_creation"]], "nncf.tensorflow.helpers": [[341, "module-nncf.tensorflow.helpers"]], "nncf.tensorflow.helpers.model_creation": [[342, "module-nncf.tensorflow.helpers.model_creation"]], "nncf.tensorflow.helpers.model_manager": [[343, "module-nncf.tensorflow.helpers.model_manager"]], "nncf.tensorflow.helpers.utils": [[344, "module-nncf.tensorflow.helpers.utils"]], "nncf.tensorflow": [[345, "module-nncf.tensorflow"]], "nncf.tensorflow.initialization": [[346, "module-nncf.tensorflow.initialization"]], "nncf.tensorflow.layers.custom_objects": [[347, "module-nncf.tensorflow.layers.custom_objects"]], "nncf.tensorflow.layers.data_layout": [[348, "module-nncf.tensorflow.layers.data_layout"]], "nncf.tensorflow.layers": [[349, "module-nncf.tensorflow.layers"]], "nncf.tensorflow.layers.operation": [[350, "module-nncf.tensorflow.layers.operation"]], "nncf.tensorflow.layers.wrapper": [[351, "module-nncf.tensorflow.layers.wrapper"]], "nncf.tensorflow.loss": [[352, "module-nncf.tensorflow.loss"]], "nncf.tensorflow.pruning.base_algorithm": [[353, "module-nncf.tensorflow.pruning.base_algorithm"]], "nncf.tensorflow.pruning.callbacks": [[354, "module-nncf.tensorflow.pruning.callbacks"]], "nncf.tensorflow.pruning.filter_pruning.algorithm": [[355, "module-nncf.tensorflow.pruning.filter_pruning.algorithm"]], "nncf.tensorflow.pruning.filter_pruning.functions": [[356, "module-nncf.tensorflow.pruning.filter_pruning.functions"]], "nncf.tensorflow.pruning.filter_pruning": [[357, "module-nncf.tensorflow.pruning.filter_pruning"]], "nncf.tensorflow.pruning": [[358, "module-nncf.tensorflow.pruning"]], "nncf.tensorflow.pruning.operations": [[359, "module-nncf.tensorflow.pruning.operations"]], "nncf.tensorflow.pruning.tensor_processor": [[360, "module-nncf.tensorflow.pruning.tensor_processor"]], "nncf.tensorflow.pruning.utils": [[361, "module-nncf.tensorflow.pruning.utils"]], "nncf.tensorflow.quantization.algorithm": [[362, "module-nncf.tensorflow.quantization.algorithm"]], "nncf.tensorflow.quantization.collectors": [[363, "module-nncf.tensorflow.quantization.collectors"]], "nncf.tensorflow.quantization.default_quantization": [[364, "module-nncf.tensorflow.quantization.default_quantization"]], "nncf.tensorflow.quantization.functions": [[365, "module-nncf.tensorflow.quantization.functions"]], "nncf.tensorflow.quantization": [[366, "module-nncf.tensorflow.quantization"]], "nncf.tensorflow.quantization.init_range": [[367, "module-nncf.tensorflow.quantization.init_range"]], "nncf.tensorflow.quantization.layers": [[368, "module-nncf.tensorflow.quantization.layers"]], "nncf.tensorflow.quantization.quantize": [[369, "module-nncf.tensorflow.quantization.quantize"]], "nncf.tensorflow.quantization.quantizers": [[370, "module-nncf.tensorflow.quantization.quantizers"]], "nncf.tensorflow.quantization.utils": [[371, "module-nncf.tensorflow.quantization.utils"]], "nncf.tensorflow.sparsity.base_algorithm": [[372, "module-nncf.tensorflow.sparsity.base_algorithm"]], "nncf.tensorflow.sparsity.callbacks": [[373, "module-nncf.tensorflow.sparsity.callbacks"]], "nncf.tensorflow.sparsity.collector": [[374, "module-nncf.tensorflow.sparsity.collector"]], "nncf.tensorflow.sparsity": [[375, "module-nncf.tensorflow.sparsity"]], "nncf.tensorflow.sparsity.magnitude.algorithm": [[376, "module-nncf.tensorflow.sparsity.magnitude.algorithm"]], "nncf.tensorflow.sparsity.magnitude.functions": [[377, "module-nncf.tensorflow.sparsity.magnitude.functions"]], "nncf.tensorflow.sparsity.magnitude": [[378, "module-nncf.tensorflow.sparsity.magnitude"]], "nncf.tensorflow.sparsity.magnitude.operation": [[379, "module-nncf.tensorflow.sparsity.magnitude.operation"]], "nncf.tensorflow.sparsity.rb.algorithm": [[380, "module-nncf.tensorflow.sparsity.rb.algorithm"]], "nncf.tensorflow.sparsity.rb.functions": [[381, "module-nncf.tensorflow.sparsity.rb.functions"]], "nncf.tensorflow.sparsity.rb": [[382, "module-nncf.tensorflow.sparsity.rb"]], "nncf.tensorflow.sparsity.rb.loss": [[383, "module-nncf.tensorflow.sparsity.rb.loss"]], "nncf.tensorflow.sparsity.rb.operation": [[384, "module-nncf.tensorflow.sparsity.rb.operation"]], "nncf.tensorflow.sparsity.utils": [[385, "module-nncf.tensorflow.sparsity.utils"]], "nncf.tensorflow.tensor": [[386, "module-nncf.tensorflow.tensor"]], "nncf.tensorflow.tensor_statistics.collectors": [[387, "module-nncf.tensorflow.tensor_statistics.collectors"]], "nncf.tensorflow.tensor_statistics": [[388, "module-nncf.tensorflow.tensor_statistics"]], "nncf.tensorflow.tensor_statistics.reduction": [[389, "module-nncf.tensorflow.tensor_statistics.reduction"]], "nncf.tensorflow.tensor_statistics.statistics": [[390, "module-nncf.tensorflow.tensor_statistics.statistics"]], "nncf.tensorflow.tf_internals": [[391, "module-nncf.tensorflow.tf_internals"]], "nncf.tensorflow.utils.hook_handle": [[392, "module-nncf.tensorflow.utils.hook_handle"]], "nncf.tensorflow.utils": [[393, "module-nncf.tensorflow.utils"]], "nncf.tensorflow.utils.node": [[394, "module-nncf.tensorflow.utils.node"]], "nncf.tensorflow.utils.scopes_handle": [[395, "module-nncf.tensorflow.utils.scopes_handle"]], "nncf.tensorflow.utils.state": [[396, "module-nncf.tensorflow.utils.state"]], "nncf.torch.accuracy_aware_training": [[397, "module-nncf.torch.accuracy_aware_training"]], "nncf.torch.accuracy_aware_training.runner": [[398, "module-nncf.torch.accuracy_aware_training.runner"]], "nncf.torch.accuracy_aware_training.utils": [[399, "module-nncf.torch.accuracy_aware_training.utils"]], "nncf.torch.algo_selector": [[400, "module-nncf.torch.algo_selector"]], "nncf.torch.automl.agent.ddpg.ddpg": [[401, "module-nncf.torch.automl.agent.ddpg.ddpg"]], "nncf.torch.automl.agent.ddpg": [[402, "module-nncf.torch.automl.agent.ddpg"]], "nncf.torch.automl.agent.ddpg.memory": [[403, "module-nncf.torch.automl.agent.ddpg.memory"]], "nncf.torch.automl.agent": [[404, "module-nncf.torch.automl.agent"]], "nncf.torch.automl.environment": [[405, "module-nncf.torch.automl.environment"]], "nncf.torch.automl.environment.quantization_env": [[406, "module-nncf.torch.automl.environment.quantization_env"]], "nncf.torch.automl": [[407, "module-nncf.torch.automl"]], "nncf.torch.batchnorm_adaptation": [[408, "module-nncf.torch.batchnorm_adaptation"]], "nncf.torch.binarization.algo": [[409, "module-nncf.torch.binarization.algo"]], "nncf.torch.binarization.binarize_functions": [[410, "module-nncf.torch.binarization.binarize_functions"]], "nncf.torch.binarization.extensions": [[411, "module-nncf.torch.binarization.extensions"]], "nncf.torch.binarization": [[412, "module-nncf.torch.binarization"]], "nncf.torch.binarization.layers": [[413, "module-nncf.torch.binarization.layers"]], "nncf.torch.binarization.reference": [[414, "module-nncf.torch.binarization.reference"]], "nncf.torch.checkpoint_loading": [[415, "module-nncf.torch.checkpoint_loading"]], "nncf.torch.composite_compression": [[416, "module-nncf.torch.composite_compression"]], "nncf.torch.compression_method_api": [[417, "module-nncf.torch.compression_method_api"]], "nncf.torch.debug": [[418, "module-nncf.torch.debug"]], "nncf.torch.dynamic_graph.context": [[419, "module-nncf.torch.dynamic_graph.context"]], "nncf.torch.dynamic_graph.graph": [[420, "module-nncf.torch.dynamic_graph.graph"]], "nncf.torch.dynamic_graph.graph_tracer": [[421, "module-nncf.torch.dynamic_graph.graph_tracer"]], "nncf.torch.dynamic_graph": [[422, "module-nncf.torch.dynamic_graph"]], "nncf.torch.dynamic_graph.io_handling": [[423, "module-nncf.torch.dynamic_graph.io_handling"]], "nncf.torch.dynamic_graph.layer_attributes_handlers": [[424, "module-nncf.torch.dynamic_graph.layer_attributes_handlers"]], "nncf.torch.dynamic_graph.op_input_processing": [[425, "module-nncf.torch.dynamic_graph.op_input_processing"]], "nncf.torch.dynamic_graph.operation_address": [[426, "module-nncf.torch.dynamic_graph.operation_address"]], "nncf.torch.dynamic_graph.patch_pytorch": [[427, "module-nncf.torch.dynamic_graph.patch_pytorch"]], "nncf.torch.dynamic_graph.scope": [[428, "module-nncf.torch.dynamic_graph.scope"]], "nncf.torch.dynamic_graph.scope_access": [[429, "module-nncf.torch.dynamic_graph.scope_access"]], "nncf.torch.dynamic_graph.structs": [[430, "module-nncf.torch.dynamic_graph.structs"]], "nncf.torch.dynamic_graph.trace_functions": [[431, "module-nncf.torch.dynamic_graph.trace_functions"]], "nncf.torch.dynamic_graph.trace_tensor": [[432, "module-nncf.torch.dynamic_graph.trace_tensor"]], "nncf.torch.dynamic_graph.wrappers": [[433, "module-nncf.torch.dynamic_graph.wrappers"]], "nncf.torch.engine": [[434, "module-nncf.torch.engine"]], "nncf.torch.exporter": [[435, "module-nncf.torch.exporter"]], "nncf.torch.extensions": [[436, "module-nncf.torch.extensions"]], "nncf.torch.functions": [[437, "module-nncf.torch.functions"]], "nncf.torch.graph.graph": [[438, "module-nncf.torch.graph.graph"]], "nncf.torch.graph.graph_builder": [[439, "module-nncf.torch.graph.graph_builder"]], "nncf.torch.graph": [[440, "module-nncf.torch.graph"]], "nncf.torch.graph.operator_metatypes": [[441, "module-nncf.torch.graph.operator_metatypes"]], "nncf.torch.graph.pattern_operations": [[442, "module-nncf.torch.graph.pattern_operations"]], "nncf.torch.graph.transformations.commands": [[443, "module-nncf.torch.graph.transformations.commands"]], "nncf.torch.graph.transformations": [[444, "module-nncf.torch.graph.transformations"]], "nncf.torch.graph.transformations.layout": [[445, "module-nncf.torch.graph.transformations.layout"]], "nncf.torch.hardware.config": [[446, "module-nncf.torch.hardware.config"]], "nncf.torch.hardware.fused_patterns": [[447, "module-nncf.torch.hardware.fused_patterns"]], "nncf.torch.hardware": [[448, "module-nncf.torch.hardware"]], "nncf.torch": [[449, "module-nncf.torch"]], "nncf.torch.initialization": [[450, "module-nncf.torch.initialization"]], "nncf.torch.knowledge_distillation.algo": [[451, "module-nncf.torch.knowledge_distillation.algo"]], "nncf.torch.knowledge_distillation": [[452, "module-nncf.torch.knowledge_distillation"]], "nncf.torch.knowledge_distillation.knowledge_distillation_handler": [[453, "module-nncf.torch.knowledge_distillation.knowledge_distillation_handler"]], "nncf.torch.knowledge_distillation.knowledge_distillation_loss": [[454, "module-nncf.torch.knowledge_distillation.knowledge_distillation_loss"]], "nncf.torch.layer_utils": [[455, "module-nncf.torch.layer_utils"]], "nncf.torch.layers": [[456, "module-nncf.torch.layers"]], "nncf.torch.model_creation": [[457, "module-nncf.torch.model_creation"]], "nncf.torch.module_operations": [[458, "module-nncf.torch.module_operations"]], "nncf.torch.nested_objects_traversal": [[459, "module-nncf.torch.nested_objects_traversal"]], "nncf.torch.nncf_module_replacement": [[460, "module-nncf.torch.nncf_module_replacement"]], "nncf.torch.nncf_network": [[461, "module-nncf.torch.nncf_network"]], "nncf.torch.pruning.base_algo": [[462, "module-nncf.torch.pruning.base_algo"]], "nncf.torch.pruning.export_utils": [[463, "module-nncf.torch.pruning.export_utils"]], "nncf.torch.pruning.filter_pruning.algo": [[464, "module-nncf.torch.pruning.filter_pruning.algo"]], "nncf.torch.pruning.filter_pruning.functions": [[465, "module-nncf.torch.pruning.filter_pruning.functions"]], "nncf.torch.pruning.filter_pruning.global_ranking.evolutionary_optimization": [[466, "module-nncf.torch.pruning.filter_pruning.global_ranking.evolutionary_optimization"]], "nncf.torch.pruning.filter_pruning.global_ranking": [[467, "module-nncf.torch.pruning.filter_pruning.global_ranking"]], "nncf.torch.pruning.filter_pruning.global_ranking.legr": [[468, "module-nncf.torch.pruning.filter_pruning.global_ranking.legr"]], "nncf.torch.pruning.filter_pruning": [[469, "module-nncf.torch.pruning.filter_pruning"]], "nncf.torch.pruning.filter_pruning.layers": [[470, "module-nncf.torch.pruning.filter_pruning.layers"]], "nncf.torch.pruning": [[471, "module-nncf.torch.pruning"]], "nncf.torch.pruning.operations": [[472, "module-nncf.torch.pruning.operations"]], "nncf.torch.pruning.structs": [[473, "module-nncf.torch.pruning.structs"]], "nncf.torch.pruning.tensor_processor": [[474, "module-nncf.torch.pruning.tensor_processor"]], "nncf.torch.pruning.utils": [[475, "module-nncf.torch.pruning.utils"]], "nncf.torch.quantization.adjust_padding": [[476, "module-nncf.torch.quantization.adjust_padding"]], "nncf.torch.quantization.algo": [[477, "module-nncf.torch.quantization.algo"]], "nncf.torch.quantization.default_quantization": [[478, "module-nncf.torch.quantization.default_quantization"]], "nncf.torch.quantization.extensions": [[479, "module-nncf.torch.quantization.extensions"]], "nncf.torch.quantization.hessian_trace": [[480, "module-nncf.torch.quantization.hessian_trace"]], "nncf.torch.quantization": [[481, "module-nncf.torch.quantization"]], "nncf.torch.quantization.init_precision": [[482, "module-nncf.torch.quantization.init_precision"]], "nncf.torch.quantization.init_range": [[483, "module-nncf.torch.quantization.init_range"]], "nncf.torch.quantization.layers": [[484, "module-nncf.torch.quantization.layers"]], "nncf.torch.quantization.metrics": [[485, "module-nncf.torch.quantization.metrics"]], "nncf.torch.quantization.precision_constraints": [[486, "module-nncf.torch.quantization.precision_constraints"]], "nncf.torch.quantization.precision_init.adjacent_quantizers": [[487, "module-nncf.torch.quantization.precision_init.adjacent_quantizers"]], "nncf.torch.quantization.precision_init.autoq_init": [[488, "module-nncf.torch.quantization.precision_init.autoq_init"]], "nncf.torch.quantization.precision_init.base_init": [[489, "module-nncf.torch.quantization.precision_init.base_init"]], "nncf.torch.quantization.precision_init.bitwidth_graph": [[490, "module-nncf.torch.quantization.precision_init.bitwidth_graph"]], "nncf.torch.quantization.precision_init.compression_ratio": [[491, "module-nncf.torch.quantization.precision_init.compression_ratio"]], "nncf.torch.quantization.precision_init.hawq_debug": [[492, "module-nncf.torch.quantization.precision_init.hawq_debug"]], "nncf.torch.quantization.precision_init.hawq_init": [[493, "module-nncf.torch.quantization.precision_init.hawq_init"]], "nncf.torch.quantization.precision_init": [[494, "module-nncf.torch.quantization.precision_init"]], "nncf.torch.quantization.precision_init.manual_init": [[495, "module-nncf.torch.quantization.precision_init.manual_init"]], "nncf.torch.quantization.precision_init.perturbations": [[496, "module-nncf.torch.quantization.precision_init.perturbations"]], "nncf.torch.quantization.precision_init.traces_order": [[497, "module-nncf.torch.quantization.precision_init.traces_order"]], "nncf.torch.quantization.quantize": [[498, "module-nncf.torch.quantization.quantize"]], "nncf.torch.quantization.quantize_functions": [[499, "module-nncf.torch.quantization.quantize_functions"]], "nncf.torch.quantization.reference": [[500, "module-nncf.torch.quantization.reference"]], "nncf.torch.quantization.schedulers": [[501, "module-nncf.torch.quantization.schedulers"]], "nncf.torch.quantization.statistics": [[502, "module-nncf.torch.quantization.statistics"]], "nncf.torch.quantization.strip": [[503, "module-nncf.torch.quantization.strip"]], "nncf.torch.quantization.structs": [[504, "module-nncf.torch.quantization.structs"]], "nncf.torch.quantization.translator": [[505, "module-nncf.torch.quantization.translator"]], "nncf.torch.sparsity.base_algo": [[506, "module-nncf.torch.sparsity.base_algo"]], "nncf.torch.sparsity.collector": [[507, "module-nncf.torch.sparsity.collector"]], "nncf.torch.sparsity.const.algo": [[508, "module-nncf.torch.sparsity.const.algo"]], "nncf.torch.sparsity.const": [[509, "module-nncf.torch.sparsity.const"]], "nncf.torch.sparsity.functions": [[510, "module-nncf.torch.sparsity.functions"]], "nncf.torch.sparsity": [[511, "module-nncf.torch.sparsity"]], "nncf.torch.sparsity.layers": [[512, "module-nncf.torch.sparsity.layers"]], "nncf.torch.sparsity.magnitude.algo": [[513, "module-nncf.torch.sparsity.magnitude.algo"]], "nncf.torch.sparsity.magnitude.functions": [[514, "module-nncf.torch.sparsity.magnitude.functions"]], "nncf.torch.sparsity.magnitude": [[515, "module-nncf.torch.sparsity.magnitude"]], "nncf.torch.sparsity.rb.algo": [[516, "module-nncf.torch.sparsity.rb.algo"]], "nncf.torch.sparsity.rb.functions": [[517, "module-nncf.torch.sparsity.rb.functions"]], "nncf.torch.sparsity.rb": [[518, "module-nncf.torch.sparsity.rb"]], "nncf.torch.sparsity.rb.layers": [[519, "module-nncf.torch.sparsity.rb.layers"]], "nncf.torch.sparsity.rb.loss": [[520, "module-nncf.torch.sparsity.rb.loss"]], "nncf.torch.statistics.aggregator": [[521, "module-nncf.torch.statistics.aggregator"]], "nncf.torch.statistics": [[522, "module-nncf.torch.statistics"]], "nncf.torch.structures": [[523, "module-nncf.torch.structures"]], "nncf.torch.tensor": [[524, "module-nncf.torch.tensor"]], "nncf.torch.tensor_statistics.algo": [[525, "module-nncf.torch.tensor_statistics.algo"]], "nncf.torch.tensor_statistics.collectors": [[526, "module-nncf.torch.tensor_statistics.collectors"]], "nncf.torch.tensor_statistics": [[527, "module-nncf.torch.tensor_statistics"]], "nncf.torch.tensor_statistics.reduction": [[528, "module-nncf.torch.tensor_statistics.reduction"]], "nncf.torch.tensor_statistics.statistics": [[529, "module-nncf.torch.tensor_statistics.statistics"]], "nncf.torch.utils": [[530, "module-nncf.torch.utils"]], "nncf.version": [[531, "module-nncf.version"]], "NNCF documentation": [[532, "nncf-documentation"]], "Contents:": [[532, null]]}, "indexentries": {"module": [[10, "module-nncf.api.compression"], [11, "module-nncf.api"], [12, "module-nncf.api.statistics"], [13, "module-nncf.common.accuracy_aware_training"], [14, "module-nncf.common.accuracy_aware_training.runner"], [15, "module-nncf.common.accuracy_aware_training.runner_factory"], [16, "module-nncf.common.accuracy_aware_training.statistics"], [17, "module-nncf.common.accuracy_aware_training.training_loop"], [18, "module-nncf.common.api_marker"], [19, "module-nncf.common.collector"], [20, "module-nncf.common.composite_compression"], [21, "module-nncf.common.compression"], [22, "module-nncf.common.deprecation"], [23, "module-nncf.common.engine"], [24, "module-nncf.common.exporter"], [25, "module-nncf.common.factory"], [26, "module-nncf.common.graph.definitions"], [27, "module-nncf.common.graph.graph"], [28, "module-nncf.common.graph.graph_matching"], [29, "module-nncf.common.graph"], [30, "module-nncf.common.graph.layer_attributes"], [31, "module-nncf.common.graph.model_transformer"], [32, "module-nncf.common.graph.operator_metatypes"], [33, "module-nncf.common.graph.patterns"], [34, "module-nncf.common.graph.patterns.manager"], [35, "module-nncf.common.graph.patterns.patterns"], [36, "module-nncf.common.graph.transformations.command_creation"], [37, "module-nncf.common.graph.transformations.commands"], [38, "module-nncf.common.graph.transformations"], [39, "module-nncf.common.graph.transformations.layout"], [40, "module-nncf.common.graph.utils"], [41, "module-nncf.common.hardware.config"], [42, "module-nncf.common.hardware"], [43, "module-nncf.common.hardware.opset"], [44, "module-nncf.common"], [45, "module-nncf.common.initialization.batchnorm_adaptation"], [46, "module-nncf.common.initialization.dataloader"], [47, "module-nncf.common.initialization"], [48, "module-nncf.common.insertion_point_graph"], [49, "module-nncf.common.logging"], [50, "module-nncf.common.logging.logger"], [51, "module-nncf.common.logging.progress_bar"], [52, "module-nncf.common.pruning.clusterization"], [53, "module-nncf.common.pruning"], [54, "module-nncf.common.pruning.mask_propagation"], [55, "module-nncf.common.pruning.model_analysis"], [56, "module-nncf.common.pruning.node_selector"], [57, "module-nncf.common.pruning.operations"], [58, "module-nncf.common.pruning.schedulers"], [59, "module-nncf.common.pruning.shape_pruning_processor"], [60, "module-nncf.common.pruning.statistics"], [61, "module-nncf.common.pruning.structs"], [62, "module-nncf.common.pruning.symbolic_mask"], [63, "module-nncf.common.pruning.tensor_processor"], [64, "module-nncf.common.pruning.utils"], [65, "module-nncf.common.pruning.weights_flops_calculator"], [66, "module-nncf.common.quantization.collectors"], [67, "module-nncf.common.quantization.config_assignment"], [68, "module-nncf.common.quantization"], [69, "module-nncf.common.quantization.initialization"], [70, "module-nncf.common.quantization.initialization.range"], [71, "module-nncf.common.quantization.quantizer_propagation.graph"], [72, "module-nncf.common.quantization.quantizer_propagation.grouping"], [73, "module-nncf.common.quantization.quantizer_propagation"], [74, "module-nncf.common.quantization.quantizer_propagation.solver"], [75, "module-nncf.common.quantization.quantizer_propagation.structs"], [76, "module-nncf.common.quantization.quantizer_propagation.visualizer"], [77, "module-nncf.common.quantization.quantizer_removal"], [78, "module-nncf.common.quantization.quantizer_setup"], [79, "module-nncf.common.quantization.quantizers"], [80, "module-nncf.common.quantization.statistics"], [81, "module-nncf.common.quantization.structs"], [82, "module-nncf.common.schedulers"], [83, "module-nncf.common.scopes"], [84, "module-nncf.common.sparsity.collector"], [85, "module-nncf.common.sparsity.controller"], [86, "module-nncf.common.sparsity"], [87, "module-nncf.common.sparsity.schedulers"], [88, "module-nncf.common.sparsity.statistics"], [89, "module-nncf.common.stateful_classes_registry"], [90, "module-nncf.common.statistics"], [91, "module-nncf.common.tensor"], [92, "module-nncf.common.tensor_statistics.aggregator"], [93, "module-nncf.common.tensor_statistics.collectors"], [94, "module-nncf.common.tensor_statistics"], [95, "module-nncf.common.tensor_statistics.reduction"], [96, "module-nncf.common.tensor_statistics.statistic_point"], [97, "module-nncf.common.tensor_statistics.statistics"], [98, "module-nncf.common.utils.backend"], [99, "module-nncf.common.utils.debug"], [100, "module-nncf.common.utils.decorators"], [101, "module-nncf.common.utils.dot_file_rw"], [102, "module-nncf.common.utils.helpers"], [103, "module-nncf.common.utils"], [104, "module-nncf.common.utils.logger"], [105, "module-nncf.common.utils.os"], [106, "module-nncf.common.utils.patcher"], [107, "module-nncf.common.utils.registry"], [108, "module-nncf.common.utils.tensorboard"], [109, "module-nncf.common.utils.timer"], [110, "module-nncf.config.config"], [111, "module-nncf.config.definitions"], [112, "module-nncf.config.extractors"], [113, "module-nncf.config"], [114, "module-nncf.config.schema"], [115, "module-nncf.config.schemata.accuracy_aware"], [116, "module-nncf.config.schemata.algo.binarization"], [117, "module-nncf.config.schemata.algo.const_sparsity"], [118, "module-nncf.config.schemata.algo.filter_pruning"], [119, "module-nncf.config.schemata.algo"], [120, "module-nncf.config.schemata.algo.knowledge_distillation"], [121, "module-nncf.config.schemata.algo.magnitude_sparsity"], [122, "module-nncf.config.schemata.algo.quantization"], [123, "module-nncf.config.schemata.algo.rb_sparsity"], [124, "module-nncf.config.schemata.basic"], [125, "module-nncf.config.schemata.common.compression"], [126, "module-nncf.config.schemata.common"], [127, "module-nncf.config.schemata.common.initialization"], [128, "module-nncf.config.schemata.common.sparsity"], [129, "module-nncf.config.schemata.common.targeting"], [130, "module-nncf.config.schemata.defaults"], [131, "module-nncf.config.schemata.experimental_schema"], [132, "module-nncf.config.schemata"], [133, "module-nncf.config.structures"], [134, "module-nncf.config.telemetry_extractors"], [135, "module-nncf.config.utils"], [136, "module-nncf.data.dataset"], [137, "module-nncf.data"], [138, "module-nncf.definitions"], [139, "module-nncf.experimental.common.graph"], [140, "module-nncf.experimental.common.graph.netron"], [141, "module-nncf.experimental.common"], [142, "module-nncf.experimental.common.pruning.block_hierarchy"], [143, "module-nncf.experimental.common.pruning"], [144, "module-nncf.experimental.common.pruning.nodes_grouping"], [145, "module-nncf.experimental.common.pruning.operations"], [146, "module-nncf.experimental.common.pruning.propagation_data"], [147, "module-nncf.experimental.common.tensor_statistics.collectors"], [148, "module-nncf.experimental.common.tensor_statistics"], [149, "module-nncf.experimental"], [150, "module-nncf.experimental.openvino"], [151, "module-nncf.experimental.openvino.quantization"], [152, "module-nncf.experimental.openvino.quantization.quantize"], [153, "module-nncf.experimental.openvino_native.engine"], [154, "module-nncf.experimental.openvino_native.graph"], [155, "module-nncf.experimental.openvino_native.graph.metatypes.common"], [156, "module-nncf.experimental.openvino_native.graph.metatypes"], [157, "module-nncf.experimental.openvino_native.graph.metatypes.openvino_metatypes"], [158, "module-nncf.experimental.openvino_native.graph.model_transformer"], [159, "module-nncf.experimental.openvino_native.graph.nncf_graph_builder"], [160, "module-nncf.experimental.openvino_native.graph.node_utils"], [161, "module-nncf.experimental.openvino_native.graph.transformations.command_creation"], [162, "module-nncf.experimental.openvino_native.graph.transformations.commands"], [163, "module-nncf.experimental.openvino_native.graph.transformations"], [164, "module-nncf.experimental.openvino_native.hardware.config"], [165, "module-nncf.experimental.openvino_native.hardware.fused_patterns"], [166, "module-nncf.experimental.openvino_native.hardware"], [167, "module-nncf.experimental.openvino_native.hardware.pattern_operations"], [168, "module-nncf.experimental.openvino_native"], [169, "module-nncf.experimental.openvino_native.quantization.algorithms.bias_correction"], [170, "module-nncf.experimental.openvino_native.quantization.algorithms.bias_correction.openvino_backend"], [171, "module-nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction"], [172, "module-nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction.openvino_backend"], [173, "module-nncf.experimental.openvino_native.quantization.algorithms"], [174, "module-nncf.experimental.openvino_native.quantization.algorithms.min_max"], [175, "module-nncf.experimental.openvino_native.quantization.algorithms.min_max.openvino_backend"], [176, "module-nncf.experimental.openvino_native.quantization.default_quantization"], [177, "module-nncf.experimental.openvino_native.quantization"], [178, "module-nncf.experimental.openvino_native.quantization.quantize"], [179, "module-nncf.experimental.openvino_native.statistics.aggregator"], [180, "module-nncf.experimental.openvino_native.statistics.collectors"], [181, "module-nncf.experimental.openvino_native.statistics"], [182, "module-nncf.experimental.openvino_native.statistics.statistics"], [183, "module-nncf.experimental.openvino_native.tensor"], [184, "module-nncf.experimental.tensorflow.context"], [185, "module-nncf.experimental.tensorflow.graph.argprovider"], [186, "module-nncf.experimental.tensorflow.graph.converter"], [187, "module-nncf.experimental.tensorflow.graph"], [188, "module-nncf.experimental.tensorflow.graph.model_transformer"], [189, "module-nncf.experimental.tensorflow.graph.node_attributes"], [190, "module-nncf.experimental.tensorflow.graph.transformations.commands"], [191, "module-nncf.experimental.tensorflow.graph.transformations"], [192, "module-nncf.experimental.tensorflow.graph.transformations.layout"], [193, "module-nncf.experimental.tensorflow"], [194, "module-nncf.experimental.tensorflow.nncf_network"], [195, "module-nncf.experimental.tensorflow.patch_tf"], [196, "module-nncf.experimental.tensorflow.quantization.algorithm"], [197, "module-nncf.experimental.tensorflow.quantization"], [198, "module-nncf.experimental.tensorflow.quantization.init_range"], [199, "module-nncf.experimental.tensorflow.quantization.quantizers"], [200, "module-nncf.experimental.tensorflow.scope"], [201, "module-nncf.experimental.torch"], [202, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.base_handler"], [203, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_depth"], [204, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_kernel"], [205, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_width"], [206, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_builder"], [207, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_controller"], [208, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_dim"], [209, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.filter_reorder"], [210, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity"], [211, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.multi_elasticity_handler"], [212, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.visualization"], [213, "module-nncf.experimental.torch.nas.bootstrapNAS"], [214, "module-nncf.experimental.torch.nas.bootstrapNAS.search.evaluator"], [215, "module-nncf.experimental.torch.nas.bootstrapNAS.search.evaluator_handler"], [216, "module-nncf.experimental.torch.nas.bootstrapNAS.search"], [217, "module-nncf.experimental.torch.nas.bootstrapNAS.search.search"], [218, "module-nncf.experimental.torch.nas.bootstrapNAS.training.base_training"], [219, "module-nncf.experimental.torch.nas.bootstrapNAS.training"], [220, "module-nncf.experimental.torch.nas.bootstrapNAS.training.lr_scheduler"], [221, "module-nncf.experimental.torch.nas.bootstrapNAS.training.model_creator_helpers"], [222, "module-nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_builder"], [223, "module-nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_controller"], [224, "module-nncf.experimental.torch.nas.bootstrapNAS.training.scheduler"], [225, "module-nncf.experimental.torch.nas.bootstrapNAS.training.stage_descriptor"], [226, "module-nncf.experimental.torch.nas.bootstrapNAS.training.training_algorithm"], [227, "module-nncf.experimental.torch.nas"], [228, "module-nncf.experimental.torch.pruning"], [229, "module-nncf.experimental.torch.pruning.operations"], [230, "module-nncf.experimental.torch.quantization"], [231, "module-nncf.experimental.torch.quantization.quantize"], [232, "module-nncf.experimental.torch.search_building_blocks"], [233, "module-nncf.experimental.torch.search_building_blocks.search_blocks"], [234, "module-nncf.experimental.torch.search_building_blocks.search_graph"], [235, "module-nncf.experimental.torch.sparsity"], [236, "module-nncf.experimental.torch.sparsity.movement.algo"], [237, "module-nncf.experimental.torch.sparsity.movement.functions"], [238, "module-nncf.experimental.torch.sparsity.movement"], [239, "module-nncf.experimental.torch.sparsity.movement.layers"], [240, "module-nncf.experimental.torch.sparsity.movement.loss"], [241, "module-nncf.experimental.torch.sparsity.movement.scheduler"], [242, "module-nncf.experimental.torch.sparsity.movement.structured_mask_handler"], [243, "module-nncf"], [244, "module-nncf.onnx.engine"], [245, "module-nncf.onnx.graph"], [246, "module-nncf.onnx.graph.metatypes"], [247, "module-nncf.onnx.graph.metatypes.onnx_metatypes"], [248, "module-nncf.onnx.graph.model_transformer"], [249, "module-nncf.onnx.graph.nncf_graph_builder"], [250, "module-nncf.onnx.graph.node_utils"], [251, "module-nncf.onnx.graph.onnx_graph"], [252, "module-nncf.onnx.graph.transformations.command_creation"], [253, "module-nncf.onnx.graph.transformations.commands"], [254, "module-nncf.onnx.graph.transformations"], [255, "module-nncf.onnx.hardware.config"], [256, "module-nncf.onnx.hardware.fused_patterns"], [257, "module-nncf.onnx.hardware"], [258, "module-nncf.onnx.hardware.pattern_operations"], [259, "module-nncf.onnx"], [260, "module-nncf.onnx.quantization.default_quantization"], [261, "module-nncf.onnx.quantization"], [262, "module-nncf.onnx.quantization.quantize"], [263, "module-nncf.onnx.quantization.quantizer_parameters"], [264, "module-nncf.onnx.statistics.aggregator"], [265, "module-nncf.onnx.statistics.collectors"], [266, "module-nncf.onnx.statistics"], [267, "module-nncf.onnx.statistics.statistics"], [268, "module-nncf.onnx.tensor"], [269, "module-nncf.openvino.engine"], [270, "module-nncf.openvino"], [271, "module-nncf.openvino.quantization.accuracy_aware"], [272, "module-nncf.openvino.quantization"], [273, "module-nncf.openvino.quantization.quantize"], [274, "module-nncf.parameters"], [275, "module-nncf.quantization.algorithms.accuracy_control.algorithm"], [276, "module-nncf.quantization.algorithms.accuracy_control.backend"], [277, "module-nncf.quantization.algorithms.accuracy_control"], [278, "module-nncf.quantization.algorithms.accuracy_control.openvino_backend"], [279, "module-nncf.quantization.algorithms.accuracy_control.rank_functions"], [280, "module-nncf.quantization.algorithms.accuracy_control.ranker"], [281, "module-nncf.quantization.algorithms.algorithm"], [282, "module-nncf.quantization.algorithms.bias_correction.algorithm"], [283, "module-nncf.quantization.algorithms.bias_correction.backend"], [284, "module-nncf.quantization.algorithms.bias_correction"], [285, "module-nncf.quantization.algorithms.bias_correction.onnx_backend"], [286, "module-nncf.quantization.algorithms.definitions"], [287, "module-nncf.quantization.algorithms.fast_bias_correction.algorithm"], [288, "module-nncf.quantization.algorithms.fast_bias_correction.backend"], [289, "module-nncf.quantization.algorithms.fast_bias_correction"], [290, "module-nncf.quantization.algorithms.fast_bias_correction.onnx_backend"], [291, "module-nncf.quantization.algorithms"], [292, "module-nncf.quantization.algorithms.min_max.algorithm"], [293, "module-nncf.quantization.algorithms.min_max.backend"], [294, "module-nncf.quantization.algorithms.min_max"], [295, "module-nncf.quantization.algorithms.min_max.onnx_backend"], [296, "module-nncf.quantization.algorithms.min_max.torch_backend"], [297, "module-nncf.quantization.algorithms.post_training.algorithm"], [298, "module-nncf.quantization.algorithms.post_training"], [299, "module-nncf.quantization.fake_quantize"], [300, "module-nncf.quantization"], [301, "module-nncf.quantization.passes"], [302, "module-nncf.quantization.quantize"], [303, "module-nncf.quantization.telemetry_extractors"], [304, "module-nncf.scopes"], [305, "module-nncf.telemetry.decorator"], [306, "module-nncf.telemetry.events"], [307, "module-nncf.telemetry.extractors"], [308, "module-nncf.telemetry"], [309, "module-nncf.telemetry.wrapper"], [310, "module-nncf.tensorflow.accuracy_aware_training"], [311, "module-nncf.tensorflow.accuracy_aware_training.keras_model_utils"], [312, "module-nncf.tensorflow.accuracy_aware_training.runner"], [313, "module-nncf.tensorflow.algorithm_selector"], [314, "module-nncf.tensorflow.api.composite_compression"], [315, "module-nncf.tensorflow.api.compression"], [316, "module-nncf.tensorflow.api"], [317, "module-nncf.tensorflow.batchnorm_adaptation"], [318, "module-nncf.tensorflow.callbacks.checkpoint_callback"], [319, "module-nncf.tensorflow.callbacks"], [320, "module-nncf.tensorflow.callbacks.statistics_callback"], [321, "module-nncf.tensorflow.exporter"], [322, "module-nncf.tensorflow.functions"], [323, "module-nncf.tensorflow.graph.converter"], [324, "module-nncf.tensorflow.graph"], [325, "module-nncf.tensorflow.graph.metatypes.common"], [326, "module-nncf.tensorflow.graph.metatypes"], [327, "module-nncf.tensorflow.graph.metatypes.keras_layers"], [328, "module-nncf.tensorflow.graph.metatypes.matcher"], [329, "module-nncf.tensorflow.graph.metatypes.tf_ops"], [330, "module-nncf.tensorflow.graph.model_transformer"], [331, "module-nncf.tensorflow.graph.pattern_operations"], [332, "module-nncf.tensorflow.graph.patterns"], [333, "module-nncf.tensorflow.graph.transformations.commands"], [334, "module-nncf.tensorflow.graph.transformations"], [335, "module-nncf.tensorflow.graph.transformations.layout"], [336, "module-nncf.tensorflow.graph.utils"], [337, "module-nncf.tensorflow.hardware.config"], [338, "module-nncf.tensorflow.hardware.fused_patterns"], [339, "module-nncf.tensorflow.hardware"], [340, "module-nncf.tensorflow.helpers.callback_creation"], [341, "module-nncf.tensorflow.helpers"], [342, "module-nncf.tensorflow.helpers.model_creation"], [343, "module-nncf.tensorflow.helpers.model_manager"], [344, "module-nncf.tensorflow.helpers.utils"], [345, "module-nncf.tensorflow"], [346, "module-nncf.tensorflow.initialization"], [347, "module-nncf.tensorflow.layers.custom_objects"], [348, "module-nncf.tensorflow.layers.data_layout"], [349, "module-nncf.tensorflow.layers"], [350, "module-nncf.tensorflow.layers.operation"], [351, "module-nncf.tensorflow.layers.wrapper"], [352, "module-nncf.tensorflow.loss"], [353, "module-nncf.tensorflow.pruning.base_algorithm"], [354, "module-nncf.tensorflow.pruning.callbacks"], [355, "module-nncf.tensorflow.pruning.filter_pruning.algorithm"], [356, "module-nncf.tensorflow.pruning.filter_pruning.functions"], [357, "module-nncf.tensorflow.pruning.filter_pruning"], [358, "module-nncf.tensorflow.pruning"], [359, "module-nncf.tensorflow.pruning.operations"], [360, "module-nncf.tensorflow.pruning.tensor_processor"], [361, "module-nncf.tensorflow.pruning.utils"], [362, "module-nncf.tensorflow.quantization.algorithm"], [363, "module-nncf.tensorflow.quantization.collectors"], [364, "module-nncf.tensorflow.quantization.default_quantization"], [365, "module-nncf.tensorflow.quantization.functions"], [366, "module-nncf.tensorflow.quantization"], [367, "module-nncf.tensorflow.quantization.init_range"], [368, "module-nncf.tensorflow.quantization.layers"], [369, "module-nncf.tensorflow.quantization.quantize"], [370, "module-nncf.tensorflow.quantization.quantizers"], [371, "module-nncf.tensorflow.quantization.utils"], [372, "module-nncf.tensorflow.sparsity.base_algorithm"], [373, "module-nncf.tensorflow.sparsity.callbacks"], [374, "module-nncf.tensorflow.sparsity.collector"], [375, "module-nncf.tensorflow.sparsity"], [376, "module-nncf.tensorflow.sparsity.magnitude.algorithm"], [377, "module-nncf.tensorflow.sparsity.magnitude.functions"], [378, "module-nncf.tensorflow.sparsity.magnitude"], [379, "module-nncf.tensorflow.sparsity.magnitude.operation"], [380, "module-nncf.tensorflow.sparsity.rb.algorithm"], [381, "module-nncf.tensorflow.sparsity.rb.functions"], [382, "module-nncf.tensorflow.sparsity.rb"], [383, "module-nncf.tensorflow.sparsity.rb.loss"], [384, "module-nncf.tensorflow.sparsity.rb.operation"], [385, "module-nncf.tensorflow.sparsity.utils"], [386, "module-nncf.tensorflow.tensor"], [387, "module-nncf.tensorflow.tensor_statistics.collectors"], [388, "module-nncf.tensorflow.tensor_statistics"], [389, "module-nncf.tensorflow.tensor_statistics.reduction"], [390, "module-nncf.tensorflow.tensor_statistics.statistics"], [391, "module-nncf.tensorflow.tf_internals"], [392, "module-nncf.tensorflow.utils.hook_handle"], [393, "module-nncf.tensorflow.utils"], [394, "module-nncf.tensorflow.utils.node"], [395, "module-nncf.tensorflow.utils.scopes_handle"], [396, "module-nncf.tensorflow.utils.state"], [397, "module-nncf.torch.accuracy_aware_training"], [398, "module-nncf.torch.accuracy_aware_training.runner"], [399, "module-nncf.torch.accuracy_aware_training.utils"], [400, "module-nncf.torch.algo_selector"], [401, "module-nncf.torch.automl.agent.ddpg.ddpg"], [402, "module-nncf.torch.automl.agent.ddpg"], [403, "module-nncf.torch.automl.agent.ddpg.memory"], [404, "module-nncf.torch.automl.agent"], [405, "module-nncf.torch.automl.environment"], [406, "module-nncf.torch.automl.environment.quantization_env"], [407, "module-nncf.torch.automl"], [408, "module-nncf.torch.batchnorm_adaptation"], [409, "module-nncf.torch.binarization.algo"], [410, "module-nncf.torch.binarization.binarize_functions"], [411, "module-nncf.torch.binarization.extensions"], [412, "module-nncf.torch.binarization"], [413, "module-nncf.torch.binarization.layers"], [414, "module-nncf.torch.binarization.reference"], [415, "module-nncf.torch.checkpoint_loading"], [416, "module-nncf.torch.composite_compression"], [417, "module-nncf.torch.compression_method_api"], [418, "module-nncf.torch.debug"], [419, "module-nncf.torch.dynamic_graph.context"], [420, "module-nncf.torch.dynamic_graph.graph"], [421, "module-nncf.torch.dynamic_graph.graph_tracer"], [422, "module-nncf.torch.dynamic_graph"], [423, "module-nncf.torch.dynamic_graph.io_handling"], [424, "module-nncf.torch.dynamic_graph.layer_attributes_handlers"], [425, "module-nncf.torch.dynamic_graph.op_input_processing"], [426, "module-nncf.torch.dynamic_graph.operation_address"], [427, "module-nncf.torch.dynamic_graph.patch_pytorch"], [428, "module-nncf.torch.dynamic_graph.scope"], [429, "module-nncf.torch.dynamic_graph.scope_access"], [430, "module-nncf.torch.dynamic_graph.structs"], [431, "module-nncf.torch.dynamic_graph.trace_functions"], [432, "module-nncf.torch.dynamic_graph.trace_tensor"], [433, "module-nncf.torch.dynamic_graph.wrappers"], [434, "module-nncf.torch.engine"], [435, "module-nncf.torch.exporter"], [436, "module-nncf.torch.extensions"], [437, "module-nncf.torch.functions"], [438, "module-nncf.torch.graph.graph"], [439, "module-nncf.torch.graph.graph_builder"], [440, "module-nncf.torch.graph"], [441, "module-nncf.torch.graph.operator_metatypes"], [442, "module-nncf.torch.graph.pattern_operations"], [443, "module-nncf.torch.graph.transformations.commands"], [444, "module-nncf.torch.graph.transformations"], [445, "module-nncf.torch.graph.transformations.layout"], [446, "module-nncf.torch.hardware.config"], [447, "module-nncf.torch.hardware.fused_patterns"], [448, "module-nncf.torch.hardware"], [449, "module-nncf.torch"], [450, "module-nncf.torch.initialization"], [451, "module-nncf.torch.knowledge_distillation.algo"], [452, "module-nncf.torch.knowledge_distillation"], [453, "module-nncf.torch.knowledge_distillation.knowledge_distillation_handler"], [454, "module-nncf.torch.knowledge_distillation.knowledge_distillation_loss"], [455, "module-nncf.torch.layer_utils"], [456, "module-nncf.torch.layers"], [457, "module-nncf.torch.model_creation"], [458, "module-nncf.torch.module_operations"], [459, "module-nncf.torch.nested_objects_traversal"], [460, "module-nncf.torch.nncf_module_replacement"], [461, "module-nncf.torch.nncf_network"], [462, "module-nncf.torch.pruning.base_algo"], [463, "module-nncf.torch.pruning.export_utils"], [464, "module-nncf.torch.pruning.filter_pruning.algo"], [465, "module-nncf.torch.pruning.filter_pruning.functions"], [466, "module-nncf.torch.pruning.filter_pruning.global_ranking.evolutionary_optimization"], [467, "module-nncf.torch.pruning.filter_pruning.global_ranking"], [468, "module-nncf.torch.pruning.filter_pruning.global_ranking.legr"], [469, "module-nncf.torch.pruning.filter_pruning"], [470, "module-nncf.torch.pruning.filter_pruning.layers"], [471, "module-nncf.torch.pruning"], [472, "module-nncf.torch.pruning.operations"], [473, "module-nncf.torch.pruning.structs"], [474, "module-nncf.torch.pruning.tensor_processor"], [475, "module-nncf.torch.pruning.utils"], [476, "module-nncf.torch.quantization.adjust_padding"], [477, "module-nncf.torch.quantization.algo"], [478, "module-nncf.torch.quantization.default_quantization"], [479, "module-nncf.torch.quantization.extensions"], [480, "module-nncf.torch.quantization.hessian_trace"], [481, "module-nncf.torch.quantization"], [482, "module-nncf.torch.quantization.init_precision"], [483, "module-nncf.torch.quantization.init_range"], [484, "module-nncf.torch.quantization.layers"], [485, "module-nncf.torch.quantization.metrics"], [486, "module-nncf.torch.quantization.precision_constraints"], [487, "module-nncf.torch.quantization.precision_init.adjacent_quantizers"], [488, "module-nncf.torch.quantization.precision_init.autoq_init"], [489, "module-nncf.torch.quantization.precision_init.base_init"], [490, "module-nncf.torch.quantization.precision_init.bitwidth_graph"], [491, "module-nncf.torch.quantization.precision_init.compression_ratio"], [492, "module-nncf.torch.quantization.precision_init.hawq_debug"], [493, "module-nncf.torch.quantization.precision_init.hawq_init"], [494, "module-nncf.torch.quantization.precision_init"], [495, "module-nncf.torch.quantization.precision_init.manual_init"], [496, "module-nncf.torch.quantization.precision_init.perturbations"], [497, "module-nncf.torch.quantization.precision_init.traces_order"], [498, "module-nncf.torch.quantization.quantize"], [499, "module-nncf.torch.quantization.quantize_functions"], [500, "module-nncf.torch.quantization.reference"], [501, "module-nncf.torch.quantization.schedulers"], [502, "module-nncf.torch.quantization.statistics"], [503, "module-nncf.torch.quantization.strip"], [504, "module-nncf.torch.quantization.structs"], [505, "module-nncf.torch.quantization.translator"], [506, "module-nncf.torch.sparsity.base_algo"], [507, "module-nncf.torch.sparsity.collector"], [508, "module-nncf.torch.sparsity.const.algo"], [509, "module-nncf.torch.sparsity.const"], [510, "module-nncf.torch.sparsity.functions"], [511, "module-nncf.torch.sparsity"], [512, "module-nncf.torch.sparsity.layers"], [513, "module-nncf.torch.sparsity.magnitude.algo"], [514, "module-nncf.torch.sparsity.magnitude.functions"], [515, "module-nncf.torch.sparsity.magnitude"], [516, "module-nncf.torch.sparsity.rb.algo"], [517, "module-nncf.torch.sparsity.rb.functions"], [518, "module-nncf.torch.sparsity.rb"], [519, "module-nncf.torch.sparsity.rb.layers"], [520, "module-nncf.torch.sparsity.rb.loss"], [521, "module-nncf.torch.statistics.aggregator"], [522, "module-nncf.torch.statistics"], [523, "module-nncf.torch.structures"], [524, "module-nncf.torch.tensor"], [525, "module-nncf.torch.tensor_statistics.algo"], [526, "module-nncf.torch.tensor_statistics.collectors"], [527, "module-nncf.torch.tensor_statistics"], [528, "module-nncf.torch.tensor_statistics.reduction"], [529, "module-nncf.torch.tensor_statistics.statistics"], [530, "module-nncf.torch.utils"], [531, "module-nncf.version"]], "nncf.api.compression": [[10, "module-nncf.api.compression"]], "nncf.api": [[11, "module-nncf.api"]], "nncf.api.statistics": [[12, "module-nncf.api.statistics"]], "nncf.common.accuracy_aware_training": [[13, "module-nncf.common.accuracy_aware_training"]], "nncf.common.accuracy_aware_training.runner": [[14, "module-nncf.common.accuracy_aware_training.runner"]], "nncf.common.accuracy_aware_training.runner_factory": [[15, "module-nncf.common.accuracy_aware_training.runner_factory"]], "nncf.common.accuracy_aware_training.statistics": [[16, "module-nncf.common.accuracy_aware_training.statistics"]], "nncf.common.accuracy_aware_training.training_loop": [[17, "module-nncf.common.accuracy_aware_training.training_loop"]], "nncf.common.api_marker": [[18, "module-nncf.common.api_marker"]], "nncf.common.collector": [[19, "module-nncf.common.collector"]], "nncf.common.composite_compression": [[20, "module-nncf.common.composite_compression"]], "nncf.common.compression": [[21, "module-nncf.common.compression"]], "nncf.common.deprecation": [[22, "module-nncf.common.deprecation"]], "nncf.common.engine": [[23, "module-nncf.common.engine"]], "nncf.common.exporter": [[24, "module-nncf.common.exporter"]], "nncf.common.factory": [[25, "module-nncf.common.factory"]], "nncf.common.graph.definitions": [[26, "module-nncf.common.graph.definitions"]], "nncf.common.graph.graph": [[27, "module-nncf.common.graph.graph"]], "nncf.common.graph.graph_matching": [[28, "module-nncf.common.graph.graph_matching"]], "nncf.common.graph": [[29, "module-nncf.common.graph"]], "nncf.common.graph.layer_attributes": [[30, "module-nncf.common.graph.layer_attributes"]], "nncf.common.graph.model_transformer": [[31, "module-nncf.common.graph.model_transformer"]], "nncf.common.graph.operator_metatypes": [[32, "module-nncf.common.graph.operator_metatypes"]], "nncf.common.graph.patterns": [[33, "module-nncf.common.graph.patterns"]], "nncf.common.graph.patterns.manager": [[34, "module-nncf.common.graph.patterns.manager"]], "nncf.common.graph.patterns.patterns": [[35, "module-nncf.common.graph.patterns.patterns"]], "nncf.common.graph.transformations.command_creation": [[36, "module-nncf.common.graph.transformations.command_creation"]], "nncf.common.graph.transformations.commands": [[37, "module-nncf.common.graph.transformations.commands"]], "nncf.common.graph.transformations": [[38, "module-nncf.common.graph.transformations"]], "nncf.common.graph.transformations.layout": [[39, "module-nncf.common.graph.transformations.layout"]], "nncf.common.graph.utils": [[40, "module-nncf.common.graph.utils"]], "nncf.common.hardware.config": [[41, "module-nncf.common.hardware.config"]], "nncf.common.hardware": [[42, "module-nncf.common.hardware"]], "nncf.common.hardware.opset": [[43, "module-nncf.common.hardware.opset"]], "nncf.common": [[44, "module-nncf.common"]], "nncf.common.initialization.batchnorm_adaptation": [[45, "module-nncf.common.initialization.batchnorm_adaptation"]], "nncfdataloader (class in nncf.common.initialization.dataloader)": [[46, "nncf.common.initialization.dataloader.NNCFDataLoader"]], "__iter__() (nncf.common.initialization.dataloader.nncfdataloader method)": [[46, "nncf.common.initialization.dataloader.NNCFDataLoader.__iter__"]], "nncf.common.initialization.dataloader": [[46, "module-nncf.common.initialization.dataloader"]], "nncf.common.initialization": [[47, "module-nncf.common.initialization"]], "nncf.common.insertion_point_graph": [[48, "module-nncf.common.insertion_point_graph"]], "nncf.common.logging": [[49, "module-nncf.common.logging"]], "nncf.common.logging.logger": [[50, "module-nncf.common.logging.logger"]], "nncf.common.logging.progress_bar": [[51, "module-nncf.common.logging.progress_bar"]], "nncf.common.pruning.clusterization": [[52, "module-nncf.common.pruning.clusterization"]], "nncf.common.pruning": [[53, "module-nncf.common.pruning"]], "nncf.common.pruning.mask_propagation": [[54, "module-nncf.common.pruning.mask_propagation"]], "nncf.common.pruning.model_analysis": [[55, "module-nncf.common.pruning.model_analysis"]], "nncf.common.pruning.node_selector": [[56, "module-nncf.common.pruning.node_selector"]], "nncf.common.pruning.operations": [[57, "module-nncf.common.pruning.operations"]], "nncf.common.pruning.schedulers": [[58, "module-nncf.common.pruning.schedulers"]], "nncf.common.pruning.shape_pruning_processor": [[59, "module-nncf.common.pruning.shape_pruning_processor"]], "nncf.common.pruning.statistics": [[60, "module-nncf.common.pruning.statistics"]], "nncf.common.pruning.structs": [[61, "module-nncf.common.pruning.structs"]], "nncf.common.pruning.symbolic_mask": [[62, "module-nncf.common.pruning.symbolic_mask"]], "nncf.common.pruning.tensor_processor": [[63, "module-nncf.common.pruning.tensor_processor"]], "nncf.common.pruning.utils": [[64, "module-nncf.common.pruning.utils"]], "nncf.common.pruning.weights_flops_calculator": [[65, "module-nncf.common.pruning.weights_flops_calculator"]], "nncf.common.quantization.collectors": [[66, "module-nncf.common.quantization.collectors"]], "nncf.common.quantization.config_assignment": [[67, "module-nncf.common.quantization.config_assignment"]], "nncf.common.quantization": [[68, "module-nncf.common.quantization"]], "nncf.common.quantization.initialization": [[69, "module-nncf.common.quantization.initialization"]], "nncf.common.quantization.initialization.range": [[70, "module-nncf.common.quantization.initialization.range"]], "nncf.common.quantization.quantizer_propagation.graph": [[71, "module-nncf.common.quantization.quantizer_propagation.graph"]], "nncf.common.quantization.quantizer_propagation.grouping": [[72, "module-nncf.common.quantization.quantizer_propagation.grouping"]], "nncf.common.quantization.quantizer_propagation": [[73, "module-nncf.common.quantization.quantizer_propagation"]], "nncf.common.quantization.quantizer_propagation.solver": [[74, "module-nncf.common.quantization.quantizer_propagation.solver"]], "nncf.common.quantization.quantizer_propagation.structs": [[75, "module-nncf.common.quantization.quantizer_propagation.structs"]], "nncf.common.quantization.quantizer_propagation.visualizer": [[76, "module-nncf.common.quantization.quantizer_propagation.visualizer"]], "nncf.common.quantization.quantizer_removal": [[77, "module-nncf.common.quantization.quantizer_removal"]], "nncf.common.quantization.quantizer_setup": [[78, "module-nncf.common.quantization.quantizer_setup"]], "nncf.common.quantization.quantizers": [[79, "module-nncf.common.quantization.quantizers"]], "nncf.common.quantization.statistics": [[80, "module-nncf.common.quantization.statistics"]], "nncf.common.quantization.structs": [[81, "module-nncf.common.quantization.structs"]], "nncf.common.schedulers": [[82, "module-nncf.common.schedulers"]], "nncf.common.scopes": [[83, "module-nncf.common.scopes"]], "nncf.common.sparsity.collector": [[84, "module-nncf.common.sparsity.collector"]], "nncf.common.sparsity.controller": [[85, "module-nncf.common.sparsity.controller"]], "nncf.common.sparsity": [[86, "module-nncf.common.sparsity"]], "nncf.common.sparsity.schedulers": [[87, "module-nncf.common.sparsity.schedulers"]], "nncf.common.sparsity.statistics": [[88, "module-nncf.common.sparsity.statistics"]], "nncf.common.stateful_classes_registry": [[89, "module-nncf.common.stateful_classes_registry"]], "nncf.common.statistics": [[90, "module-nncf.common.statistics"]], "nncf.common.tensor": [[91, "module-nncf.common.tensor"]], "nncf.common.tensor_statistics.aggregator": [[92, "module-nncf.common.tensor_statistics.aggregator"]], "nncf.common.tensor_statistics.collectors": [[93, "module-nncf.common.tensor_statistics.collectors"]], "nncf.common.tensor_statistics": [[94, "module-nncf.common.tensor_statistics"]], "nncf.common.tensor_statistics.reduction": [[95, "module-nncf.common.tensor_statistics.reduction"]], "nncf.common.tensor_statistics.statistic_point": [[96, "module-nncf.common.tensor_statistics.statistic_point"]], "nncf.common.tensor_statistics.statistics": [[97, "module-nncf.common.tensor_statistics.statistics"]], "nncf.common.utils.backend": [[98, "module-nncf.common.utils.backend"]], "nncf.common.utils.debug": [[99, "module-nncf.common.utils.debug"]], "nncf.common.utils.decorators": [[100, "module-nncf.common.utils.decorators"]], "nncf.common.utils.dot_file_rw": [[101, "module-nncf.common.utils.dot_file_rw"]], "nncf.common.utils.helpers": [[102, "module-nncf.common.utils.helpers"]], "nncf.common.utils": [[103, "module-nncf.common.utils"]], "nncf.common.utils.logger": [[104, "module-nncf.common.utils.logger"]], "nncf.common.utils.os": [[105, "module-nncf.common.utils.os"]], "nncf.common.utils.patcher": [[106, "module-nncf.common.utils.patcher"]], "nncf.common.utils.registry": [[107, "module-nncf.common.utils.registry"]], "nncf.common.utils.tensorboard": [[108, "module-nncf.common.utils.tensorboard"]], "nncf.common.utils.timer": [[109, "module-nncf.common.utils.timer"]], "nncf.config.config": [[110, "module-nncf.config.config"]], "nncf.config.definitions": [[111, "module-nncf.config.definitions"]], "nncf.config.extractors": [[112, "module-nncf.config.extractors"]], "nncf.config": [[113, "module-nncf.config"]], "nncf.config.schema": [[114, "module-nncf.config.schema"]], "nncf.config.schemata.accuracy_aware": [[115, "module-nncf.config.schemata.accuracy_aware"]], "nncf.config.schemata.algo.binarization": [[116, "module-nncf.config.schemata.algo.binarization"]], "nncf.config.schemata.algo.const_sparsity": [[117, "module-nncf.config.schemata.algo.const_sparsity"]], "nncf.config.schemata.algo.filter_pruning": [[118, "module-nncf.config.schemata.algo.filter_pruning"]], "nncf.config.schemata.algo": [[119, "module-nncf.config.schemata.algo"]], "nncf.config.schemata.algo.knowledge_distillation": [[120, "module-nncf.config.schemata.algo.knowledge_distillation"]], "nncf.config.schemata.algo.magnitude_sparsity": [[121, "module-nncf.config.schemata.algo.magnitude_sparsity"]], "nncf.config.schemata.algo.quantization": [[122, "module-nncf.config.schemata.algo.quantization"]], "nncf.config.schemata.algo.rb_sparsity": [[123, "module-nncf.config.schemata.algo.rb_sparsity"]], "nncf.config.schemata.basic": [[124, "module-nncf.config.schemata.basic"]], "nncf.config.schemata.common.compression": [[125, "module-nncf.config.schemata.common.compression"]], "nncf.config.schemata.common": [[126, "module-nncf.config.schemata.common"]], "nncf.config.schemata.common.initialization": [[127, "module-nncf.config.schemata.common.initialization"]], "nncf.config.schemata.common.sparsity": [[128, "module-nncf.config.schemata.common.sparsity"]], "nncf.config.schemata.common.targeting": [[129, "module-nncf.config.schemata.common.targeting"]], "nncf.config.schemata.defaults": [[130, "module-nncf.config.schemata.defaults"]], "nncf.config.schemata.experimental_schema": [[131, "module-nncf.config.schemata.experimental_schema"]], "nncf.config.schemata": [[132, "module-nncf.config.schemata"]], "bnadaptationinitargs (class in nncf.config.structures)": [[133, "nncf.config.structures.BNAdaptationInitArgs"]], "modelevaluationargs (class in nncf.config.structures)": [[133, "nncf.config.structures.ModelEvaluationArgs"]], "quantizationrangeinitargs (class in nncf.config.structures)": [[133, "nncf.config.structures.QuantizationRangeInitArgs"]], "nncf.config.structures": [[133, "module-nncf.config.structures"]], "nncf.config.telemetry_extractors": [[134, "module-nncf.config.telemetry_extractors"]], "nncf.config.utils": [[135, "module-nncf.config.utils"]], "nncf.data.dataset": [[136, "module-nncf.data.dataset"]], "nncf.data": [[137, "module-nncf.data"]], "nncf.definitions": [[138, "module-nncf.definitions"]], "nncf.experimental.common.graph": [[139, "module-nncf.experimental.common.graph"]], "nncf.experimental.common.graph.netron": [[140, "module-nncf.experimental.common.graph.netron"]], "nncf.experimental.common": [[141, "module-nncf.experimental.common"]], "nncf.experimental.common.pruning.block_hierarchy": [[142, "module-nncf.experimental.common.pruning.block_hierarchy"]], "nncf.experimental.common.pruning": [[143, "module-nncf.experimental.common.pruning"]], "nncf.experimental.common.pruning.nodes_grouping": [[144, "module-nncf.experimental.common.pruning.nodes_grouping"]], "nncf.experimental.common.pruning.operations": [[145, "module-nncf.experimental.common.pruning.operations"]], "nncf.experimental.common.pruning.propagation_data": [[146, "module-nncf.experimental.common.pruning.propagation_data"]], "nncf.experimental.common.tensor_statistics.collectors": [[147, "module-nncf.experimental.common.tensor_statistics.collectors"]], "nncf.experimental.common.tensor_statistics": [[148, "module-nncf.experimental.common.tensor_statistics"]], "nncf.experimental": [[149, "module-nncf.experimental"]], "nncf.experimental.openvino": [[150, "module-nncf.experimental.openvino"]], "nncf.experimental.openvino.quantization": [[151, "module-nncf.experimental.openvino.quantization"]], "nncf.experimental.openvino.quantization.quantize": [[152, "module-nncf.experimental.openvino.quantization.quantize"]], "nncf.experimental.openvino_native.engine": [[153, "module-nncf.experimental.openvino_native.engine"]], "nncf.experimental.openvino_native.graph": [[154, "module-nncf.experimental.openvino_native.graph"]], "nncf.experimental.openvino_native.graph.metatypes.common": [[155, "module-nncf.experimental.openvino_native.graph.metatypes.common"]], "nncf.experimental.openvino_native.graph.metatypes": [[156, "module-nncf.experimental.openvino_native.graph.metatypes"]], "nncf.experimental.openvino_native.graph.metatypes.openvino_metatypes": [[157, "module-nncf.experimental.openvino_native.graph.metatypes.openvino_metatypes"]], "nncf.experimental.openvino_native.graph.model_transformer": [[158, "module-nncf.experimental.openvino_native.graph.model_transformer"]], "nncf.experimental.openvino_native.graph.nncf_graph_builder": [[159, "module-nncf.experimental.openvino_native.graph.nncf_graph_builder"]], "nncf.experimental.openvino_native.graph.node_utils": [[160, "module-nncf.experimental.openvino_native.graph.node_utils"]], "nncf.experimental.openvino_native.graph.transformations.command_creation": [[161, "module-nncf.experimental.openvino_native.graph.transformations.command_creation"]], "nncf.experimental.openvino_native.graph.transformations.commands": [[162, "module-nncf.experimental.openvino_native.graph.transformations.commands"]], "nncf.experimental.openvino_native.graph.transformations": [[163, "module-nncf.experimental.openvino_native.graph.transformations"]], "nncf.experimental.openvino_native.hardware.config": [[164, "module-nncf.experimental.openvino_native.hardware.config"]], "nncf.experimental.openvino_native.hardware.fused_patterns": [[165, "module-nncf.experimental.openvino_native.hardware.fused_patterns"]], "nncf.experimental.openvino_native.hardware": [[166, "module-nncf.experimental.openvino_native.hardware"]], "nncf.experimental.openvino_native.hardware.pattern_operations": [[167, "module-nncf.experimental.openvino_native.hardware.pattern_operations"]], "nncf.experimental.openvino_native": [[168, "module-nncf.experimental.openvino_native"]], "nncf.experimental.openvino_native.quantization.algorithms.bias_correction": [[169, "module-nncf.experimental.openvino_native.quantization.algorithms.bias_correction"]], "nncf.experimental.openvino_native.quantization.algorithms.bias_correction.openvino_backend": [[170, "module-nncf.experimental.openvino_native.quantization.algorithms.bias_correction.openvino_backend"]], "nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction": [[171, "module-nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction"]], "nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction.openvino_backend": [[172, "module-nncf.experimental.openvino_native.quantization.algorithms.fast_bias_correction.openvino_backend"]], "nncf.experimental.openvino_native.quantization.algorithms": [[173, "module-nncf.experimental.openvino_native.quantization.algorithms"]], "nncf.experimental.openvino_native.quantization.algorithms.min_max": [[174, "module-nncf.experimental.openvino_native.quantization.algorithms.min_max"]], "nncf.experimental.openvino_native.quantization.algorithms.min_max.openvino_backend": [[175, "module-nncf.experimental.openvino_native.quantization.algorithms.min_max.openvino_backend"]], "nncf.experimental.openvino_native.quantization.default_quantization": [[176, "module-nncf.experimental.openvino_native.quantization.default_quantization"]], "nncf.experimental.openvino_native.quantization": [[177, "module-nncf.experimental.openvino_native.quantization"]], "nncf.experimental.openvino_native.quantization.quantize": [[178, "module-nncf.experimental.openvino_native.quantization.quantize"]], "nncf.experimental.openvino_native.statistics.aggregator": [[179, "module-nncf.experimental.openvino_native.statistics.aggregator"]], "nncf.experimental.openvino_native.statistics.collectors": [[180, "module-nncf.experimental.openvino_native.statistics.collectors"]], "nncf.experimental.openvino_native.statistics": [[181, "module-nncf.experimental.openvino_native.statistics"]], "nncf.experimental.openvino_native.statistics.statistics": [[182, "module-nncf.experimental.openvino_native.statistics.statistics"]], "nncf.experimental.openvino_native.tensor": [[183, "module-nncf.experimental.openvino_native.tensor"]], "nncf.experimental.tensorflow.context": [[184, "module-nncf.experimental.tensorflow.context"]], "nncf.experimental.tensorflow.graph.argprovider": [[185, "module-nncf.experimental.tensorflow.graph.argprovider"]], "nncf.experimental.tensorflow.graph.converter": [[186, "module-nncf.experimental.tensorflow.graph.converter"]], "nncf.experimental.tensorflow.graph": [[187, "module-nncf.experimental.tensorflow.graph"]], "nncf.experimental.tensorflow.graph.model_transformer": [[188, "module-nncf.experimental.tensorflow.graph.model_transformer"]], "nncf.experimental.tensorflow.graph.node_attributes": [[189, "module-nncf.experimental.tensorflow.graph.node_attributes"]], "nncf.experimental.tensorflow.graph.transformations.commands": [[190, "module-nncf.experimental.tensorflow.graph.transformations.commands"]], "nncf.experimental.tensorflow.graph.transformations": [[191, "module-nncf.experimental.tensorflow.graph.transformations"]], "nncf.experimental.tensorflow.graph.transformations.layout": [[192, "module-nncf.experimental.tensorflow.graph.transformations.layout"]], "nncf.experimental.tensorflow": [[193, "module-nncf.experimental.tensorflow"]], "nncf.experimental.tensorflow.nncf_network": [[194, "module-nncf.experimental.tensorflow.nncf_network"]], "nncf.experimental.tensorflow.patch_tf": [[195, "module-nncf.experimental.tensorflow.patch_tf"]], "nncf.experimental.tensorflow.quantization.algorithm": [[196, "module-nncf.experimental.tensorflow.quantization.algorithm"]], "nncf.experimental.tensorflow.quantization": [[197, "module-nncf.experimental.tensorflow.quantization"]], "nncf.experimental.tensorflow.quantization.init_range": [[198, "module-nncf.experimental.tensorflow.quantization.init_range"]], "nncf.experimental.tensorflow.quantization.quantizers": [[199, "module-nncf.experimental.tensorflow.quantization.quantizers"]], "nncf.experimental.tensorflow.scope": [[200, "module-nncf.experimental.tensorflow.scope"]], "nncf.experimental.torch": [[201, "module-nncf.experimental.torch"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.base_handler": [[202, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.base_handler"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.elastic_depth": [[203, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_depth"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.elastic_kernel": [[204, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_kernel"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.elastic_width": [[205, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elastic_width"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.elasticity_builder": [[206, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_builder"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.elasticity_controller": [[207, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_controller"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.elasticity_dim": [[208, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.elasticity_dim"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.filter_reorder": [[209, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.filter_reorder"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity": [[210, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.multi_elasticity_handler": [[211, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.multi_elasticity_handler"]], "nncf.experimental.torch.nas.bootstrapnas.elasticity.visualization": [[212, "module-nncf.experimental.torch.nas.bootstrapNAS.elasticity.visualization"]], "nncf.experimental.torch.nas.bootstrapnas": [[213, "module-nncf.experimental.torch.nas.bootstrapNAS"]], "nncf.experimental.torch.nas.bootstrapnas.search.evaluator": [[214, "module-nncf.experimental.torch.nas.bootstrapNAS.search.evaluator"]], "nncf.experimental.torch.nas.bootstrapnas.search.evaluator_handler": [[215, "module-nncf.experimental.torch.nas.bootstrapNAS.search.evaluator_handler"]], "nncf.experimental.torch.nas.bootstrapnas.search": [[216, "module-nncf.experimental.torch.nas.bootstrapNAS.search"]], "nncf.experimental.torch.nas.bootstrapnas.search.search": [[217, "module-nncf.experimental.torch.nas.bootstrapNAS.search.search"]], "nncf.experimental.torch.nas.bootstrapnas.training.base_training": [[218, "module-nncf.experimental.torch.nas.bootstrapNAS.training.base_training"]], "nncf.experimental.torch.nas.bootstrapnas.training": [[219, "module-nncf.experimental.torch.nas.bootstrapNAS.training"]], "nncf.experimental.torch.nas.bootstrapnas.training.lr_scheduler": [[220, "module-nncf.experimental.torch.nas.bootstrapNAS.training.lr_scheduler"]], "nncf.experimental.torch.nas.bootstrapnas.training.model_creator_helpers": [[221, "module-nncf.experimental.torch.nas.bootstrapNAS.training.model_creator_helpers"]], "nncf.experimental.torch.nas.bootstrapnas.training.progressive_shrinking_builder": [[222, "module-nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_builder"]], "nncf.experimental.torch.nas.bootstrapnas.training.progressive_shrinking_controller": [[223, "module-nncf.experimental.torch.nas.bootstrapNAS.training.progressive_shrinking_controller"]], "nncf.experimental.torch.nas.bootstrapnas.training.scheduler": [[224, "module-nncf.experimental.torch.nas.bootstrapNAS.training.scheduler"]], "nncf.experimental.torch.nas.bootstrapnas.training.stage_descriptor": [[225, "module-nncf.experimental.torch.nas.bootstrapNAS.training.stage_descriptor"]], "nncf.experimental.torch.nas.bootstrapnas.training.training_algorithm": [[226, "module-nncf.experimental.torch.nas.bootstrapNAS.training.training_algorithm"]], "nncf.experimental.torch.nas": [[227, "module-nncf.experimental.torch.nas"]], "nncf.experimental.torch.pruning": [[228, "module-nncf.experimental.torch.pruning"]], "nncf.experimental.torch.pruning.operations": [[229, "module-nncf.experimental.torch.pruning.operations"]], "nncf.experimental.torch.quantization": [[230, "module-nncf.experimental.torch.quantization"]], "nncf.experimental.torch.quantization.quantize": [[231, "module-nncf.experimental.torch.quantization.quantize"]], "nncf.experimental.torch.search_building_blocks": [[232, "module-nncf.experimental.torch.search_building_blocks"]], "nncf.experimental.torch.search_building_blocks.search_blocks": [[233, "module-nncf.experimental.torch.search_building_blocks.search_blocks"]], "nncf.experimental.torch.search_building_blocks.search_graph": [[234, "module-nncf.experimental.torch.search_building_blocks.search_graph"]], "nncf.experimental.torch.sparsity": [[235, "module-nncf.experimental.torch.sparsity"]], "nncf.experimental.torch.sparsity.movement.algo": [[236, "module-nncf.experimental.torch.sparsity.movement.algo"]], "nncf.experimental.torch.sparsity.movement.functions": [[237, "module-nncf.experimental.torch.sparsity.movement.functions"]], "nncf.experimental.torch.sparsity.movement": [[238, "module-nncf.experimental.torch.sparsity.movement"]], "nncf.experimental.torch.sparsity.movement.layers": [[239, "module-nncf.experimental.torch.sparsity.movement.layers"]], "nncf.experimental.torch.sparsity.movement.loss": [[240, "module-nncf.experimental.torch.sparsity.movement.loss"]], "nncf.experimental.torch.sparsity.movement.scheduler": [[241, "module-nncf.experimental.torch.sparsity.movement.scheduler"]], "nncf.experimental.torch.sparsity.movement.structured_mask_handler": [[242, "module-nncf.experimental.torch.sparsity.movement.structured_mask_handler"]], "dataset (class in nncf)": [[243, "nncf.Dataset"]], "ignoredscope (class in nncf)": [[243, "nncf.IgnoredScope"]], "modeltype (class in nncf)": [[243, "nncf.ModelType"]], "nncfconfig (class in nncf)": [[243, "nncf.NNCFConfig"]], "quantizationpreset (class in nncf)": [[243, "nncf.QuantizationPreset"]], "targetdevice (class in nncf)": [[243, "nncf.TargetDevice"]], "from_dict() (nncf.nncfconfig class method)": [[243, "nncf.NNCFConfig.from_dict"]], "get_data() (nncf.dataset method)": [[243, "nncf.Dataset.get_data"]], "get_inference_data() (nncf.dataset method)": [[243, "nncf.Dataset.get_inference_data"]], "get_redefinable_global_param_value_for_algo() (nncf.nncfconfig method)": [[243, "nncf.NNCFConfig.get_redefinable_global_param_value_for_algo"]], "nncf": [[243, "module-nncf"]], "quantize_with_accuracy_control() (in module nncf)": [[243, "nncf.quantize_with_accuracy_control"]], "nncf.onnx.engine": [[244, "module-nncf.onnx.engine"]], "nncf.onnx.graph": [[245, "module-nncf.onnx.graph"]], "nncf.onnx.graph.metatypes": [[246, "module-nncf.onnx.graph.metatypes"]], "nncf.onnx.graph.metatypes.onnx_metatypes": [[247, "module-nncf.onnx.graph.metatypes.onnx_metatypes"]], "nncf.onnx.graph.model_transformer": [[248, "module-nncf.onnx.graph.model_transformer"]], "nncf.onnx.graph.nncf_graph_builder": [[249, "module-nncf.onnx.graph.nncf_graph_builder"]], "nncf.onnx.graph.node_utils": [[250, "module-nncf.onnx.graph.node_utils"]], "nncf.onnx.graph.onnx_graph": [[251, "module-nncf.onnx.graph.onnx_graph"]], "nncf.onnx.graph.transformations.command_creation": [[252, "module-nncf.onnx.graph.transformations.command_creation"]], "nncf.onnx.graph.transformations.commands": [[253, "module-nncf.onnx.graph.transformations.commands"]], "nncf.onnx.graph.transformations": [[254, "module-nncf.onnx.graph.transformations"]], "nncf.onnx.hardware.config": [[255, "module-nncf.onnx.hardware.config"]], "nncf.onnx.hardware.fused_patterns": [[256, "module-nncf.onnx.hardware.fused_patterns"]], "nncf.onnx.hardware": [[257, "module-nncf.onnx.hardware"]], "nncf.onnx.hardware.pattern_operations": [[258, "module-nncf.onnx.hardware.pattern_operations"]], "nncf.onnx": [[259, "module-nncf.onnx"]], "nncf.onnx.quantization.default_quantization": [[260, "module-nncf.onnx.quantization.default_quantization"]], "nncf.onnx.quantization": [[261, "module-nncf.onnx.quantization"]], "nncf.onnx.quantization.quantize": [[262, "module-nncf.onnx.quantization.quantize"]], "nncf.onnx.quantization.quantizer_parameters": [[263, "module-nncf.onnx.quantization.quantizer_parameters"]], "nncf.onnx.statistics.aggregator": [[264, "module-nncf.onnx.statistics.aggregator"]], "nncf.onnx.statistics.collectors": [[265, "module-nncf.onnx.statistics.collectors"]], "nncf.onnx.statistics": [[266, "module-nncf.onnx.statistics"]], "nncf.onnx.statistics.statistics": [[267, "module-nncf.onnx.statistics.statistics"]], "nncf.onnx.tensor": [[268, "module-nncf.onnx.tensor"]], "nncf.openvino.engine": [[269, "module-nncf.openvino.engine"]], "nncf.openvino": [[270, "module-nncf.openvino"]], "nncf.openvino.quantization.accuracy_aware": [[271, "module-nncf.openvino.quantization.accuracy_aware"]], "nncf.openvino.quantization": [[272, "module-nncf.openvino.quantization"]], "nncf.openvino.quantization.quantize": [[273, "module-nncf.openvino.quantization.quantize"]], "nncf.parameters": [[274, "module-nncf.parameters"]], "nncf.quantization.algorithms.accuracy_control.algorithm": [[275, "module-nncf.quantization.algorithms.accuracy_control.algorithm"]], "nncf.quantization.algorithms.accuracy_control.backend": [[276, "module-nncf.quantization.algorithms.accuracy_control.backend"]], "nncf.quantization.algorithms.accuracy_control": [[277, "module-nncf.quantization.algorithms.accuracy_control"]], "nncf.quantization.algorithms.accuracy_control.openvino_backend": [[278, "module-nncf.quantization.algorithms.accuracy_control.openvino_backend"]], "nncf.quantization.algorithms.accuracy_control.rank_functions": [[279, "module-nncf.quantization.algorithms.accuracy_control.rank_functions"]], "nncf.quantization.algorithms.accuracy_control.ranker": [[280, "module-nncf.quantization.algorithms.accuracy_control.ranker"]], "nncf.quantization.algorithms.algorithm": [[281, "module-nncf.quantization.algorithms.algorithm"]], "nncf.quantization.algorithms.bias_correction.algorithm": [[282, "module-nncf.quantization.algorithms.bias_correction.algorithm"]], "nncf.quantization.algorithms.bias_correction.backend": [[283, "module-nncf.quantization.algorithms.bias_correction.backend"]], "nncf.quantization.algorithms.bias_correction": [[284, "module-nncf.quantization.algorithms.bias_correction"]], "nncf.quantization.algorithms.bias_correction.onnx_backend": [[285, "module-nncf.quantization.algorithms.bias_correction.onnx_backend"]], "nncf.quantization.algorithms.definitions": [[286, "module-nncf.quantization.algorithms.definitions"]], "nncf.quantization.algorithms.fast_bias_correction.algorithm": [[287, "module-nncf.quantization.algorithms.fast_bias_correction.algorithm"]], "nncf.quantization.algorithms.fast_bias_correction.backend": [[288, "module-nncf.quantization.algorithms.fast_bias_correction.backend"]], "nncf.quantization.algorithms.fast_bias_correction": [[289, "module-nncf.quantization.algorithms.fast_bias_correction"]], "nncf.quantization.algorithms.fast_bias_correction.onnx_backend": [[290, "module-nncf.quantization.algorithms.fast_bias_correction.onnx_backend"]], "nncf.quantization.algorithms": [[291, "module-nncf.quantization.algorithms"]], "nncf.quantization.algorithms.min_max.algorithm": [[292, "module-nncf.quantization.algorithms.min_max.algorithm"]], "nncf.quantization.algorithms.min_max.backend": [[293, "module-nncf.quantization.algorithms.min_max.backend"]], "nncf.quantization.algorithms.min_max": [[294, "module-nncf.quantization.algorithms.min_max"]], "nncf.quantization.algorithms.min_max.onnx_backend": [[295, "module-nncf.quantization.algorithms.min_max.onnx_backend"]], "nncf.quantization.algorithms.min_max.torch_backend": [[296, "module-nncf.quantization.algorithms.min_max.torch_backend"]], "nncf.quantization.algorithms.post_training.algorithm": [[297, "module-nncf.quantization.algorithms.post_training.algorithm"]], "nncf.quantization.algorithms.post_training": [[298, "module-nncf.quantization.algorithms.post_training"]], "nncf.quantization.fake_quantize": [[299, "module-nncf.quantization.fake_quantize"]], "nncf.quantization": [[300, "module-nncf.quantization"]], "nncf.quantization.passes": [[301, "module-nncf.quantization.passes"]], "nncf.quantization.quantize": [[302, "module-nncf.quantization.quantize"]], "nncf.quantization.telemetry_extractors": [[303, "module-nncf.quantization.telemetry_extractors"]], "nncf.scopes": [[304, "module-nncf.scopes"]], "nncf.telemetry.decorator": [[305, "module-nncf.telemetry.decorator"]], "nncf.telemetry.events": [[306, "module-nncf.telemetry.events"]], "nncf.telemetry.extractors": [[307, "module-nncf.telemetry.extractors"]], "nncf.telemetry": [[308, "module-nncf.telemetry"]], "nncf.telemetry.wrapper": [[309, "module-nncf.telemetry.wrapper"]], "nncf.tensorflow.accuracy_aware_training": [[310, "module-nncf.tensorflow.accuracy_aware_training"]], "nncf.tensorflow.accuracy_aware_training.keras_model_utils": [[311, "module-nncf.tensorflow.accuracy_aware_training.keras_model_utils"]], "nncf.tensorflow.accuracy_aware_training.runner": [[312, "module-nncf.tensorflow.accuracy_aware_training.runner"]], "nncf.tensorflow.algorithm_selector": [[313, "module-nncf.tensorflow.algorithm_selector"]], "nncf.tensorflow.api.composite_compression": [[314, "module-nncf.tensorflow.api.composite_compression"]], "nncf.tensorflow.api.compression": [[315, "module-nncf.tensorflow.api.compression"]], "nncf.tensorflow.api": [[316, "module-nncf.tensorflow.api"]], "nncf.tensorflow.batchnorm_adaptation": [[317, "module-nncf.tensorflow.batchnorm_adaptation"]], "nncf.tensorflow.callbacks.checkpoint_callback": [[318, "module-nncf.tensorflow.callbacks.checkpoint_callback"]], "nncf.tensorflow.callbacks": [[319, "module-nncf.tensorflow.callbacks"]], "nncf.tensorflow.callbacks.statistics_callback": [[320, "module-nncf.tensorflow.callbacks.statistics_callback"]], "nncf.tensorflow.exporter": [[321, "module-nncf.tensorflow.exporter"]], "nncf.tensorflow.functions": [[322, "module-nncf.tensorflow.functions"]], "nncf.tensorflow.graph.converter": [[323, "module-nncf.tensorflow.graph.converter"]], "nncf.tensorflow.graph": [[324, "module-nncf.tensorflow.graph"]], "nncf.tensorflow.graph.metatypes.common": [[325, "module-nncf.tensorflow.graph.metatypes.common"]], "nncf.tensorflow.graph.metatypes": [[326, "module-nncf.tensorflow.graph.metatypes"]], "nncf.tensorflow.graph.metatypes.keras_layers": [[327, "module-nncf.tensorflow.graph.metatypes.keras_layers"]], "nncf.tensorflow.graph.metatypes.matcher": [[328, "module-nncf.tensorflow.graph.metatypes.matcher"]], "nncf.tensorflow.graph.metatypes.tf_ops": [[329, "module-nncf.tensorflow.graph.metatypes.tf_ops"]], "nncf.tensorflow.graph.model_transformer": [[330, "module-nncf.tensorflow.graph.model_transformer"]], "nncf.tensorflow.graph.pattern_operations": [[331, "module-nncf.tensorflow.graph.pattern_operations"]], "nncf.tensorflow.graph.patterns": [[332, "module-nncf.tensorflow.graph.patterns"]], "nncf.tensorflow.graph.transformations.commands": [[333, "module-nncf.tensorflow.graph.transformations.commands"]], "nncf.tensorflow.graph.transformations": [[334, "module-nncf.tensorflow.graph.transformations"]], "nncf.tensorflow.graph.transformations.layout": [[335, "module-nncf.tensorflow.graph.transformations.layout"]], "nncf.tensorflow.graph.utils": [[336, "module-nncf.tensorflow.graph.utils"]], "nncf.tensorflow.hardware.config": [[337, "module-nncf.tensorflow.hardware.config"]], "nncf.tensorflow.hardware.fused_patterns": [[338, "module-nncf.tensorflow.hardware.fused_patterns"]], "nncf.tensorflow.hardware": [[339, "module-nncf.tensorflow.hardware"]], "nncf.tensorflow.helpers.callback_creation": [[340, "module-nncf.tensorflow.helpers.callback_creation"]], "nncf.tensorflow.helpers": [[341, "module-nncf.tensorflow.helpers"]], "nncf.tensorflow.helpers.model_creation": [[342, "module-nncf.tensorflow.helpers.model_creation"]], "nncf.tensorflow.helpers.model_manager": [[343, "module-nncf.tensorflow.helpers.model_manager"]], "nncf.tensorflow.helpers.utils": [[344, "module-nncf.tensorflow.helpers.utils"]], "adaptivecompressiontrainingloop (class in nncf.tensorflow)": [[345, "nncf.tensorflow.AdaptiveCompressionTrainingLoop"]], "earlyexitcompressiontrainingloop (class in nncf.tensorflow)": [[345, "nncf.tensorflow.EarlyExitCompressionTrainingLoop"]], "create_compressed_model() (in module nncf.tensorflow)": [[345, "nncf.tensorflow.create_compressed_model"]], "nncf.tensorflow": [[345, "module-nncf.tensorflow"]], "register_default_init_args() (in module nncf.tensorflow)": [[345, "nncf.tensorflow.register_default_init_args"]], "run() (nncf.tensorflow.adaptivecompressiontrainingloop method)": [[345, "nncf.tensorflow.AdaptiveCompressionTrainingLoop.run"]], "nncf.tensorflow.initialization": [[346, "module-nncf.tensorflow.initialization"]], "nncf.tensorflow.layers.custom_objects": [[347, "module-nncf.tensorflow.layers.custom_objects"]], "nncf.tensorflow.layers.data_layout": [[348, "module-nncf.tensorflow.layers.data_layout"]], "nncf.tensorflow.layers": [[349, "module-nncf.tensorflow.layers"]], "nncf.tensorflow.layers.operation": [[350, "module-nncf.tensorflow.layers.operation"]], "nncf.tensorflow.layers.wrapper": [[351, "module-nncf.tensorflow.layers.wrapper"]], "nncf.tensorflow.loss": [[352, "module-nncf.tensorflow.loss"]], "nncf.tensorflow.pruning.base_algorithm": [[353, "module-nncf.tensorflow.pruning.base_algorithm"]], "nncf.tensorflow.pruning.callbacks": [[354, "module-nncf.tensorflow.pruning.callbacks"]], "filterpruningcontroller (class in nncf.tensorflow.pruning.filter_pruning.algorithm)": [[355, "nncf.tensorflow.pruning.filter_pruning.algorithm.FilterPruningController"]], "compression_stage() (nncf.tensorflow.pruning.filter_pruning.algorithm.filterpruningcontroller method)": [[355, "nncf.tensorflow.pruning.filter_pruning.algorithm.FilterPruningController.compression_stage"]], "disable_scheduler() (nncf.tensorflow.pruning.filter_pruning.algorithm.filterpruningcontroller method)": [[355, "nncf.tensorflow.pruning.filter_pruning.algorithm.FilterPruningController.disable_scheduler"]], "nncf.tensorflow.pruning.filter_pruning.algorithm": [[355, "module-nncf.tensorflow.pruning.filter_pruning.algorithm"]], "set_pruning_level() (nncf.tensorflow.pruning.filter_pruning.algorithm.filterpruningcontroller method)": [[355, "nncf.tensorflow.pruning.filter_pruning.algorithm.FilterPruningController.set_pruning_level"]], "statistics() (nncf.tensorflow.pruning.filter_pruning.algorithm.filterpruningcontroller method)": [[355, "nncf.tensorflow.pruning.filter_pruning.algorithm.FilterPruningController.statistics"]], "nncf.tensorflow.pruning.filter_pruning.functions": [[356, "module-nncf.tensorflow.pruning.filter_pruning.functions"]], "nncf.tensorflow.pruning.filter_pruning": [[357, "module-nncf.tensorflow.pruning.filter_pruning"]], "nncf.tensorflow.pruning": [[358, "module-nncf.tensorflow.pruning"]], "nncf.tensorflow.pruning.operations": [[359, "module-nncf.tensorflow.pruning.operations"]], "nncf.tensorflow.pruning.tensor_processor": [[360, "module-nncf.tensorflow.pruning.tensor_processor"]], "nncf.tensorflow.pruning.utils": [[361, "module-nncf.tensorflow.pruning.utils"]], "quantizationcontroller (class in nncf.tensorflow.quantization.algorithm)": [[362, "nncf.tensorflow.quantization.algorithm.QuantizationController"]], "compression_stage() (nncf.tensorflow.quantization.algorithm.quantizationcontroller method)": [[362, "nncf.tensorflow.quantization.algorithm.QuantizationController.compression_stage"]], "nncf.tensorflow.quantization.algorithm": [[362, "module-nncf.tensorflow.quantization.algorithm"]], "statistics() (nncf.tensorflow.quantization.algorithm.quantizationcontroller method)": [[362, "nncf.tensorflow.quantization.algorithm.QuantizationController.statistics"]], "strip_model() (nncf.tensorflow.quantization.algorithm.quantizationcontroller method)": [[362, "nncf.tensorflow.quantization.algorithm.QuantizationController.strip_model"]], "nncf.tensorflow.quantization.collectors": [[363, "module-nncf.tensorflow.quantization.collectors"]], "nncf.tensorflow.quantization.default_quantization": [[364, "module-nncf.tensorflow.quantization.default_quantization"]], "nncf.tensorflow.quantization.functions": [[365, "module-nncf.tensorflow.quantization.functions"]], "nncf.tensorflow.quantization": [[366, "module-nncf.tensorflow.quantization"]], "nncf.tensorflow.quantization.init_range": [[367, "module-nncf.tensorflow.quantization.init_range"]], "nncf.tensorflow.quantization.layers": [[368, "module-nncf.tensorflow.quantization.layers"]], "nncf.tensorflow.quantization.quantize": [[369, "module-nncf.tensorflow.quantization.quantize"]], "nncf.tensorflow.quantization.quantizers": [[370, "module-nncf.tensorflow.quantization.quantizers"]], "nncf.tensorflow.quantization.utils": [[371, "module-nncf.tensorflow.quantization.utils"]], "nncf.tensorflow.sparsity.base_algorithm": [[372, "module-nncf.tensorflow.sparsity.base_algorithm"]], "nncf.tensorflow.sparsity.callbacks": [[373, "module-nncf.tensorflow.sparsity.callbacks"]], "nncf.tensorflow.sparsity.collector": [[374, "module-nncf.tensorflow.sparsity.collector"]], "nncf.tensorflow.sparsity": [[375, "module-nncf.tensorflow.sparsity"]], "magnitudesparsitycontroller (class in nncf.tensorflow.sparsity.magnitude.algorithm)": [[376, "nncf.tensorflow.sparsity.magnitude.algorithm.MagnitudeSparsityController"]], "compression_stage() (nncf.tensorflow.sparsity.magnitude.algorithm.magnitudesparsitycontroller method)": [[376, "nncf.tensorflow.sparsity.magnitude.algorithm.MagnitudeSparsityController.compression_stage"]], "disable_scheduler() (nncf.tensorflow.sparsity.magnitude.algorithm.magnitudesparsitycontroller method)": [[376, "nncf.tensorflow.sparsity.magnitude.algorithm.MagnitudeSparsityController.disable_scheduler"]], "freeze() (nncf.tensorflow.sparsity.magnitude.algorithm.magnitudesparsitycontroller method)": [[376, "nncf.tensorflow.sparsity.magnitude.algorithm.MagnitudeSparsityController.freeze"]], "nncf.tensorflow.sparsity.magnitude.algorithm": [[376, "module-nncf.tensorflow.sparsity.magnitude.algorithm"]], "set_sparsity_level() (nncf.tensorflow.sparsity.magnitude.algorithm.magnitudesparsitycontroller method)": [[376, "nncf.tensorflow.sparsity.magnitude.algorithm.MagnitudeSparsityController.set_sparsity_level"]], "statistics() (nncf.tensorflow.sparsity.magnitude.algorithm.magnitudesparsitycontroller method)": [[376, "nncf.tensorflow.sparsity.magnitude.algorithm.MagnitudeSparsityController.statistics"]], "nncf.tensorflow.sparsity.magnitude.functions": [[377, "module-nncf.tensorflow.sparsity.magnitude.functions"]], "nncf.tensorflow.sparsity.magnitude": [[378, "module-nncf.tensorflow.sparsity.magnitude"]], "nncf.tensorflow.sparsity.magnitude.operation": [[379, "module-nncf.tensorflow.sparsity.magnitude.operation"]], "rbsparsitycontroller (class in nncf.tensorflow.sparsity.rb.algorithm)": [[380, "nncf.tensorflow.sparsity.rb.algorithm.RBSparsityController"]], "disable_scheduler() (nncf.tensorflow.sparsity.rb.algorithm.rbsparsitycontroller method)": [[380, "nncf.tensorflow.sparsity.rb.algorithm.RBSparsityController.disable_scheduler"]], "freeze() (nncf.tensorflow.sparsity.rb.algorithm.rbsparsitycontroller method)": [[380, "nncf.tensorflow.sparsity.rb.algorithm.RBSparsityController.freeze"]], "nncf.tensorflow.sparsity.rb.algorithm": [[380, "module-nncf.tensorflow.sparsity.rb.algorithm"]], "set_sparsity_level() (nncf.tensorflow.sparsity.rb.algorithm.rbsparsitycontroller method)": [[380, "nncf.tensorflow.sparsity.rb.algorithm.RBSparsityController.set_sparsity_level"]], "statistics() (nncf.tensorflow.sparsity.rb.algorithm.rbsparsitycontroller method)": [[380, "nncf.tensorflow.sparsity.rb.algorithm.RBSparsityController.statistics"]], "nncf.tensorflow.sparsity.rb.functions": [[381, "module-nncf.tensorflow.sparsity.rb.functions"]], "nncf.tensorflow.sparsity.rb": [[382, "module-nncf.tensorflow.sparsity.rb"]], "nncf.tensorflow.sparsity.rb.loss": [[383, "module-nncf.tensorflow.sparsity.rb.loss"]], "nncf.tensorflow.sparsity.rb.operation": [[384, "module-nncf.tensorflow.sparsity.rb.operation"]], "nncf.tensorflow.sparsity.utils": [[385, "module-nncf.tensorflow.sparsity.utils"]], "nncf.tensorflow.tensor": [[386, "module-nncf.tensorflow.tensor"]], "nncf.tensorflow.tensor_statistics.collectors": [[387, "module-nncf.tensorflow.tensor_statistics.collectors"]], "nncf.tensorflow.tensor_statistics": [[388, "module-nncf.tensorflow.tensor_statistics"]], "nncf.tensorflow.tensor_statistics.reduction": [[389, "module-nncf.tensorflow.tensor_statistics.reduction"]], "nncf.tensorflow.tensor_statistics.statistics": [[390, "module-nncf.tensorflow.tensor_statistics.statistics"]], "nncf.tensorflow.tf_internals": [[391, "module-nncf.tensorflow.tf_internals"]], "nncf.tensorflow.utils.hook_handle": [[392, "module-nncf.tensorflow.utils.hook_handle"]], "nncf.tensorflow.utils": [[393, "module-nncf.tensorflow.utils"]], "nncf.tensorflow.utils.node": [[394, "module-nncf.tensorflow.utils.node"]], "nncf.tensorflow.utils.scopes_handle": [[395, "module-nncf.tensorflow.utils.scopes_handle"]], "nncf.tensorflow.utils.state": [[396, "module-nncf.tensorflow.utils.state"]], "nncf.torch.accuracy_aware_training": [[397, "module-nncf.torch.accuracy_aware_training"]], "nncf.torch.accuracy_aware_training.runner": [[398, "module-nncf.torch.accuracy_aware_training.runner"]], "nncf.torch.accuracy_aware_training.utils": [[399, "module-nncf.torch.accuracy_aware_training.utils"]], "nncf.torch.algo_selector": [[400, "module-nncf.torch.algo_selector"]], "nncf.torch.automl.agent.ddpg.ddpg": [[401, "module-nncf.torch.automl.agent.ddpg.ddpg"]], "nncf.torch.automl.agent.ddpg": [[402, "module-nncf.torch.automl.agent.ddpg"]], "nncf.torch.automl.agent.ddpg.memory": [[403, "module-nncf.torch.automl.agent.ddpg.memory"]], "nncf.torch.automl.agent": [[404, "module-nncf.torch.automl.agent"]], "nncf.torch.automl.environment": [[405, "module-nncf.torch.automl.environment"]], "nncf.torch.automl.environment.quantization_env": [[406, "module-nncf.torch.automl.environment.quantization_env"]], "nncf.torch.automl": [[407, "module-nncf.torch.automl"]], "nncf.torch.batchnorm_adaptation": [[408, "module-nncf.torch.batchnorm_adaptation"]], "nncf.torch.binarization.algo": [[409, "module-nncf.torch.binarization.algo"]], "nncf.torch.binarization.binarize_functions": [[410, "module-nncf.torch.binarization.binarize_functions"]], "nncf.torch.binarization.extensions": [[411, "module-nncf.torch.binarization.extensions"]], "nncf.torch.binarization": [[412, "module-nncf.torch.binarization"]], "nncf.torch.binarization.layers": [[413, "module-nncf.torch.binarization.layers"]], "nncf.torch.binarization.reference": [[414, "module-nncf.torch.binarization.reference"]], "nncf.torch.checkpoint_loading": [[415, "module-nncf.torch.checkpoint_loading"]], "nncf.torch.composite_compression": [[416, "module-nncf.torch.composite_compression"]], "nncf.torch.compression_method_api": [[417, "module-nncf.torch.compression_method_api"]], "nncf.torch.debug": [[418, "module-nncf.torch.debug"]], "nncf.torch.dynamic_graph.context": [[419, "module-nncf.torch.dynamic_graph.context"]], "nncf.torch.dynamic_graph.graph": [[420, "module-nncf.torch.dynamic_graph.graph"]], "nncf.torch.dynamic_graph.graph_tracer": [[421, "module-nncf.torch.dynamic_graph.graph_tracer"]], "nncf.torch.dynamic_graph": [[422, "module-nncf.torch.dynamic_graph"]], "nncf.torch.dynamic_graph.io_handling": [[423, "module-nncf.torch.dynamic_graph.io_handling"]], "nncf.torch.dynamic_graph.layer_attributes_handlers": [[424, "module-nncf.torch.dynamic_graph.layer_attributes_handlers"]], "nncf.torch.dynamic_graph.op_input_processing": [[425, "module-nncf.torch.dynamic_graph.op_input_processing"]], "nncf.torch.dynamic_graph.operation_address": [[426, "module-nncf.torch.dynamic_graph.operation_address"]], "nncf.torch.dynamic_graph.patch_pytorch": [[427, "module-nncf.torch.dynamic_graph.patch_pytorch"]], "nncf.torch.dynamic_graph.scope": [[428, "module-nncf.torch.dynamic_graph.scope"]], "nncf.torch.dynamic_graph.scope_access": [[429, "module-nncf.torch.dynamic_graph.scope_access"]], "nncf.torch.dynamic_graph.structs": [[430, "module-nncf.torch.dynamic_graph.structs"]], "nncf.torch.dynamic_graph.trace_functions": [[431, "module-nncf.torch.dynamic_graph.trace_functions"]], "nncf.torch.dynamic_graph.trace_tensor": [[432, "module-nncf.torch.dynamic_graph.trace_tensor"]], "nncf.torch.dynamic_graph.wrappers": [[433, "module-nncf.torch.dynamic_graph.wrappers"]], "nncf.torch.engine": [[434, "module-nncf.torch.engine"]], "nncf.torch.exporter": [[435, "module-nncf.torch.exporter"]], "nncf.torch.extensions": [[436, "module-nncf.torch.extensions"]], "nncf.torch.functions": [[437, "module-nncf.torch.functions"]], "nncf.torch.graph.graph": [[438, "module-nncf.torch.graph.graph"]], "nncf.torch.graph.graph_builder": [[439, "module-nncf.torch.graph.graph_builder"]], "nncf.torch.graph": [[440, "module-nncf.torch.graph"]], "nncf.torch.graph.operator_metatypes": [[441, "module-nncf.torch.graph.operator_metatypes"]], "nncf.torch.graph.pattern_operations": [[442, "module-nncf.torch.graph.pattern_operations"]], "nncf.torch.graph.transformations.commands": [[443, "module-nncf.torch.graph.transformations.commands"]], "nncf.torch.graph.transformations": [[444, "module-nncf.torch.graph.transformations"]], "nncf.torch.graph.transformations.layout": [[445, "module-nncf.torch.graph.transformations.layout"]], "nncf.torch.hardware.config": [[446, "module-nncf.torch.hardware.config"]], "nncf.torch.hardware.fused_patterns": [[447, "module-nncf.torch.hardware.fused_patterns"]], "nncf.torch.hardware": [[448, "module-nncf.torch.hardware"]], "create_compressed_model() (in module nncf.torch)": [[449, "nncf.torch.create_compressed_model"]], "disable_tracing() (in module nncf.torch)": [[449, "nncf.torch.disable_tracing"]], "load_state() (in module nncf.torch)": [[449, "nncf.torch.load_state"]], "nncf.torch": [[449, "module-nncf.torch"]], "nncf.torch.initialization": [[450, "module-nncf.torch.initialization"]], "knowledgedistillationcontroller (class in nncf.torch.knowledge_distillation.algo)": [[451, "nncf.torch.knowledge_distillation.algo.KnowledgeDistillationController"]], "compression_stage() (nncf.torch.knowledge_distillation.algo.knowledgedistillationcontroller method)": [[451, "nncf.torch.knowledge_distillation.algo.KnowledgeDistillationController.compression_stage"]], "distributed() (nncf.torch.knowledge_distillation.algo.knowledgedistillationcontroller method)": [[451, "nncf.torch.knowledge_distillation.algo.KnowledgeDistillationController.distributed"]], "nncf.torch.knowledge_distillation.algo": [[451, "module-nncf.torch.knowledge_distillation.algo"]], "statistics() (nncf.torch.knowledge_distillation.algo.knowledgedistillationcontroller method)": [[451, "nncf.torch.knowledge_distillation.algo.KnowledgeDistillationController.statistics"]], "nncf.torch.knowledge_distillation": [[452, "module-nncf.torch.knowledge_distillation"]], "nncf.torch.knowledge_distillation.knowledge_distillation_handler": [[453, "module-nncf.torch.knowledge_distillation.knowledge_distillation_handler"]], "nncf.torch.knowledge_distillation.knowledge_distillation_loss": [[454, "module-nncf.torch.knowledge_distillation.knowledge_distillation_loss"]], "nncf.torch.layer_utils": [[455, "module-nncf.torch.layer_utils"]], "nncf.torch.layers": [[456, "module-nncf.torch.layers"]], "nncf.torch.model_creation": [[457, "module-nncf.torch.model_creation"]], "nncf.torch.module_operations": [[458, "module-nncf.torch.module_operations"]], "nncf.torch.nested_objects_traversal": [[459, "module-nncf.torch.nested_objects_traversal"]], "nncf.torch.nncf_module_replacement": [[460, "module-nncf.torch.nncf_module_replacement"]], "nncf.torch.nncf_network": [[461, "module-nncf.torch.nncf_network"]], "nncf.torch.pruning.base_algo": [[462, "module-nncf.torch.pruning.base_algo"]], "nncf.torch.pruning.export_utils": [[463, "module-nncf.torch.pruning.export_utils"]], "filterpruningcontroller (class in nncf.torch.pruning.filter_pruning.algo)": [[464, "nncf.torch.pruning.filter_pruning.algo.FilterPruningController"]], "compression_stage() (nncf.torch.pruning.filter_pruning.algo.filterpruningcontroller method)": [[464, "nncf.torch.pruning.filter_pruning.algo.FilterPruningController.compression_stage"]], "disable_scheduler() (nncf.torch.pruning.filter_pruning.algo.filterpruningcontroller method)": [[464, "nncf.torch.pruning.filter_pruning.algo.FilterPruningController.disable_scheduler"]], "get_mask() (nncf.torch.pruning.filter_pruning.algo.filterpruningcontroller static method)": [[464, "nncf.torch.pruning.filter_pruning.algo.FilterPruningController.get_mask"]], "nncf.torch.pruning.filter_pruning.algo": [[464, "module-nncf.torch.pruning.filter_pruning.algo"]], "prepare_for_export() (nncf.torch.pruning.filter_pruning.algo.filterpruningcontroller method)": [[464, "nncf.torch.pruning.filter_pruning.algo.FilterPruningController.prepare_for_export"]], "set_pruning_level() (nncf.torch.pruning.filter_pruning.algo.filterpruningcontroller method)": [[464, "nncf.torch.pruning.filter_pruning.algo.FilterPruningController.set_pruning_level"]], "statistics() (nncf.torch.pruning.filter_pruning.algo.filterpruningcontroller method)": [[464, "nncf.torch.pruning.filter_pruning.algo.FilterPruningController.statistics"]], "strip_model() (nncf.torch.pruning.filter_pruning.algo.filterpruningcontroller method)": [[464, "nncf.torch.pruning.filter_pruning.algo.FilterPruningController.strip_model"]], "nncf.torch.pruning.filter_pruning.functions": [[465, "module-nncf.torch.pruning.filter_pruning.functions"]], "nncf.torch.pruning.filter_pruning.global_ranking.evolutionary_optimization": [[466, "module-nncf.torch.pruning.filter_pruning.global_ranking.evolutionary_optimization"]], "nncf.torch.pruning.filter_pruning.global_ranking": [[467, "module-nncf.torch.pruning.filter_pruning.global_ranking"]], "nncf.torch.pruning.filter_pruning.global_ranking.legr": [[468, "module-nncf.torch.pruning.filter_pruning.global_ranking.legr"]], "nncf.torch.pruning.filter_pruning": [[469, "module-nncf.torch.pruning.filter_pruning"]], "nncf.torch.pruning.filter_pruning.layers": [[470, "module-nncf.torch.pruning.filter_pruning.layers"]], "nncf.torch.pruning": [[471, "module-nncf.torch.pruning"]], "nncf.torch.pruning.operations": [[472, "module-nncf.torch.pruning.operations"]], "nncf.torch.pruning.structs": [[473, "module-nncf.torch.pruning.structs"]], "nncf.torch.pruning.tensor_processor": [[474, "module-nncf.torch.pruning.tensor_processor"]], "nncf.torch.pruning.utils": [[475, "module-nncf.torch.pruning.utils"]], "nncf.torch.quantization.adjust_padding": [[476, "module-nncf.torch.quantization.adjust_padding"]], "quantizationcontroller (class in nncf.torch.quantization.algo)": [[477, "nncf.torch.quantization.algo.QuantizationController"]], "compression_stage() (nncf.torch.quantization.algo.quantizationcontroller method)": [[477, "nncf.torch.quantization.algo.QuantizationController.compression_stage"]], "distributed() (nncf.torch.quantization.algo.quantizationcontroller method)": [[477, "nncf.torch.quantization.algo.QuantizationController.distributed"]], "init_precision() (nncf.torch.quantization.algo.quantizationcontroller method)": [[477, "nncf.torch.quantization.algo.QuantizationController.init_precision"]], "init_range() (nncf.torch.quantization.algo.quantizationcontroller method)": [[477, "nncf.torch.quantization.algo.QuantizationController.init_range"]], "nncf.torch.quantization.algo": [[477, "module-nncf.torch.quantization.algo"]], "prepare_for_export() (nncf.torch.quantization.algo.quantizationcontroller method)": [[477, "nncf.torch.quantization.algo.QuantizationController.prepare_for_export"]], "statistics() (nncf.torch.quantization.algo.quantizationcontroller method)": [[477, "nncf.torch.quantization.algo.QuantizationController.statistics"]], "strip_model() (nncf.torch.quantization.algo.quantizationcontroller method)": [[477, "nncf.torch.quantization.algo.QuantizationController.strip_model"]], "nncf.torch.quantization.default_quantization": [[478, "module-nncf.torch.quantization.default_quantization"]], "nncf.torch.quantization.extensions": [[479, "module-nncf.torch.quantization.extensions"]], "nncf.torch.quantization.hessian_trace": [[480, "module-nncf.torch.quantization.hessian_trace"]], "nncf.torch.quantization": [[481, "module-nncf.torch.quantization"]], "nncf.torch.quantization.init_precision": [[482, "module-nncf.torch.quantization.init_precision"]], "nncf.torch.quantization.init_range": [[483, "module-nncf.torch.quantization.init_range"]], "nncf.torch.quantization.layers": [[484, "module-nncf.torch.quantization.layers"]], "nncf.torch.quantization.metrics": [[485, "module-nncf.torch.quantization.metrics"]], "nncf.torch.quantization.precision_constraints": [[486, "module-nncf.torch.quantization.precision_constraints"]], "nncf.torch.quantization.precision_init.adjacent_quantizers": [[487, "module-nncf.torch.quantization.precision_init.adjacent_quantizers"]], "nncf.torch.quantization.precision_init.autoq_init": [[488, "module-nncf.torch.quantization.precision_init.autoq_init"]], "nncf.torch.quantization.precision_init.base_init": [[489, "module-nncf.torch.quantization.precision_init.base_init"]], "nncf.torch.quantization.precision_init.bitwidth_graph": [[490, "module-nncf.torch.quantization.precision_init.bitwidth_graph"]], "nncf.torch.quantization.precision_init.compression_ratio": [[491, "module-nncf.torch.quantization.precision_init.compression_ratio"]], "nncf.torch.quantization.precision_init.hawq_debug": [[492, "module-nncf.torch.quantization.precision_init.hawq_debug"]], "nncf.torch.quantization.precision_init.hawq_init": [[493, "module-nncf.torch.quantization.precision_init.hawq_init"]], "nncf.torch.quantization.precision_init": [[494, "module-nncf.torch.quantization.precision_init"]], "nncf.torch.quantization.precision_init.manual_init": [[495, "module-nncf.torch.quantization.precision_init.manual_init"]], "nncf.torch.quantization.precision_init.perturbations": [[496, "module-nncf.torch.quantization.precision_init.perturbations"]], "nncf.torch.quantization.precision_init.traces_order": [[497, "module-nncf.torch.quantization.precision_init.traces_order"]], "nncf.torch.quantization.quantize": [[498, "module-nncf.torch.quantization.quantize"]], "nncf.torch.quantization.quantize_functions": [[499, "module-nncf.torch.quantization.quantize_functions"]], "nncf.torch.quantization.reference": [[500, "module-nncf.torch.quantization.reference"]], "nncf.torch.quantization.schedulers": [[501, "module-nncf.torch.quantization.schedulers"]], "nncf.torch.quantization.statistics": [[502, "module-nncf.torch.quantization.statistics"]], "nncf.torch.quantization.strip": [[503, "module-nncf.torch.quantization.strip"]], "nncf.torch.quantization.structs": [[504, "module-nncf.torch.quantization.structs"]], "nncf.torch.quantization.translator": [[505, "module-nncf.torch.quantization.translator"]], "basesparsityalgocontroller (class in nncf.torch.sparsity.base_algo)": [[506, "nncf.torch.sparsity.base_algo.BaseSparsityAlgoController"]], "compression_stage() (nncf.torch.sparsity.base_algo.basesparsityalgocontroller method)": [[506, "nncf.torch.sparsity.base_algo.BaseSparsityAlgoController.compression_stage"]], "disable_scheduler() (nncf.torch.sparsity.base_algo.basesparsityalgocontroller method)": [[506, "nncf.torch.sparsity.base_algo.BaseSparsityAlgoController.disable_scheduler"]], "nncf.torch.sparsity.base_algo": [[506, "module-nncf.torch.sparsity.base_algo"]], "strip_model() (nncf.torch.sparsity.base_algo.basesparsityalgocontroller method)": [[506, "nncf.torch.sparsity.base_algo.BaseSparsityAlgoController.strip_model"]], "nncf.torch.sparsity.collector": [[507, "module-nncf.torch.sparsity.collector"]], "constsparsitycontroller (class in nncf.torch.sparsity.const.algo)": [[508, "nncf.torch.sparsity.const.algo.ConstSparsityController"]], "freeze() (nncf.torch.sparsity.const.algo.constsparsitycontroller method)": [[508, "nncf.torch.sparsity.const.algo.ConstSparsityController.freeze"]], "nncf.torch.sparsity.const.algo": [[508, "module-nncf.torch.sparsity.const.algo"]], "set_sparsity_level() (nncf.torch.sparsity.const.algo.constsparsitycontroller method)": [[508, "nncf.torch.sparsity.const.algo.ConstSparsityController.set_sparsity_level"]], "statistics() (nncf.torch.sparsity.const.algo.constsparsitycontroller method)": [[508, "nncf.torch.sparsity.const.algo.ConstSparsityController.statistics"]], "nncf.torch.sparsity.const": [[509, "module-nncf.torch.sparsity.const"]], "nncf.torch.sparsity.functions": [[510, "module-nncf.torch.sparsity.functions"]], "nncf.torch.sparsity": [[511, "module-nncf.torch.sparsity"]], "nncf.torch.sparsity.layers": [[512, "module-nncf.torch.sparsity.layers"]], "magnitudesparsitycontroller (class in nncf.torch.sparsity.magnitude.algo)": [[513, "nncf.torch.sparsity.magnitude.algo.MagnitudeSparsityController"]], "compression_stage() (nncf.torch.sparsity.magnitude.algo.magnitudesparsitycontroller method)": [[513, "nncf.torch.sparsity.magnitude.algo.MagnitudeSparsityController.compression_stage"]], "freeze() (nncf.torch.sparsity.magnitude.algo.magnitudesparsitycontroller method)": [[513, "nncf.torch.sparsity.magnitude.algo.MagnitudeSparsityController.freeze"]], "nncf.torch.sparsity.magnitude.algo": [[513, "module-nncf.torch.sparsity.magnitude.algo"]], "set_sparsity_level() (nncf.torch.sparsity.magnitude.algo.magnitudesparsitycontroller method)": [[513, "nncf.torch.sparsity.magnitude.algo.MagnitudeSparsityController.set_sparsity_level"]], "statistics() (nncf.torch.sparsity.magnitude.algo.magnitudesparsitycontroller method)": [[513, "nncf.torch.sparsity.magnitude.algo.MagnitudeSparsityController.statistics"]], "nncf.torch.sparsity.magnitude.functions": [[514, "module-nncf.torch.sparsity.magnitude.functions"]], "nncf.torch.sparsity.magnitude": [[515, "module-nncf.torch.sparsity.magnitude"]], "rbsparsitycontroller (class in nncf.torch.sparsity.rb.algo)": [[516, "nncf.torch.sparsity.rb.algo.RBSparsityController"]], "compression_stage() (nncf.torch.sparsity.rb.algo.rbsparsitycontroller method)": [[516, "nncf.torch.sparsity.rb.algo.RBSparsityController.compression_stage"]], "distributed() (nncf.torch.sparsity.rb.algo.rbsparsitycontroller method)": [[516, "nncf.torch.sparsity.rb.algo.RBSparsityController.distributed"]], "freeze() (nncf.torch.sparsity.rb.algo.rbsparsitycontroller method)": [[516, "nncf.torch.sparsity.rb.algo.RBSparsityController.freeze"]], "nncf.torch.sparsity.rb.algo": [[516, "module-nncf.torch.sparsity.rb.algo"]], "set_sparsity_level() (nncf.torch.sparsity.rb.algo.rbsparsitycontroller method)": [[516, "nncf.torch.sparsity.rb.algo.RBSparsityController.set_sparsity_level"]], "statistics() (nncf.torch.sparsity.rb.algo.rbsparsitycontroller method)": [[516, "nncf.torch.sparsity.rb.algo.RBSparsityController.statistics"]], "nncf.torch.sparsity.rb.functions": [[517, "module-nncf.torch.sparsity.rb.functions"]], "nncf.torch.sparsity.rb": [[518, "module-nncf.torch.sparsity.rb"]], "nncf.torch.sparsity.rb.layers": [[519, "module-nncf.torch.sparsity.rb.layers"]], "nncf.torch.sparsity.rb.loss": [[520, "module-nncf.torch.sparsity.rb.loss"]], "nncf.torch.statistics.aggregator": [[521, "module-nncf.torch.statistics.aggregator"]], "nncf.torch.statistics": [[522, "module-nncf.torch.statistics"]], "autoqprecisioninitargs (class in nncf.torch.structures)": [[523, "nncf.torch.structures.AutoQPrecisionInitArgs"]], "distributedcallbacksargs (class in nncf.torch.structures)": [[523, "nncf.torch.structures.DistributedCallbacksArgs"]], "executionparameters (class in nncf.torch.structures)": [[523, "nncf.torch.structures.ExecutionParameters"]], "legrinitargs (class in nncf.torch.structures)": [[523, "nncf.torch.structures.LeGRInitArgs"]], "quantizationprecisioninitargs (class in nncf.torch.structures)": [[523, "nncf.torch.structures.QuantizationPrecisionInitArgs"]], "nncf.torch.structures": [[523, "module-nncf.torch.structures"]], "nncf.torch.tensor": [[524, "module-nncf.torch.tensor"]], "nncf.torch.tensor_statistics.algo": [[525, "module-nncf.torch.tensor_statistics.algo"]], "nncf.torch.tensor_statistics.collectors": [[526, "module-nncf.torch.tensor_statistics.collectors"]], "nncf.torch.tensor_statistics": [[527, "module-nncf.torch.tensor_statistics"]], "nncf.torch.tensor_statistics.reduction": [[528, "module-nncf.torch.tensor_statistics.reduction"]], "nncf.torch.tensor_statistics.statistics": [[529, "module-nncf.torch.tensor_statistics.statistics"]], "nncf.torch.utils": [[530, "module-nncf.torch.utils"]], "nncf.version": [[531, "module-nncf.version"]]}})